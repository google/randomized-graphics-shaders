var<private> gl_FragCoord : vec4<f32>;

var<private> color : vec4<f32>;

fn main_1() {
  var row : f32;
  var column : f32;
  var scalar : f32;
  var vector_1 : vec3<f32>;
  var vector_2 : vec3<f32>;
  var matrix_1 : mat3x3<f32>;
  var matrix_2 : mat3x3<f32>;
  let x_16 : f32 = gl_FragCoord.x;
  let x_433 : vec3<f32> = vec3<f32>(1.0, x_16, 1.0);
  let x_329 : vec3<f32> = vec3<f32>(x_16, 0.0, 0.0);
  let x_434 : vec4<f32> = vec4<f32>(vec3<f32>(0.0, 0.0, 0.0), 0.0);
  let x_23 : f32 = f32((1 + (i32(x_16) / 16)));
  row = x_23;
  let x_378 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(0.0, 0.0, 0.0), x_329, x_329);
  let x_435 : vec4<f32> = vec4<f32>(0.0, x_23, x_23, x_16);
  let x_27 : f32 = gl_FragCoord.y;
  let x_379 : vec4<f32> = vec4<f32>(x_329, x_16);
  let x_330 : vec4<f32> = vec4<f32>(x_16, x_23, x_23, x_16);
  let x_436 : vec3<f32> = vec3<f32>(0.0, 1.0, 0.0);
  let x_437 : vec3<f32> = vec3<f32>(x_27, 1.0, 1.0);
  let x_380 : vec4<f32> = vec4<f32>(1.0, 0.0, 0.0, x_16);
  let x_438 : vec3<f32> = vec3<f32>(x_16, x_16, 0.0);
  let x_31 : f32 = f32(((i32(x_27) / bitcast<i32>(16u)) + 1));
  column = x_31;
  scalar = 1.0;
  let x_37 : f32 = scalar;
  let x_439 : vec3<f32> = vec3<f32>(x_31, 0.0, x_16);
  let x_38 : f32 = (x_37 + 1.0);
  let x_381 : vec4<f32> = vec4<f32>(0.0, x_38, 0.0, 0.0);
  let x_440 : vec3<f32> = vec3<f32>(x_16, 0.0, x_37);
  scalar = x_38;
  let x_331 : vec4<f32> = vec4<f32>(x_23, 1.0, 1.0, x_37);
  let x_39 : f32 = row;
  let x_40 : f32 = (x_39 * x_37);
  let x_441 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(0.0, 0.0, 0.0), x_329, vec3<f32>(0.0, 0.0, 0.0));
  let x_382 : mat3x3<f32> = mat3x3<f32>(x_329, vec3<f32>(0.0, 0.0, 0.0), vec3<f32>(0.0, 0.0, 0.0));
  let x_332 : vec3<f32> = vec3<f32>(x_23, x_38, x_23);
  let x_41 : f32 = scalar;
  let x_333 : vec3<f32> = vec3<f32>(x_16, x_39, x_38);
  let x_383 : vec3<f32> = vec3<f32>(x_39, x_39, 1.0);
  let x_42 : f32 = (1.0 + x_41);
  scalar = x_42;
  let x_442 : vec3<f32> = vec3<f32>(0.0, x_37, x_23);
  let x_43 : f32 = column;
  let x_443 : mat3x3<f32> = mat3x3<f32>(x_333, x_333, x_383);
  let x_44 : f32 = (x_43 * x_41);
  let x_45 : f32 = scalar;
  let x_46 : f32 = (x_45 + 1.0);
  scalar = x_46;
  let x_47 : f32 = row;
  let x_48 : f32 = (x_45 * x_47);
  let x_49 : f32 = column;
  let x_336 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(0.0, 0.0, 0.0), vec3<f32>(0.0, 0.0, 0.0), vec3<f32>(0.0, 0.0, 0.0));
  let x_50 : f32 = (x_49 * x_48);
  let x_444 : mat3x3<f32> = mat3x3<f32>(x_332, x_332, x_332);
  let x_384 : mat3x3<f32> = mat3x3<f32>(x_329, x_329, vec3<f32>(0.0, 0.0, 0.0));
  let x_337 : vec4<f32> = vec4<f32>(x_37, x_47, x_41, x_46);
  let x_51 : vec3<f32> = vec3<f32>(x_40, x_44, x_50);
  vector_1 = x_51;
  let x_338 : vec4<f32> = vec4<f32>(x_42, x_50, x_48, x_42);
  let x_445 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(0.0, 0.0, 0.0), x_329, x_51);
  let x_53 : f32 = scalar;
  let x_339 : mat3x3<f32> = mat3x3<f32>(x_51, x_51, x_51);
  let x_446 : vec3<f32> = vec3<f32>(x_43, x_31, x_39);
  let x_54 : f32 = (1.0 + x_53);
  let x_447 : mat3x3<f32> = mat3x3<f32>(x_333, x_383, x_333);
  scalar = x_54;
  let x_55 : f32 = row;
  let x_448 : mat3x3<f32> = mat3x3<f32>(x_51, x_51, x_383);
  let x_56 : f32 = (x_55 * x_53);
  let x_57 : f32 = scalar;
  let x_58 : f32 = (1.0 + x_57);
  scalar = x_58;
  let x_59 : f32 = column;
  let x_340 : vec3<f32> = vec3<f32>(x_43, x_16, x_56);
  let x_60 : f32 = (x_59 * x_57);
  let x_61 : f32 = scalar;
  let x_341 : vec3<f32> = vec3<f32>(x_38, x_23, x_27);
  let x_449 : vec4<f32> = vec4<f32>(x_50, x_37, x_58, x_42);
  let x_62 : f32 = (x_61 + 1.0);
  let x_342 : vec3<f32> = vec3<f32>(x_60, x_53, x_37);
  scalar = x_62;
  let x_450 : vec4<f32> = vec4<f32>(x_56, 1.0, x_47, x_53);
  let x_63 : f32 = row;
  let x_385 : vec3<f32> = vec3<f32>(x_49, x_46, 1.0);
  let x_64 : f32 = (x_63 * x_61);
  let x_343 : vec4<f32> = vec4<f32>(x_59, x_54, x_43, x_55);
  let x_451 : mat3x3<f32> = mat3x3<f32>(x_332, x_342, x_332);
  let x_65 : f32 = column;
  let x_66 : f32 = (x_64 * x_65);
  let x_452 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(0.0, 0.0, 0.0), x_333, vec3<f32>(0.0, 0.0, 0.0));
  let x_344 : vec3<f32> = vec3<f32>(x_40, x_27, x_57);
  let x_387 : mat3x3<f32> = mat3x3<f32>(x_332, x_340, x_342);
  let x_67 : vec3<f32> = vec3<f32>(x_56, x_60, x_66);
  let x_345 : mat3x3<f32> = mat3x3<f32>(x_67, x_67, x_51);
  vector_2 = x_67;
  let x_453 : mat3x3<f32> = mat3x3<f32>(x_51, x_341, x_342);
  let x_388 : vec3<f32> = vec3<f32>(0.0, x_66, x_58);
  let x_71 : f32 = scalar;
  let x_72 : f32 = (1.0 + x_71);
  scalar = x_72;
  let x_454 : mat3x3<f32> = mat3x3<f32>(x_344, x_383, x_344);
  let x_346 : vec3<f32> = vec3<f32>(x_37, x_45, x_41);
  let x_73 : f32 = row;
  let x_74 : f32 = (x_73 * x_71);
  let x_75 : f32 = scalar;
  let x_76 : f32 = (x_75 + 1.0);
  let x_455 : vec3<f32> = vec3<f32>(x_55, x_73, x_48);
  scalar = x_76;
  let x_77 : f32 = column;
  let x_78 : f32 = (x_77 * x_75);
  let x_347 : vec4<f32> = vec4<f32>(x_38, x_40, x_78, x_47);
  let x_79 : f32 = scalar;
  let x_348 : vec4<f32> = vec4<f32>(x_39, x_51);
  let x_80 : f32 = (1.0 + x_79);
  let x_456 : vec3<f32> = vec3<f32>(x_75, x_78, x_59);
  let x_390 : mat3x3<f32> = mat3x3<f32>(x_51, x_51, x_342);
  scalar = x_80;
  let x_81 : f32 = row;
  let x_82 : f32 = (x_79 * x_81);
  let x_349 : vec4<f32> = vec4<f32>(x_72, x_78, x_45, x_48);
  let x_83 : f32 = column;
  let x_350 : vec3<f32> = vec3<f32>(x_65, x_55, x_38);
  let x_84 : f32 = (x_83 * x_82);
  let x_85 : f32 = scalar;
  let x_86 : f32 = (x_85 + 1.0);
  scalar = x_86;
  let x_87 : f32 = row;
  let x_88 : f32 = (x_85 * x_87);
  let x_89 : f32 = scalar;
  let x_90 : f32 = (1.0 + x_89);
  let x_457 : vec4<f32> = vec4<f32>(x_49, x_49, x_46, x_72);
  scalar = x_90;
  let x_351 : vec4<f32> = vec4<f32>(x_31, x_76, x_31, x_77);
  let x_392 : vec3<f32> = vec3<f32>(x_27, x_38, x_50);
  let x_91 : f32 = column;
  let x_92 : f32 = (x_89 * x_91);
  let x_93 : f32 = scalar;
  let x_393 : vec4<f32> = vec4<f32>(x_43, x_346);
  let x_458 : vec4<f32> = vec4<f32>(x_86, x_50, x_76, x_23);
  let x_94 : f32 = (1.0 + x_93);
  let x_394 : vec4<f32> = vec4<f32>(x_37, x_81, 0.0, x_41);
  scalar = x_94;
  let x_352 : vec3<f32> = vec3<f32>(x_63, x_79, x_62);
  let x_95 : f32 = row;
  let x_96 : f32 = (x_95 * x_93);
  let x_97 : f32 = column;
  let x_98 : f32 = (x_97 * x_96);
  let x_459 : vec4<f32> = vec4<f32>(x_38, x_75, x_49, x_96);
  let x_99 : f32 = scalar;
  let x_353 : vec4<f32> = vec4<f32>(x_92, x_80, x_45, x_59);
  let x_100 : f32 = (1.0 + x_99);
  scalar = x_100;
  let x_101 : f32 = row;
  let x_460 : vec3<f32> = vec3<f32>(x_101, x_48, x_85);
  let x_354 : vec4<f32> = vec4<f32>(x_56, x_55, x_98, x_38);
  let x_103 : f32 = scalar;
  let x_104 : f32 = (x_103 + 1.0);
  scalar = x_104;
  let x_461 : vec4<f32> = vec4<f32>(x_44, x_57, x_64, x_74);
  let x_355 : vec3<f32> = vec3<f32>(x_66, x_39, x_94);
  let x_105 : f32 = column;
  let x_106 : f32 = (x_103 * x_105);
  let x_356 : vec4<f32> = vec4<f32>(x_72, x_74, x_75, x_92);
  let x_107 : f32 = scalar;
  let x_462 : vec3<f32> = vec3<f32>(x_59, 0.0, x_65);
  let x_108 : f32 = (1.0 + x_107);
  let x_463 : vec3<f32> = vec3<f32>(x_73, x_62, x_64);
  scalar = x_108;
  let x_357 : vec4<f32> = vec4<f32>(x_75, x_85, x_105, x_64);
  let x_395 : vec3<f32> = vec3<f32>(x_108, x_65, 0.0);
  let x_109 : f32 = row;
  let x_396 : vec3<f32> = vec3<f32>(x_109, x_49, x_31);
  let x_464 : vec3<f32> = vec3<f32>(x_40, x_75, x_78);
  let x_110 : f32 = (x_107 * x_109);
  let x_111 : f32 = column;
  let x_112 : f32 = (x_110 * x_111);
  let x_465 : vec3<f32> = vec3<f32>(x_85, x_49, x_62);
  let x_358 : vec3<f32> = vec3<f32>(x_75, x_41, x_71);
  let x_397 : vec4<f32> = vec4<f32>(x_77, x_101, x_50, x_77);
  let x_114 : vec3<f32> = vec3<f32>(x_74, x_78, x_84);
  let x_466 : vec4<f32> = vec4<f32>(x_101, x_329);
  let x_115 : vec3<f32> = vec3<f32>(x_88, x_92, x_98);
  let x_398 : vec3<f32> = vec3<f32>(x_90, x_80, x_86);
  let x_116 : vec3<f32> = vec3<f32>((x_99 * x_101), x_106, x_112);
  let x_399 : mat3x3<f32> = mat3x3<f32>(x_358, x_342, x_340);
  matrix_1 = mat3x3<f32>(x_114, x_115, x_116);
  let x_119 : f32 = scalar;
  let x_400 : vec3<f32> = vec3<f32>(x_103, x_44, 1.0);
  let x_359 : vec4<f32> = vec4<f32>(x_115, x_90);
  let x_120 : f32 = (x_119 + 1.0);
  let x_467 : vec3<f32> = vec3<f32>(x_46, x_101, x_55);
  scalar = x_120;
  let x_360 : vec4<f32> = vec4<f32>(x_49, x_97, x_65, x_88);
  let x_121 : f32 = row;
  let x_401 : vec3<f32> = vec3<f32>(x_57, x_59, x_103);
  let x_122 : f32 = (x_121 * x_119);
  let x_402 : mat3x3<f32> = mat3x3<f32>(x_352, vec3<f32>(0.0, 0.0, 0.0), x_344);
  let x_123 : f32 = scalar;
  let x_124 : f32 = (x_123 + 1.0);
  scalar = x_124;
  let x_125 : f32 = column;
  let x_126 : f32 = (x_125 * x_123);
  let x_403 : vec3<f32> = vec3<f32>(x_47, x_78, x_47);
  let x_127 : f32 = scalar;
  let x_128 : f32 = (1.0 + x_127);
  scalar = x_128;
  let x_404 : vec4<f32> = vec4<f32>(x_42, x_104, x_101, x_95);
  let x_129 : f32 = row;
  let x_130 : f32 = (x_127 * x_129);
  let x_131 : f32 = column;
  let x_132 : f32 = (x_131 * x_130);
  let x_133 : f32 = scalar;
  let x_361 : mat3x3<f32> = mat3x3<f32>(x_115, x_115, x_51);
  let x_468 : vec4<f32> = vec4<f32>(x_83, x_79, x_59, x_39);
  let x_405 : mat3x3<f32> = mat3x3<f32>(x_355, x_358, x_346);
  let x_134 : f32 = (1.0 + x_133);
  let x_469 : vec3<f32> = vec3<f32>(x_49, x_93, x_110);
  scalar = x_134;
  let x_135 : f32 = row;
  let x_136 : f32 = (x_135 * x_133);
  let x_362 : vec4<f32> = vec4<f32>(x_27, x_39, x_120, x_97);
  let x_137 : f32 = scalar;
  let x_138 : f32 = (x_137 + 1.0);
  scalar = x_138;
  let x_139 : f32 = column;
  let x_470 : vec4<f32> = vec4<f32>(x_125, x_50, x_87, x_132);
  let x_140 : f32 = (x_139 * x_137);
  let x_407 : vec3<f32> = vec3<f32>(x_50, x_138, x_81);
  let x_471 : vec4<f32> = vec4<f32>(x_396, x_100);
  let x_141 : f32 = scalar;
  let x_472 : vec3<f32> = vec3<f32>(x_54, x_108, x_74);
  let x_142 : f32 = (x_141 + 1.0);
  let x_473 : mat3x3<f32> = mat3x3<f32>(x_67, vec3<f32>(0.0, 0.0, 0.0), vec3<f32>(x_41, x_54, x_125));
  let x_408 : vec3<f32> = vec3<f32>(x_72, x_138, x_104);
  scalar = x_142;
  let x_409 : vec4<f32> = vec4<f32>(x_31, x_88, x_135, x_99);
  let x_474 : vec4<f32> = vec4<f32>(vec3<f32>(x_43, x_59, x_44), x_63);
  let x_143 : f32 = row;
  let x_144 : f32 = (x_141 * x_143);
  let x_145 : f32 = column;
  let x_475 : mat3x3<f32> = mat3x3<f32>(x_350, vec3<f32>(x_55, x_60, 1.0), x_396);
  let x_363 : vec3<f32> = vec3<f32>(x_63, x_143, x_95);
  let x_146 : f32 = (x_144 * x_145);
  let x_410 : vec4<f32> = vec4<f32>(x_61, x_122, x_50, x_42);
  let x_147 : f32 = scalar;
  let x_476 : mat3x3<f32> = mat3x3<f32>(x_383, x_352, x_407);
  let x_477 : mat3x3<f32> = mat3x3<f32>(x_407, vec3<f32>(0.0, 0.0, 0.0), x_363);
  scalar = (1.0 + x_147);
  let x_149 : f32 = row;
  let x_364 : mat3x3<f32> = mat3x3<f32>(x_51, x_116, x_67);
  let x_411 : mat3x3<f32> = mat3x3<f32>(x_341, x_358, x_114);
  let x_151 : f32 = scalar;
  let x_412 : mat3x3<f32> = mat3x3<f32>(x_67, x_355, x_344);
  let x_152 : f32 = (1.0 + x_151);
  scalar = x_152;
  let x_413 : mat3x3<f32> = mat3x3<f32>(x_344, x_363, x_350);
  let x_153 : f32 = column;
  let x_154 : f32 = (x_151 * x_153);
  let x_478 : vec4<f32> = vec4<f32>(x_41, x_37, x_132, x_106);
  let x_365 : vec4<f32> = vec4<f32>(x_137, x_141, x_124, x_123);
  let x_479 : mat3x3<f32> = mat3x3<f32>(x_51, x_388, x_396);
  let x_414 : mat3x3<f32> = mat3x3<f32>(x_355, x_352, x_340);
  let x_155 : f32 = scalar;
  let x_480 : vec3<f32> = vec3<f32>(x_63, x_41, x_40);
  let x_415 : vec4<f32> = vec4<f32>(x_37, x_100, x_108, x_92);
  let x_156 : f32 = (1.0 + x_155);
  scalar = x_156;
  let x_157 : f32 = row;
  let x_481 : vec3<f32> = vec3<f32>(x_58, x_84, x_106);
  let x_367 : vec4<f32> = vec4<f32>(x_130, x_147, x_47, x_82);
  let x_158 : f32 = (x_157 * x_155);
  let x_159 : f32 = column;
  let x_161 : vec3<f32> = vec3<f32>(x_122, x_126, x_132);
  let x_482 : mat3x3<f32> = mat3x3<f32>(x_407, x_116, x_332);
  let x_162 : vec3<f32> = vec3<f32>(x_136, x_140, x_146);
  let x_163 : vec3<f32> = vec3<f32>((x_147 * x_149), x_154, (x_159 * x_158));
  let x_368 : mat3x3<f32> = mat3x3<f32>(x_51, x_51, x_163);
  matrix_2 = mat3x3<f32>(x_161, x_162, x_163);
  let x_167 : f32 = scalar;
  let x_483 : vec4<f32> = vec4<f32>(x_90, x_57, x_121, x_97);
  scalar = (1.0 + x_167);
  let x_169 : vec3<f32> = vector_1;
  let x_369 : mat3x3<f32> = mat3x3<f32>(x_162, x_116, x_67);
  let x_417 : mat3x3<f32> = mat3x3<f32>(x_355, x_161, x_51);
  let x_170 : vec3<f32> = (x_169 * x_167);
  let x_484 : vec4<f32> = vec4<f32>(x_146, x_145, x_84, x_96);
  let x_171 : vec4<f32> = color;
  color = vec4<f32>(x_170.x, x_170.y, x_170.z, x_171.w);
  let x_173 : f32 = scalar;
  let x_418 : vec4<f32> = vec4<f32>(x_85, x_41, x_31, x_173);
  let x_485 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(x_111, x_85, x_50), x_355, x_363);
  scalar = (x_173 + 1.0);
  let x_175 : mat3x3<f32> = matrix_1;
  let x_419 : vec4<f32> = vec4<f32>(x_162, x_149);
  let x_486 : vec4<f32> = vec4<f32>(x_41, x_82, x_134, x_61);
  let x_420 : mat3x3<f32> = mat3x3<f32>(x_350, x_341, x_340);
  let x_177 : vec4<f32> = color;
  let x_487 : vec4<f32> = vec4<f32>(x_130, x_142, x_94, x_142);
  let x_179 : vec3<f32> = (vec3<f32>(x_177.x, x_177.y, x_177.z) * (x_175 * x_173));
  let x_180 : vec4<f32> = color;
  let x_371 : vec3<f32> = vec3<f32>(x_45, x_97, x_110);
  color = vec4<f32>(x_179.x, x_179.y, x_179.z, x_180.w);
  let x_182 : vec3<f32> = vector_1;
  let x_183 : mat3x3<f32> = matrix_1;
  let x_488 : mat3x3<f32> = mat3x3<f32>(x_333, x_67, x_161);
  let x_184 : vec3<f32> = (x_182 * x_183);
  let x_489 : vec4<f32> = vec4<f32>(vec3<f32>(x_56, x_27, x_39), x_49);
  let x_185 : vec4<f32> = color;
  let x_186 : vec3<f32> = vec3<f32>(x_185.x, x_185.y, x_185.z);
  let x_187 : vec3<f32> = (x_186 + x_184);
  let x_188 : vec4<f32> = color;
  color = vec4<f32>(x_187.x, x_187.y, x_187.z, x_188.w);
  let x_190 : mat3x3<f32> = matrix_1;
  let x_191 : vec3<f32> = vector_1;
  let x_192 : vec3<f32> = (x_190 * x_191);
  let x_193 : vec4<f32> = color;
  let x_490 : vec3<f32> = vec3<f32>(x_135, x_106, x_39);
  let x_491 : vec4<f32> = vec4<f32>(x_161, x_129);
  let x_372 : vec4<f32> = vec4<f32>(x_122, x_66, x_129, x_136);
  let x_195 : vec3<f32> = (vec3<f32>(x_193.x, x_193.y, x_193.z) + x_192);
  let x_196 : vec4<f32> = color;
  let x_373 : vec4<f32> = vec4<f32>(x_64, x_27, x_44, x_133);
  color = vec4<f32>(x_195.x, x_195.y, x_195.z, x_196.w);
  let x_492 : mat3x3<f32> = mat3x3<f32>(x_398, x_332, x_388);
  let x_198 : mat3x3<f32> = matrix_1;
  let x_199 : mat3x3<f32> = matrix_2;
  let x_493 : mat3x3<f32> = mat3x3<f32>(x_116, x_187, x_116);
  let x_201 : vec4<f32> = color;
  let x_203 : vec3<f32> = (vec3<f32>(x_201.x, x_201.y, x_201.z) * (x_198 * x_199));
  let x_204 : vec4<f32> = color;
  let x_421 : vec3<f32> = vec3<f32>(x_92, x_140, x_54);
  color = vec4<f32>(x_203.x, x_203.y, x_203.z, x_204.w);
  let x_494 : vec4<f32> = vec4<f32>(x_155, x_146, x_141, x_158);
  let x_206 : vec3<f32> = vector_1;
  let x_422 : vec4<f32> = vec4<f32>(x_58, x_76, x_37, 0.0);
  let x_207 : vec3<f32> = vector_2;
  let x_423 : vec4<f32> = vec4<f32>(x_99, x_93, x_158, x_156);
  let x_208 : mat3x3<f32> = mat3x3<f32>(vec3<f32>((x_207.x * x_206.x), (x_207.x * x_206.y), (x_207.x * x_206.z)), vec3<f32>((x_207.y * x_206.x), (x_207.y * x_206.y), (x_207.y * x_206.z)), vec3<f32>((x_207.z * x_206.x), (x_207.z * x_206.y), (x_207.z * x_206.z)));
  let x_209 : vec4<f32> = color;
  let x_210 : vec3<f32> = vec3<f32>(x_209.x, x_209.y, x_209.z);
  let x_424 : vec4<f32> = vec4<f32>(x_41, x_350);
  let x_211 : vec3<f32> = (x_210 * x_208);
  let x_212 : vec4<f32> = color;
  let x_495 : vec4<f32> = vec4<f32>(x_182, x_75);
  let x_425 : vec4<f32> = vec4<f32>(x_115, x_71);
  let x_496 : vec4<f32> = vec4<f32>(x_342, x_119);
  color = vec4<f32>(x_211.x, x_211.y, x_211.z, x_212.w);
  let x_214 : vec3<f32> = vector_1;
  let x_215 : vec3<f32> = vector_2;
  let x_426 : vec3<f32> = vec3<f32>(x_42, x_63, x_109);
  let x_497 : vec4<f32> = vec4<f32>(x_105, x_141, x_137, x_142);
  let x_217 : vec4<f32> = color;
  let x_219 : vec3<f32> = (vec3<f32>(x_217.x, x_217.y, x_217.z) * dot(x_214, x_215));
  let x_498 : vec3<f32> = vec3<f32>(x_146, x_143, x_152);
  let x_427 : vec3<f32> = vec3<f32>(x_56, x_157, x_23);
  let x_499 : vec3<f32> = vec3<f32>(x_59, x_61, x_95);
  let x_374 : mat3x3<f32> = mat3x3<f32>(x_184, x_214, x_161);
  let x_500 : mat3x3<f32> = mat3x3<f32>(x_398, x_342, vec3<f32>(x_146, x_151, x_154));
  let x_428 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(0.0, 0.0, 0.0), x_115, x_186);
  let x_220 : vec4<f32> = color;
  let x_429 : mat3x3<f32> = mat3x3<f32>(vec3<f32>(x_56, x_111, x_112), x_192, x_210);
  color = vec4<f32>(x_219.x, x_219.y, x_219.z, x_220.w);
  let x_375 : vec4<f32> = vec4<f32>(x_163, x_62);
  let x_501 : vec3<f32> = vec3<f32>(x_145, x_49, x_87);
  let x_222 : vec4<f32> = color;
  let x_502 : vec4<f32> = vec4<f32>(x_126, x_138, x_42, x_55);
  let x_430 : vec3<f32> = vec3<f32>(x_120, x_40, x_47);
  let x_503 : vec3<f32> = vec3<f32>(x_144, x_145, x_106);
  let x_224 : vec3<f32> = sin(vec3<f32>(x_222.x, x_222.y, x_222.z));
  let x_376 : vec3<f32> = vec3<f32>(x_49, x_76, x_57);
  let x_504 : vec3<f32> = vec3<f32>(x_85, x_39, x_93);
  let x_505 : vec3<f32> = vec3<f32>(x_78, x_48, x_94);
  let x_431 : vec4<f32> = vec4<f32>(x_67, x_79);
  let x_506 : vec4<f32> = vec4<f32>(x_179, 0.0);
  color = vec4<f32>(x_224.x, x_224.y, x_224.z, 1.0);
  let x_432 : vec4<f32> = vec4<f32>(x_54, x_144, x_128, x_82);
  let x_507 : vec3<f32> = vec3<f32>(x_119, x_119, x_146);
  let x_377 : mat3x3<f32> = mat3x3<f32>(x_179, x_179, x_116);
  let x_508 : vec4<f32> = vec4<f32>(x_42, x_133, x_66, x_40);
  return;
}

struct main_out {
  [[location(0)]]
  color_1 : vec4<f32>;
};

[[stage(fragment)]]
fn main([[builtin(position)]] gl_FragCoord_param : vec4<f32>) -> main_out {
  gl_FragCoord = gl_FragCoord_param;
  main_1();
  return main_out(color);
}
