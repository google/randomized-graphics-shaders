[[block]]
struct buf0 {
    injectionSwitch: vec2<f32>;
};

struct FragmentOutput {
    [[location(0)]] GLF_color: vec4<f32>;
};

[[group(0), binding(0)]]
var<uniform> global: buf0;
var<private> GLF_color: vec4<f32>;
var<private> gl_FragCoord: vec4<f32>;

fn GLF_outlined_0(res: i32) -> vec4<f32> {
    var res1: i32;

    res1 = res;
    let e5: i32 = res1;
    return vec4<f32>(vec3<f32>(f32(select(1.0, 0.0, (e5 == 0)))), 1.0);
}

fn main1() {
    var icoord: vec2<i32>;
    var A: i32;
    var B: i32;
    var C: i32;
    var D: i32;
    var E: i32;
    var F: i32;
    var G: i32;
    var H: i32;
    var I: i32;
    var J: i32;
    var res2: i32;

    let e7: vec4<f32> = gl_FragCoord;
    icoord = (vec2<i32>(255, 255) - vec2<i32>(e7.xy));
    let e12: vec2<i32> = icoord;
    A = select(~(0), 0, ((e12.x & 1) != 0));
    let e23: vec2<i32> = icoord;
    B = select(~(0), 0, ((e23.x & 2) != 0));
    let e34: vec2<i32> = icoord;
    C = select(~(0), 0, ((e34.x & 4) != 0));
    let e45: vec2<i32> = icoord;
    D = select(~(0), 0, ((e45.x & 8) != 0));
    let e56: vec2<i32> = icoord;
    E = select(~(0), 0, ((e56.x & 16) != 0));
    let e67: vec2<i32> = icoord;
    F = select(~(0), 0, ((e67.y & 1) != 0));
    let e78: vec2<i32> = icoord;
    G = select(~(0), 0, ((e78.y & 2) != 0));
    let e89: vec2<i32> = icoord;
    H = select(~(0), 0, ((e89.y & 4) != 0));
    let e100: vec2<i32> = icoord;
    I = select(~(0), 0, ((e100.y & 8) != 0));
    let e111: vec2<i32> = icoord;
    J = select(~(0), 0, ((e111.y & 16) != 0));
    let e122: i32 = A;
    let e123: i32 = C;
    let e126: i32 = D;
    let e129: i32 = E;
    let e132: i32 = F;
    let e134: i32 = G;
    let e136: i32 = H;
    let e138: i32 = I;
    let e141: i32 = J;
    let e144: i32 = B;
    let e145: i32 = C;
    let e148: i32 = D;
    let e151: i32 = E;
    let e154: i32 = F;
    let e156: i32 = G;
    let e158: i32 = H;
    let e160: i32 = I;
    let e163: i32 = J;
    let e167: i32 = A;
    let e169: i32 = C;
    let e171: i32 = D;
    let e174: i32 = E;
    let e177: i32 = F;
    let e179: i32 = H;
    let e182: i32 = I;
    let e184: i32 = J;
    let e188: i32 = A;
    let e189: i32 = B;
    let e192: i32 = D;
    let e195: i32 = E;
    let e198: i32 = G;
    let e200: i32 = H;
    let e203: i32 = I;
    let e205: i32 = J;
    res2 = (((((((((((e122 | ~(e123)) | ~(e126)) | ~(e129)) | e132) | e134) | e136) | ~(e138)) | ~(e141)) & ((((((((e144 | ~(e145)) | ~(e148)) | ~(e151)) | e154) | e156) | e158) | ~(e160)) | ~(e163))) & (((((((~(e167) | e169) | ~(e171)) | ~(e174)) | e177) | ~(e179)) | e182) | ~(e184))) & (((((((e188 | ~(e189)) | ~(e192)) | ~(e195)) | e198) | ~(e200)) | e203) | ~(e205)));
    let e210: i32 = res2;
    let e211: i32 = A;
    let e212: i32 = B;
    let e214: i32 = C;
    let e217: i32 = D;
    let e219: i32 = E;
    let e222: i32 = F;
    let e224: i32 = G;
    let e226: i32 = H;
    let e229: i32 = I;
    let e231: i32 = J;
    let e234: i32 = B;
    let e235: i32 = C;
    let e238: i32 = D;
    let e241: i32 = E;
    let e244: i32 = F;
    let e247: i32 = G;
    let e250: i32 = H;
    let e252: i32 = I;
    let e254: i32 = J;
    let e258: i32 = A;
    let e259: i32 = C;
    let e261: i32 = D;
    let e264: i32 = E;
    let e267: i32 = G;
    let e270: i32 = H;
    let e272: i32 = I;
    let e274: i32 = J;
    let e278: i32 = A;
    let e279: i32 = C;
    let e281: i32 = D;
    let e284: i32 = E;
    let e287: i32 = F;
    let e290: i32 = H;
    let e292: i32 = I;
    let e294: i32 = J;
    res2 = (e210 & ((((((((((((e211 | e212) | ~(e214)) | e217) | ~(e219)) | e222) | e224) | ~(e226)) | e229) | ~(e231)) & ((((((((e234 | ~(e235)) | ~(e238)) | ~(e241)) | ~(e244)) | ~(e247)) | e250) | e252) | ~(e254))) & (((((((e258 | e259) | ~(e261)) | ~(e264)) | ~(e267)) | e270) | e272) | ~(e274))) & (((((((e278 | e279) | ~(e281)) | ~(e284)) | ~(e287)) | e290) | e292) | ~(e294))));
    let e299: i32 = res2;
    let e300: i32 = A;
    let e301: i32 = B;
    let e303: i32 = C;
    let e306: i32 = D;
    let e308: i32 = E;
    let e311: i32 = G;
    let e314: i32 = H;
    let e316: i32 = I;
    let e318: i32 = J;
    let e321: i32 = A;
    let e323: i32 = C;
    let e325: i32 = D;
    let e327: i32 = E;
    let e330: i32 = G;
    let e333: i32 = H;
    let e335: i32 = I;
    let e337: i32 = J;
    let e341: i32 = A;
    let e343: i32 = B;
    let e346: i32 = C;
    let e349: i32 = D;
    let e352: i32 = E;
    let e354: i32 = G;
    let e357: i32 = H;
    let e359: i32 = I;
    let e361: i32 = J;
    let e365: i32 = A;
    let e366: i32 = B;
    let e369: i32 = D;
    let e371: i32 = E;
    let e374: i32 = G;
    let e376: i32 = H;
    let e378: i32 = I;
    let e380: i32 = J;
    res2 = (e299 & (((((((((((e300 | e301) | ~(e303)) | e306) | ~(e308)) | ~(e311)) | e314) | e316) | ~(e318)) & (((((((~(e321) | e323) | e325) | ~(e327)) | ~(e330)) | e333) | e335) | ~(e337))) & ((((((((~(e341) | ~(e343)) | ~(e346)) | ~(e349)) | e352) | ~(e354)) | e357) | e359) | ~(e361))) & (((((((e365 | ~(e366)) | e369) | ~(e371)) | e374) | e376) | e378) | ~(e380))));
    let e385: i32 = res2;
    let e386: i32 = A;
    let e388: i32 = B;
    let e390: i32 = C;
    let e393: i32 = D;
    let e395: i32 = E;
    let e398: i32 = G;
    let e400: i32 = H;
    let e402: i32 = I;
    let e404: i32 = J;
    let e407: i32 = A;
    let e408: i32 = B;
    let e411: i32 = D;
    let e414: i32 = E;
    let e416: i32 = G;
    let e418: i32 = H;
    let e420: i32 = I;
    let e422: i32 = J;
    let e426: i32 = A;
    let e427: i32 = C;
    let e430: i32 = D;
    let e433: i32 = E;
    let e435: i32 = F;
    let e437: i32 = G;
    let e439: i32 = H;
    let e441: i32 = I;
    let e443: i32 = J;
    let e447: i32 = A;
    let e449: i32 = C;
    let e451: i32 = D;
    let e454: i32 = E;
    let e456: i32 = F;
    let e458: i32 = G;
    let e460: i32 = H;
    let e462: i32 = I;
    let e464: i32 = J;
    res2 = (e385 & (((((((((((~(e386) | e388) | ~(e390)) | e393) | ~(e395)) | e398) | e400) | e402) | ~(e404)) & (((((((e407 | ~(e408)) | ~(e411)) | e414) | e416) | e418) | e420) | ~(e422))) & ((((((((e426 | ~(e427)) | ~(e430)) | e433) | e435) | e437) | e439) | e441) | ~(e443))) & ((((((((~(e447) | e449) | ~(e451)) | e454) | e456) | e458) | e460) | e462) | ~(e464))));
    let e469: i32 = res2;
    let e470: i32 = A;
    let e472: i32 = B;
    let e475: i32 = C;
    let e477: i32 = D;
    let e480: i32 = E;
    let e483: i32 = F;
    let e486: i32 = G;
    let e489: i32 = H;
    let e492: i32 = I;
    let e495: i32 = J;
    let e497: i32 = A;
    let e498: i32 = B;
    let e501: i32 = C;
    let e503: i32 = D;
    let e505: i32 = E;
    let e508: i32 = F;
    let e511: i32 = G;
    let e514: i32 = H;
    let e517: i32 = I;
    let e520: i32 = J;
    let e523: i32 = A;
    let e525: i32 = B;
    let e527: i32 = C;
    let e529: i32 = D;
    let e531: i32 = E;
    let e534: i32 = G;
    let e537: i32 = H;
    let e540: i32 = I;
    let e543: i32 = J;
    res2 = (e469 & (((((((((((~(e470) | ~(e472)) | e475) | ~(e477)) | ~(e480)) | ~(e483)) | ~(e486)) | ~(e489)) | ~(e492)) | e495) & (((((((((e497 | ~(e498)) | e501) | e503) | ~(e505)) | ~(e508)) | ~(e511)) | ~(e514)) | ~(e517)) | e520)) & ((((((((~(e523) | e525) | e527) | e529) | ~(e531)) | ~(e534)) | ~(e537)) | ~(e540)) | e543)));
    let e547: i32 = res2;
    let e548: i32 = C;
    let e550: i32 = D;
    let e553: i32 = E;
    let e555: i32 = F;
    let e558: i32 = G;
    let e561: i32 = H;
    let e564: i32 = I;
    let e567: i32 = J;
    let e569: i32 = A;
    let e571: i32 = C;
    let e574: i32 = D;
    let e577: i32 = E;
    let e579: i32 = G;
    let e582: i32 = H;
    let e585: i32 = I;
    let e588: i32 = J;
    let e591: i32 = B;
    let e592: i32 = D;
    let e595: i32 = E;
    let e597: i32 = F;
    let e600: i32 = H;
    let e603: i32 = I;
    let e606: i32 = J;
    res2 = (e547 & (((((((((~(e548) | ~(e550)) | e553) | ~(e555)) | ~(e558)) | ~(e561)) | ~(e564)) | e567) & (((((((~(e569) | ~(e571)) | ~(e574)) | e577) | ~(e579)) | ~(e582)) | ~(e585)) | e588)) & ((((((e591 | ~(e592)) | e595) | ~(e597)) | ~(e600)) | ~(e603)) | e606)));
    let e610: i32 = res2;
    let e611: i32 = A;
    let e612: i32 = B;
    let e614: i32 = C;
    let e616: i32 = D;
    let e619: i32 = E;
    let e621: i32 = G;
    let e624: i32 = H;
    let e627: i32 = I;
    let e630: i32 = J;
    let e632: i32 = B;
    let e633: i32 = C;
    let e635: i32 = D;
    let e637: i32 = E;
    let e640: i32 = F;
    let e642: i32 = G;
    let e645: i32 = H;
    let e648: i32 = I;
    let e651: i32 = J;
    res2 = (e610 & (((((((((e611 | e612) | e614) | ~(e616)) | e619) | ~(e621)) | ~(e624)) | ~(e627)) | e630) & ((((((((e632 | e633) | e635) | ~(e637)) | e640) | ~(e642)) | ~(e645)) | ~(e648)) | e651)));
    let e655: i32 = res2;
    let e656: i32 = A;
    let e657: i32 = C;
    let e660: i32 = D;
    let e662: i32 = E;
    let e664: i32 = F;
    let e666: i32 = G;
    let e669: i32 = H;
    let e672: i32 = I;
    let e675: i32 = J;
    let e677: i32 = B;
    let e678: i32 = C;
    let e681: i32 = D;
    let e683: i32 = E;
    let e685: i32 = F;
    let e687: i32 = G;
    let e690: i32 = H;
    let e693: i32 = J;
    res2 = (e655 & (((((((((e656 | ~(e657)) | e660) | e662) | e664) | ~(e666)) | ~(e669)) | ~(e672)) | e675) & (((((((e677 | ~(e678)) | e681) | e683) | e685) | ~(e687)) | ~(e690)) | e693)));
    let e697: i32 = res2;
    let e698: i32 = A;
    let e700: i32 = B;
    let e703: i32 = C;
    let e705: i32 = D;
    let e707: i32 = E;
    let e709: i32 = F;
    let e711: i32 = G;
    let e714: i32 = H;
    let e717: i32 = I;
    let e720: i32 = J;
    res2 = (e697 & (((((((((~(e698) | ~(e700)) | e703) | e705) | e707) | e709) | ~(e711)) | ~(e714)) | ~(e717)) | e720));
    let e723: i32 = res2;
    let e724: i32 = A;
    let e725: i32 = B;
    let e727: i32 = C;
    let e730: i32 = D;
    let e733: i32 = E;
    let e735: i32 = G;
    let e737: i32 = H;
    let e740: i32 = I;
    let e743: i32 = J;
    res2 = (e723 & ((((((((e724 | e725) | ~(e727)) | ~(e730)) | e733) | e735) | ~(e737)) | ~(e740)) | e743));
    let e746: i32 = res2;
    let e747: i32 = B;
    let e749: i32 = D;
    let e751: i32 = E;
    let e753: i32 = F;
    let e756: i32 = G;
    let e758: i32 = H;
    let e761: i32 = I;
    let e764: i32 = J;
    res2 = (e746 & (((((((~(e747) | e749) | e751) | ~(e753)) | e756) | ~(e758)) | ~(e761)) | e764));
    let e767: i32 = res2;
    let e768: i32 = B;
    let e770: i32 = C;
    let e772: i32 = D;
    let e775: i32 = E;
    let e777: i32 = F;
    let e779: i32 = G;
    let e781: i32 = H;
    let e784: i32 = I;
    let e787: i32 = J;
    res2 = (e767 & ((((((((~(e768) | e770) | ~(e772)) | e775) | e777) | e779) | ~(e781)) | ~(e784)) | e787));
    let e790: i32 = res2;
    let e791: i32 = A;
    let e793: i32 = B;
    let e796: i32 = C;
    let e799: i32 = D;
    let e801: i32 = E;
    let e803: i32 = F;
    let e805: i32 = G;
    let e807: i32 = I;
    let e810: i32 = J;
    let e812: i32 = B;
    let e814: i32 = C;
    let e817: i32 = D;
    let e819: i32 = E;
    let e821: i32 = F;
    let e824: i32 = G;
    let e827: i32 = H;
    let e829: i32 = I;
    let e832: i32 = J;
    res2 = (e790 & (((((((((~(e791) | ~(e793)) | ~(e796)) | e799) | e801) | e803) | e805) | ~(e807)) | e810) & ((((((((~(e812) | ~(e814)) | e817) | e819) | ~(e821)) | ~(e824)) | e827) | ~(e829)) | e832)));
    let e836: i32 = res2;
    let e837: i32 = A;
    let e839: i32 = B;
    let e841: i32 = C;
    let e843: i32 = D;
    let e845: i32 = E;
    let e847: i32 = H;
    let e849: i32 = I;
    let e852: i32 = J;
    let e854: i32 = B;
    let e855: i32 = C;
    let e857: i32 = D;
    let e859: i32 = E;
    let e861: i32 = F;
    let e863: i32 = G;
    let e866: i32 = H;
    let e868: i32 = I;
    let e871: i32 = J;
    let e874: i32 = A;
    let e875: i32 = B;
    let e877: i32 = C;
    let e879: i32 = D;
    let e882: i32 = E;
    let e884: i32 = F;
    let e886: i32 = G;
    let e888: i32 = H;
    let e890: i32 = I;
    let e893: i32 = J;
    res2 = (e836 & (((((((((~(e837) | e839) | e841) | e843) | e845) | e847) | ~(e849)) | e852) & ((((((((e854 | e855) | e857) | e859) | e861) | ~(e863)) | e866) | ~(e868)) | e871)) & (((((((((e874 | e875) | e877) | ~(e879)) | e882) | e884) | e886) | e888) | ~(e890)) | e893)));
    let e897: i32 = res2;
    let e898: i32 = A;
    let e899: i32 = B;
    let e902: i32 = C;
    let e904: i32 = D;
    let e906: i32 = E;
    let e908: i32 = F;
    let e910: i32 = G;
    let e912: i32 = H;
    let e914: i32 = I;
    let e917: i32 = J;
    let e919: i32 = B;
    let e921: i32 = D;
    let e923: i32 = E;
    let e925: i32 = F;
    let e928: i32 = G;
    let e931: i32 = H;
    let e934: i32 = I;
    let e936: i32 = J;
    let e939: i32 = A;
    let e941: i32 = B;
    let e944: i32 = C;
    let e946: i32 = E;
    let e949: i32 = G;
    let e952: i32 = H;
    let e955: i32 = I;
    let e957: i32 = J;
    res2 = (e897 & (((((((((((e898 | ~(e899)) | e902) | e904) | e906) | e908) | e910) | e912) | ~(e914)) | e917) & (((((((~(e919) | e921) | e923) | ~(e925)) | ~(e928)) | ~(e931)) | e934) | e936)) & (((((((~(e939) | ~(e941)) | e944) | ~(e946)) | ~(e949)) | ~(e952)) | e955) | ~(e957))));
    let e962: i32 = res2;
    let e963: i32 = A;
    let e965: i32 = D;
    let e968: i32 = E;
    let e971: i32 = F;
    let e974: i32 = G;
    let e976: i32 = H;
    let e979: i32 = I;
    let e981: i32 = J;
    let e984: i32 = A;
    let e985: i32 = B;
    let e987: i32 = E;
    let e990: i32 = F;
    let e993: i32 = G;
    let e996: i32 = H;
    let e998: i32 = I;
    let e1000: i32 = J;
    let e1004: i32 = B;
    let e1006: i32 = C;
    let e1008: i32 = D;
    let e1010: i32 = E;
    let e1013: i32 = F;
    let e1015: i32 = G;
    let e1018: i32 = H;
    let e1020: i32 = I;
    let e1022: i32 = J;
    res2 = (e962 & (((((((((~(e963) | ~(e965)) | ~(e968)) | ~(e971)) | e974) | ~(e976)) | e979) | ~(e981)) & (((((((e984 | e985) | ~(e987)) | ~(e990)) | ~(e993)) | e996) | e998) | ~(e1000))) & ((((((((~(e1004) | e1006) | e1008) | ~(e1010)) | e1013) | ~(e1015)) | e1018) | e1020) | ~(e1022))));
    let e1027: i32 = res2;
    let e1028: i32 = B;
    let e1030: i32 = C;
    let e1033: i32 = D;
    let e1036: i32 = E;
    let e1038: i32 = F;
    let e1040: i32 = G;
    let e1043: i32 = H;
    let e1045: i32 = I;
    let e1047: i32 = J;
    let e1050: i32 = A;
    let e1052: i32 = B;
    let e1055: i32 = C;
    let e1057: i32 = D;
    let e1060: i32 = G;
    let e1062: i32 = H;
    let e1064: i32 = I;
    let e1066: i32 = J;
    let e1070: i32 = C;
    let e1072: i32 = D;
    let e1074: i32 = E;
    let e1077: i32 = F;
    let e1080: i32 = G;
    let e1082: i32 = H;
    let e1084: i32 = I;
    let e1086: i32 = J;
    res2 = (e1027 & ((((((((((~(e1028) | ~(e1030)) | ~(e1033)) | e1036) | e1038) | ~(e1040)) | e1043) | e1045) | ~(e1047)) & (((((((~(e1050) | ~(e1052)) | e1055) | ~(e1057)) | e1060) | e1062) | e1064) | ~(e1066))) & (((((((~(e1070) | e1072) | ~(e1074)) | ~(e1077)) | e1080) | e1082) | e1084) | ~(e1086))));
    let e1091: i32 = res2;
    let e1092: i32 = A;
    let e1094: i32 = B;
    let e1096: i32 = C;
    let e1098: i32 = E;
    let e1100: i32 = F;
    let e1102: i32 = G;
    let e1104: i32 = H;
    let e1107: i32 = I;
    let e1110: i32 = J;
    let e1112: i32 = A;
    let e1114: i32 = B;
    let e1116: i32 = D;
    let e1118: i32 = E;
    let e1120: i32 = G;
    let e1123: i32 = H;
    let e1125: i32 = I;
    let e1128: i32 = J;
    res2 = (e1091 & (((((((((~(e1092) | e1094) | e1096) | e1098) | e1100) | e1102) | ~(e1104)) | ~(e1107)) | e1110) & (((((((~(e1112) | e1114) | e1116) | e1118) | ~(e1120)) | e1123) | ~(e1125)) | e1128)));
    let e1132: i32 = res2;
    let e1133: i32 = A;
    let e1134: i32 = B;
    let e1136: i32 = C;
    let e1139: i32 = D;
    let e1142: i32 = E;
    let e1145: i32 = F;
    let e1148: i32 = H;
    let e1151: i32 = I;
    let e1153: i32 = J;
    res2 = (e1132 & ((((((((e1133 | e1134) | ~(e1136)) | ~(e1139)) | ~(e1142)) | ~(e1145)) | ~(e1148)) | e1151) | ~(e1153)));
    let e1157: i32 = res2;
    let e1158: i32 = A;
    let e1160: i32 = C;
    let e1163: i32 = E;
    let e1166: i32 = F;
    let e1169: i32 = G;
    let e1171: i32 = H;
    let e1174: i32 = I;
    let e1176: i32 = J;
    res2 = (e1157 & (((((((~(e1158) | ~(e1160)) | ~(e1163)) | ~(e1166)) | e1169) | ~(e1171)) | e1174) | ~(e1176)));
    let e1180: i32 = res2;
    let e1181: i32 = A;
    let e1182: i32 = B;
    let e1185: i32 = C;
    let e1188: i32 = D;
    let e1190: i32 = E;
    let e1193: i32 = F;
    let e1196: i32 = H;
    let e1199: i32 = I;
    let e1201: i32 = J;
    res2 = (e1180 & ((((((((e1181 | ~(e1182)) | ~(e1185)) | e1188) | ~(e1190)) | ~(e1193)) | ~(e1196)) | e1199) | ~(e1201)));
    let e1205: i32 = res2;
    let e1206: i32 = B;
    let e1207: i32 = C;
    let e1210: i32 = D;
    let e1212: i32 = E;
    let e1215: i32 = F;
    let e1218: i32 = G;
    let e1221: i32 = H;
    let e1224: i32 = I;
    let e1226: i32 = J;
    let e1229: i32 = A;
    let e1231: i32 = B;
    let e1234: i32 = C;
    let e1237: i32 = D;
    let e1239: i32 = E;
    let e1242: i32 = F;
    let e1244: i32 = H;
    let e1247: i32 = I;
    let e1249: i32 = J;
    let e1253: i32 = B;
    let e1255: i32 = C;
    let e1258: i32 = D;
    let e1260: i32 = E;
    let e1263: i32 = F;
    let e1265: i32 = G;
    let e1268: i32 = H;
    let e1271: i32 = I;
    let e1273: i32 = J;
    res2 = (e1205 & ((((((((((e1206 | ~(e1207)) | e1210) | ~(e1212)) | ~(e1215)) | ~(e1218)) | ~(e1221)) | e1224) | ~(e1226)) & ((((((((~(e1229) | ~(e1231)) | ~(e1234)) | e1237) | ~(e1239)) | e1242) | ~(e1244)) | e1247) | ~(e1249))) & ((((((((~(e1253) | ~(e1255)) | e1258) | ~(e1260)) | e1263) | ~(e1265)) | ~(e1268)) | e1271) | ~(e1273))));
    let e1279: i32 = res2;
    let e1280: vec4<f32> = GLF_outlined_0(e1279);
    GLF_color = e1280;
    return;
}

[[stage(fragment)]]
fn main([[builtin(position)]] param: vec4<f32>) -> FragmentOutput {
    gl_FragCoord = param;
    main1();
    let e7: vec4<f32> = GLF_color;
    return FragmentOutput(e7);
}
