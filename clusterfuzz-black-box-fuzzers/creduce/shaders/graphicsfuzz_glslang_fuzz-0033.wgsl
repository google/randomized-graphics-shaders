struct GLF_dead6BST {
  data : i32;
  leftIndex : i32;
  rightIndex : i32;
};

[[block]]
struct buf2 {
  GLF_dead12injectionSwitch : vec2<f32>;
};

[[block]]
struct buf0 {
  injectionSwitch : vec2<f32>;
};

[[block]]
struct buf4 {
  GLF_dead8one : f32;
};

[[block]]
struct buf1 {
  GLF_dead13resolution : vec2<f32>;
};

struct GLF_dead0Obj {
  odd_numbers : array<f32, 10u>;
  even_numbers : array<f32, 10u>;
};

[[block]]
struct buf5 {
  GLF_dead8resolution : vec2<f32>;
};

[[block]]
struct buf3 {
  GLF_dead12resolution : vec2<f32>;
};

[[block]]
struct buf6 {
  resolution : vec2<f32>;
};

var<private> GLF_dead13gl_FragCoord : vec4<f32>;

var<private> GLF_dead13_GLF_color : vec4<f32>;

var<private> GLF_dead12gl_FragCoord : vec4<f32>;

var<private> GLF_dead15gl_FragCoord : vec4<f32>;

var<private> GLF_dead15_GLF_color : vec4<f32>;

var<private> GLF_dead9MATRIX_N : i32;

var<private> GLF_dead8gl_FrontFacing : bool;

var<private> GLF_dead8gl_FragCoord : vec4<f32>;

var<private> GLF_dead8gl_PointCoord : vec2<f32>;

var<private> GLF_dead8_GLF_color : vec4<f32>;

var<private> GLF_dead8m22 : mat2x2<f32>;

var<private> GLF_dead8m23 : mat2x3<f32>;

var<private> GLF_dead8m24 : mat2x4<f32>;

var<private> GLF_dead8m32 : mat3x2<f32>;

var<private> GLF_dead8m33 : mat3x3<f32>;

var<private> GLF_dead8m34 : mat3x4<f32>;

var<private> GLF_dead8m42 : mat4x2<f32>;

var<private> GLF_dead8m43 : mat4x3<f32>;

var<private> GLF_dead8m44 : mat4x4<f32>;

var<private> GLF_dead11gl_FragCoord : vec4<f32>;

var<private> GLF_dead11data : array<i32, 10u>;

var<private> GLF_dead6tree : array<GLF_dead6BST, 10u>;

var<private> GLF_dead5gl_FragCoord : vec4<f32>;

var<private> GLF_dead5color : vec4<f32>;

var<private> GLF_dead3_GLF_color : vec4<f32>;

[[group(0), binding(2)]] var<uniform> x_326 : buf2;

var<private> x_GLF_color : vec4<f32>;

var<private> gl_FragCoord : vec4<f32>;

[[group(0), binding(0)]] var<uniform> x_525 : buf0;

[[group(0), binding(4)]] var<uniform> x_655 : buf4;

[[group(0), binding(1)]] var<uniform> x_728 : buf1;

[[group(0), binding(5)]] var<uniform> x_3482 : buf5;

[[group(0), binding(3)]] var<uniform> x_8265 : buf3;

[[group(0), binding(6)]] var<uniform> x_13226 : buf6;

fn GLF_dead10collision_vf2_vf4_(GLF_dead10pos : ptr<function, vec2<f32>>, GLF_dead10quad : ptr<function, vec4<f32>>) -> bool {
  var donor_replacementGLF_dead12m : vec3<f32>;
  var GLF_dead12g : vec2<f32>;
  var GLF_dead12o : vec2<f32>;
  var GLF_dead12k : i32;
  let x_296 : f32 = (*(GLF_dead10pos)).x;
  let x_298 : f32 = (*(GLF_dead10quad)).x;
  if ((x_296 < x_298)) {
    return false;
  }
  if (false) {
    donor_replacementGLF_dead12m = vec3<f32>(-10.0, -9.0, -6.0);
    let x_313 : i32 = GLF_dead9MATRIX_N;
    let x_315 : i32 = GLF_dead9MATRIX_N;
    GLF_dead12g = vec2<f32>(f32(x_313), f32(x_315));
    let x_319 : vec2<f32> = *(GLF_dead10pos);
    let x_320 : vec2<f32> = GLF_dead12g;
    GLF_dead12o = mix(x_319, x_320, vec2<f32>(0.200000003, 0.200000003));
    let x_330 : f32 = x_326.GLF_dead12injectionSwitch.x;
    let x_332 : f32 = donor_replacementGLF_dead12m.x;
    if ((x_330 < x_332)) {
      GLF_dead12k = 1;
      loop {
        let x_343 : i32 = GLF_dead12k;
        if ((x_343 >= 0)) {
        } else {
          break;
        }
        let x_345 : vec2<f32> = GLF_dead12o;
        let x_346 : vec2<f32> = GLF_dead12o;
        GLF_dead12o = (x_345 + x_346);
        let x_348 : i32 = GLF_dead12k;
        GLF_dead12k = (x_348 - 1);
      }
      let x_351 : f32 = x_326.GLF_dead12injectionSwitch.x;
      let x_352 : vec2<f32> = GLF_dead12o;
      let x_353 : vec2<f32> = cos(x_352);
      donor_replacementGLF_dead12m = vec3<f32>(x_351, x_353.x, x_353.y);
    }
  }
  let x_359 : f32 = (*(GLF_dead10pos)).y;
  let x_361 : f32 = (*(GLF_dead10quad)).y;
  if ((x_359 < x_361)) {
    return false;
  }
  let x_367 : f32 = (*(GLF_dead10pos)).x;
  let x_369 : f32 = (*(GLF_dead10quad)).x;
  let x_372 : f32 = (*(GLF_dead10quad)).z;
  if ((x_367 > (x_369 + x_372))) {
    return false;
  }
  let x_379 : f32 = (*(GLF_dead10pos)).y;
  let x_381 : f32 = (*(GLF_dead10quad)).y;
  let x_384 : f32 = (*(GLF_dead10quad)).w;
  if ((x_379 > (x_381 + x_384))) {
    return false;
  }
  return true;
}

fn collatz_i1_(v : ptr<function, i32>) -> i32 {
  var count : i32;
  var x_GLF_outVarBackup_GLF_color : vec4<f32>;
  var GLF_dead5row : f32;
  var GLF_dead5column : f32;
  var GLF_dead5scalar : f32;
  var GLF_dead5vector_1 : vec3<f32>;
  var GLF_dead5vector_2 : vec3<f32>;
  var GLF_dead5matrix_1 : mat3x3<f32>;
  var x_GLF_outVarBackup_GLF_color_1 : vec4<f32>;
  var GLF_dead5matrix_2 : mat3x3<f32>;
  var donor_replacementGLF_dead13A : array<f32, 50u>;
  var donor_replacementGLF_dead2p : vec2<i32>;
  var donor_replacementGLF_dead14c : vec3<f32>;
  var donor_replacementGLF_dead8overall_region : i32;
  var x_GLF_outVarBackup_GLF_color_2 : vec4<f32>;
  var donor_replacementGLF_dead8sums : array<f32, 9u>;
  var GLF_dead15icoord : vec2<i32>;
  var GLF_dead15A : i32;
  var GLF_dead15B : i32;
  var GLF_dead15C : i32;
  var GLF_dead15D : i32;
  var GLF_dead15E : i32;
  var GLF_dead15F : i32;
  var GLF_dead15G : i32;
  var GLF_dead15H : i32;
  var GLF_dead15I : i32;
  var GLF_dead15J : i32;
  var GLF_dead15res : i32;
  var x_GLF_outVarBackup_GLF_color_3 : vec4<f32>;
  var donor_replacementGLF_dead0obj : GLF_dead0Obj;
  var x_GLF_outVarBackup_GLF_color_4 : vec4<f32>;
  var donor_replacementGLF_dead9alpha2 : f32;
  var donor_replacementGLF_dead9alpha3 : f32;
  var donor_replacementGLF_dead9beta : f32;
  var donor_replacementGLF_dead9matrix_a : mat4x4<f32>;
  var GLF_dead15icoord_1 : vec2<i32>;
  var GLF_dead15A_1 : i32;
  var GLF_dead15B_1 : i32;
  var GLF_dead15C_1 : i32;
  var GLF_dead15D_1 : i32;
  var GLF_dead15E_1 : i32;
  var GLF_dead15F_1 : i32;
  var GLF_dead15G_1 : i32;
  var GLF_dead15H_1 : i32;
  var GLF_dead15I_1 : i32;
  var GLF_dead15J_1 : i32;
  var GLF_dead15res_1 : i32;
  var GLF_dead9a : i32;
  var GLF_dead9a_1 : i32;
  var x_GLF_outVarBackup_GLF_color_5 : vec4<f32>;
  var donor_replacementGLF_dead13A_1 : array<f32, 50u>;
  var GLF_dead13A : array<f32, 50u>;
  var GLF_dead13i : i32;
  var GLF_dead13i_1 : i32;
  var donor_replacementGLF_dead10pos : vec2<f32>;
  var donor_replacementGLF_dead14result : f32;
  var param : vec2<f32>;
  var param_1 : vec4<f32>;
  var indexable : array<vec4<f32>, 8u>;
  var donor_replacementGLF_dead13A_2 : array<f32, 50u>;
  var GLF_dead13i_2 : i32;
  var indexable_1 : array<vec4<f32>, 8u>;
  var indexable_2 : array<vec4<f32>, 8u>;
  var indexable_3 : array<vec4<f32>, 16u>;
  var donor_replacementGLF_dead0odd_number : f32;
  var GLF_dead15icoord_2 : vec2<i32>;
  var GLF_dead15A_2 : i32;
  var GLF_dead15B_2 : i32;
  var GLF_dead15C_2 : i32;
  var GLF_dead15D_2 : i32;
  var GLF_dead15E_2 : i32;
  var GLF_dead15F_2 : i32;
  var GLF_dead15G_2 : i32;
  var GLF_dead15H_2 : i32;
  var GLF_dead15I_2 : i32;
  var GLF_dead15J_2 : i32;
  var GLF_dead15res_2 : i32;
  var GLF_dead15icoord_3 : vec2<i32>;
  var GLF_dead15A_3 : i32;
  var GLF_dead15B_3 : i32;
  var GLF_dead15C_3 : i32;
  var GLF_dead15D_3 : i32;
  var GLF_dead15E_3 : i32;
  var GLF_dead15F_3 : i32;
  var GLF_dead15G_3 : i32;
  var GLF_dead15H_3 : i32;
  var GLF_dead15I_3 : i32;
  var GLF_dead15J_3 : i32;
  var GLF_dead15res_3 : i32;
  var x_GLF_outVarBackup_GLF_color_6 : vec4<f32>;
  var x_GLF_outVarBackup_GLF_color_7 : vec4<f32>;
  var donor_replacementGLF_dead8matrix_number : u32;
  var x_GLF_outVarBackup_GLF_color_8 : vec4<f32>;
  var GLF_dead8r : i32;
  var GLF_dead15icoord_4 : vec2<i32>;
  var GLF_dead15A_4 : i32;
  var GLF_dead15B_4 : i32;
  var GLF_dead15C_4 : i32;
  var GLF_dead15D_4 : i32;
  var GLF_dead15E_4 : i32;
  var GLF_dead15F_4 : i32;
  var GLF_dead15G_4 : i32;
  var GLF_dead15H_4 : i32;
  var GLF_dead15I_4 : i32;
  var GLF_dead15J_4 : i32;
  var GLF_dead15res_4 : i32;
  var x_GLF_outVarBackup_GLF_color_9 : vec4<f32>;
  var x_GLF_outVarBackup_GLF_color_10 : vec4<f32>;
  var donor_replacementGLF_dead12A : array<f32, 50u>;
  var x_GLF_outVarBackup_GLF_color_11 : vec4<f32>;
  var donor_replacementGLF_dead12A_1 : array<f32, 50u>;
  var donor_replacementGLF_dead12c : vec2<f32>;
  var donor_replacementGLF_dead12col : vec3<f32>;
  var x_GLF_outVarBackup_GLF_color_12 : vec4<f32>;
  var donor_replacementGLF_dead12A_2 : array<f32, 50u>;
  var donor_replacementGLF_dead6currentNode : GLF_dead6BST;
  var donor_replacementGLF_dead8sums_1 : array<f32, 9u>;
  var GLF_dead8c : i32;
  var GLF_dead8r_1 : i32;
  var x_GLF_outVarBackup_GLF_color_13 : vec4<f32>;
  var GLF_dead15icoord_5 : vec2<i32>;
  var GLF_dead15A_5 : i32;
  var GLF_dead15B_5 : i32;
  var GLF_dead15C_5 : i32;
  var GLF_dead15D_5 : i32;
  var GLF_dead15E_5 : i32;
  var GLF_dead15F_5 : i32;
  var GLF_dead15G_5 : i32;
  var GLF_dead15H_5 : i32;
  var GLF_dead15I_5 : i32;
  var GLF_dead15J_5 : i32;
  var GLF_dead15res_5 : i32;
  var x_GLF_outVarBackup_GLF_color_14 : vec4<f32>;
  var donor_replacementGLF_dead6index : i32;
  var x_9886 : i32;
  var x_GLF_outVarBackup_GLF_color_15 : vec4<f32>;
  var x_GLF_outVarBackup_GLF_color_16 : vec4<f32>;
  var GLF_dead15icoord_6 : vec2<i32>;
  var GLF_dead15A_6 : i32;
  var GLF_dead15B_6 : i32;
  var GLF_dead15C_6 : i32;
  var GLF_dead15D_6 : i32;
  var GLF_dead15E_6 : i32;
  var GLF_dead15F_6 : i32;
  var GLF_dead15G_6 : i32;
  var GLF_dead15H_6 : i32;
  var GLF_dead15I_6 : i32;
  var GLF_dead15J_6 : i32;
  var GLF_dead15res_6 : i32;
  var donor_replacementGLF_dead12A_3 : array<f32, 50u>;
  var donor_replacementGLF_dead12c_1 : vec2<f32>;
  var donor_replacementGLF_dead12col_1 : vec3<f32>;
  var donor_replacementGLF_dead14c_1 : vec3<f32>;
  var x_GLF_outVarBackup_GLF_color_17 : vec4<f32>;
  var donor_replacementGLF_dead14c_2 : vec3<f32>;
  var donor_replacementGLF_dead12A_4 : array<f32, 50u>;
  var x_11430 : f32;
  var x_11456 : f32;
  var x_11484 : f32;
  var donor_replacementGLF_dead12c_2 : vec2<f32>;
  var donor_replacementGLF_dead12col_2 : vec3<f32>;
  var x_GLF_outVarBackup_GLF_color_18 : vec4<f32>;
  var donor_replacementGLF_dead8sums_2 : array<f32, 9u>;
  var GLF_dead8rows : i32;
  var GLF_dead8c_1 : i32;
  var GLF_dead8r_2 : i32;
  var x_GLF_outVarBackup_GLF_color_19 : vec4<f32>;
  var donor_replacementGLF_dead14limit : f32;
  var donor_replacementGLF_dead14result_1 : f32;
  var x_GLF_outVarBackup_GLF_color_20 : vec4<f32>;
  var donor_replacementGLF_dead12m_1 : vec3<f32>;
  var donor_replacementGLF_dead12n : vec2<f32>;
  var GLF_dead12i : i32;
  var GLF_dead12g_1 : vec2<f32>;
  var GLF_dead12o_1 : vec2<f32>;
  var GLF_dead12k_1 : i32;
  var donor_replacementGLF_dead14i : i32;
  var donor_replacementGLF_dead14result_2 : f32;
  var donor_replacementGLF_dead14thirty_two : f32;
  var donor_replacementGLF_dead13A_3 : array<f32, 50u>;
  var x_GLF_outVarBackup_GLF_color_21 : vec4<f32>;
  var donor_replacementGLF_dead14c_3 : vec3<f32>;
  var GLF_dead15icoord_7 : vec2<i32>;
  var GLF_dead15A_7 : i32;
  var GLF_dead15B_7 : i32;
  var GLF_dead15C_7 : i32;
  var GLF_dead15D_7 : i32;
  var GLF_dead15E_7 : i32;
  var GLF_dead15F_7 : i32;
  var GLF_dead15G_7 : i32;
  var GLF_dead15H_7 : i32;
  var GLF_dead15I_7 : i32;
  var GLF_dead15J_7 : i32;
  var GLF_dead15res_7 : i32;
  var donor_replacementGLF_dead12A_5 : array<f32, 50u>;
  var donor_replacementGLF_dead12c_3 : vec2<f32>;
  var donor_replacementGLF_dead12col_3 : vec3<f32>;
  var GLF_dead15icoord_8 : vec2<i32>;
  var GLF_dead15A_8 : i32;
  var GLF_dead15B_8 : i32;
  var GLF_dead15C_8 : i32;
  var GLF_dead15D_8 : i32;
  var GLF_dead15E_8 : i32;
  var GLF_dead15F_8 : i32;
  var GLF_dead15G_8 : i32;
  var GLF_dead15H_8 : i32;
  var GLF_dead15I_8 : i32;
  var GLF_dead15J_8 : i32;
  var GLF_dead15res_8 : i32;
  var x_GLF_outVarBackup_GLF_color_22 : vec4<f32>;
  var x_GLF_outVarBackup_GLF_color_23 : vec4<f32>;
  var donor_replacementGLF_dead12A_6 : array<f32, 50u>;
  var donor_replacementGLF_dead12c_4 : vec2<f32>;
  var donor_replacementGLF_dead12col_4 : vec3<f32>;
  var donor_replacementGLF_dead12A_7 : array<f32, 50u>;
  var donor_replacementGLF_dead12c_5 : vec2<f32>;
  var donor_replacementGLF_dead12col_5 : vec3<f32>;
  count = 0;
  let x_396 : vec4<f32> = x_GLF_color;
  x_GLF_outVarBackup_GLF_color = x_396;
  x_GLF_color = vec4<f32>(0.007446583, 0.000150733074, 0x1p+128, 0.0);
  let x_405 : f32 = gl_FragCoord.x;
  if ((x_405 >= 0.0)) {
    let x_409 : vec4<f32> = x_GLF_outVarBackup_GLF_color;
    x_GLF_color = x_409;
  }
  loop {
    let x_415 : i32 = *(v);
    if ((x_415 > 1)) {
    } else {
      break;
    }
    if (false) {
      let x_422 : f32 = GLF_dead5gl_FragCoord.x;
      GLF_dead5row = f32(((i32(x_422) / 16) + 1));
      let x_430 : f32 = GLF_dead5gl_FragCoord.y;
      GLF_dead5column = f32(((i32(x_430) / 16) + 1));
      GLF_dead5scalar = 1.0;
      let x_438 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_438 + 1.0);
      let x_440 : f32 = GLF_dead5row;
      let x_442 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_442 + 1.0);
      let x_444 : f32 = GLF_dead5column;
      let x_446 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_446 + 1.0);
      let x_448 : f32 = GLF_dead5row;
      let x_450 : f32 = GLF_dead5column;
      GLF_dead5vector_1 = vec3<f32>((x_438 * x_440), (x_442 * x_444), ((x_446 * x_448) * x_450));
      let x_454 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_454 + 1.0);
      let x_456 : f32 = GLF_dead5row;
      let x_458 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_458 + 1.0);
      let x_460 : f32 = GLF_dead5column;
      let x_462 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_462 + 1.0);
      let x_464 : f32 = GLF_dead5row;
      let x_466 : f32 = GLF_dead5column;
      GLF_dead5vector_2 = vec3<f32>((x_454 * x_456), (x_458 * x_460), ((x_462 * x_464) * x_466));
      let x_471 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_471 + 1.0);
      let x_473 : f32 = GLF_dead5row;
      let x_475 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_475 + 1.0);
      let x_477 : f32 = GLF_dead5column;
      let x_479 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_479 + 1.0);
      let x_481 : f32 = GLF_dead5row;
      let x_483 : f32 = GLF_dead5column;
      let x_485 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_485 + 1.0);
      let x_487 : f32 = GLF_dead5row;
      let x_489 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_489 + 1.0);
      let x_491 : f32 = GLF_dead5column;
      let x_493 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_493 + 1.0);
      let x_495 : f32 = GLF_dead5row;
      let x_497 : f32 = GLF_dead5column;
      let x_499 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_499 + 1.0);
      let x_501 : f32 = GLF_dead5row;
      let x_503 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_503 + 1.0);
      let x_505 : f32 = GLF_dead5column;
      let x_507 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_507 + 1.0);
      let x_509 : f32 = GLF_dead5row;
      let x_511 : f32 = GLF_dead5column;
      GLF_dead5matrix_1 = mat3x3<f32>(vec3<f32>((x_471 * x_473), (x_475 * x_477), ((x_479 * x_481) * x_483)), vec3<f32>((x_485 * x_487), (x_489 * x_491), ((x_493 * x_495) * x_497)), vec3<f32>((x_499 * x_501), (x_503 * x_505), ((x_507 * x_509) * x_511)));
      let x_518 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_1 = x_518;
      x_GLF_color = vec4<f32>(3.400000095, -89.919998169, -1.899999976, 6145.432128906);
      let x_527 : f32 = x_525.injectionSwitch.x;
      let x_529 : f32 = x_525.injectionSwitch.y;
      if ((x_527 < x_529)) {
        let x_533 : vec4<f32> = x_GLF_outVarBackup_GLF_color_1;
        x_GLF_color = x_533;
      }
      let x_535 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_535 + 1.0);
      let x_537 : f32 = GLF_dead5row;
      let x_539 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_539 + 1.0);
      let x_541 : f32 = GLF_dead5column;
      let x_543 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_543 + 1.0);
      let x_545 : f32 = GLF_dead5row;
      let x_547 : f32 = GLF_dead5column;
      let x_549 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_549 + 1.0);
      let x_551 : f32 = GLF_dead5row;
      let x_553 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_553 + 1.0);
      let x_555 : f32 = GLF_dead5column;
      let x_557 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_557 + 1.0);
      let x_559 : f32 = GLF_dead5row;
      let x_561 : f32 = GLF_dead5column;
      let x_563 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_563 + 1.0);
      let x_565 : f32 = GLF_dead5row;
      let x_567 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_567 + 1.0);
      let x_569 : f32 = GLF_dead5column;
      let x_571 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_571 + 1.0);
      let x_573 : f32 = GLF_dead5row;
      let x_575 : f32 = GLF_dead5column;
      GLF_dead5matrix_2 = mat3x3<f32>(vec3<f32>((x_535 * x_537), (x_539 * x_541), ((x_543 * x_545) * x_547)), vec3<f32>((x_549 * x_551), (x_553 * x_555), ((x_557 * x_559) * x_561)), vec3<f32>((x_563 * x_565), (x_567 * x_569), ((x_571 * x_573) * x_575)));
      let x_581 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_581 + 1.0);
      let x_583 : vec3<f32> = GLF_dead5vector_1;
      let x_584 : vec3<f32> = (x_583 * x_581);
      let x_585 : vec4<f32> = GLF_dead5color;
      GLF_dead5color = vec4<f32>(x_584.x, x_584.y, x_584.z, x_585.w);
      let x_587 : f32 = GLF_dead5scalar;
      GLF_dead5scalar = (x_587 + 1.0);
      let x_589 : mat3x3<f32> = GLF_dead5matrix_1;
      let x_591 : vec4<f32> = GLF_dead5color;
      let x_593 : vec3<f32> = (vec3<f32>(x_591.x, x_591.y, x_591.z) * (x_589 * x_587));
      let x_594 : vec4<f32> = GLF_dead5color;
      GLF_dead5color = vec4<f32>(x_593.x, x_593.y, x_593.z, x_594.w);
      let x_596 : vec3<f32> = GLF_dead5vector_1;
      let x_597 : mat3x3<f32> = GLF_dead5matrix_1;
      let x_599 : vec4<f32> = GLF_dead5color;
      let x_601 : vec3<f32> = (vec3<f32>(x_599.x, x_599.y, x_599.z) + (x_596 * x_597));
      let x_602 : vec4<f32> = GLF_dead5color;
      GLF_dead5color = vec4<f32>(x_601.x, x_601.y, x_601.z, x_602.w);
      let x_604 : mat3x3<f32> = GLF_dead5matrix_1;
      let x_605 : vec3<f32> = GLF_dead5vector_1;
      let x_607 : vec4<f32> = GLF_dead5color;
      let x_609 : vec3<f32> = (vec3<f32>(x_607.x, x_607.y, x_607.z) + (x_604 * x_605));
      let x_610 : vec4<f32> = GLF_dead5color;
      GLF_dead5color = vec4<f32>(x_609.x, x_609.y, x_609.z, x_610.w);
      let x_612 : mat3x3<f32> = GLF_dead5matrix_1;
      let x_613 : mat3x3<f32> = GLF_dead5matrix_2;
      let x_615 : vec4<f32> = GLF_dead5color;
      let x_617 : vec3<f32> = (vec3<f32>(x_615.x, x_615.y, x_615.z) * (x_612 * x_613));
      let x_618 : vec4<f32> = GLF_dead5color;
      GLF_dead5color = vec4<f32>(x_617.x, x_617.y, x_617.z, x_618.w);
      let x_620 : vec3<f32> = GLF_dead5vector_1;
      let x_621 : vec3<f32> = GLF_dead5vector_2;
      let x_622 : mat3x3<f32> = mat3x3<f32>(vec3<f32>((x_621.x * x_620.x), (x_621.x * x_620.y), (x_621.x * x_620.z)), vec3<f32>((x_621.y * x_620.x), (x_621.y * x_620.y), (x_621.y * x_620.z)), vec3<f32>((x_621.z * x_620.x), (x_621.z * x_620.y), (x_621.z * x_620.z)));
      let x_623 : vec4<f32> = GLF_dead5color;
      let x_625 : vec3<f32> = (vec3<f32>(x_623.x, x_623.y, x_623.z) * x_622);
      let x_626 : vec4<f32> = GLF_dead5color;
      GLF_dead5color = vec4<f32>(x_625.x, x_625.y, x_625.z, x_626.w);
      let x_628 : vec3<f32> = GLF_dead5vector_1;
      let x_629 : vec3<f32> = GLF_dead5vector_2;
      let x_631 : vec4<f32> = GLF_dead5color;
      let x_633 : vec3<f32> = (vec3<f32>(x_631.x, x_631.y, x_631.z) * dot(x_628, x_629));
      let x_634 : vec4<f32> = GLF_dead5color;
      GLF_dead5color = vec4<f32>(x_633.x, x_633.y, x_633.z, x_634.w);
      if (false) {
        let x_643 : f32 = GLF_dead5row;
        let x_644 : f32 = GLF_dead5scalar;
        let x_645 : f32 = GLF_dead5row;
        let x_646 : f32 = GLF_dead5column;
        let x_647 : f32 = GLF_dead5scalar;
        let x_649 : f32 = GLF_dead5row;
        let x_650 : f32 = (x_649 + 1.0);
        GLF_dead5row = x_650;
        let x_651 : f32 = GLF_dead5column;
        let x_657 : f32 = x_655.GLF_dead8one;
        let x_659 : f32 = GLF_dead5scalar;
        let x_660 : f32 = GLF_dead5row;
        let x_661 : f32 = GLF_dead5column;
        let x_662 : vec3<f32> = GLF_dead5vector_1;
        let x_663 : vec3<f32> = GLF_dead5vector_1;
        let x_665 : f32 = GLF_dead5column;
        let x_666 : f32 = GLF_dead5column;
        let x_667 : f32 = (x_666 - 1.0);
        GLF_dead5column = x_667;
        let x_668 : f32 = GLF_dead5row;
        let x_670 : f32 = GLF_dead5column;
        let x_672 : f32 = x_655.GLF_dead8one;
        let x_673 : f32 = GLF_dead5scalar;
        let x_674 : f32 = GLF_dead5column;
        let x_675 : f32 = GLF_dead5scalar;
        let x_676 : f32 = GLF_dead5column;
        let x_677 : f32 = GLF_dead5column;
        let x_678 : f32 = GLF_dead5row;
        let x_680 : f32 = x_655.GLF_dead8one;
        let x_681 : vec3<f32> = GLF_dead5vector_1;
        let x_682 : vec3<f32> = GLF_dead5vector_1;
        let x_684 : f32 = GLF_dead5row;
        let x_685 : f32 = GLF_dead5column;
        let x_686 : f32 = GLF_dead5row;
        let x_687 : f32 = GLF_dead5column;
        let x_690 : f32 = x_655.GLF_dead8one;
        let x_692 : f32 = GLF_dead5scalar;
        let x_693 : f32 = GLF_dead5row;
        let x_694 : f32 = (x_693 + 1.0);
        GLF_dead5row = x_694;
        let x_695 : f32 = GLF_dead5column;
        let x_696 : f32 = (x_695 - 1.0);
        GLF_dead5column = x_696;
        let x_697 : f32 = GLF_dead5row;
        let x_698 : f32 = GLF_dead5scalar;
        let x_699 : f32 = GLF_dead5row;
        let x_700 : f32 = GLF_dead5column;
        let x_703 : f32 = x_655.GLF_dead8one;
        let x_705 : f32 = GLF_dead5scalar;
        let x_706 : vec3<f32> = GLF_dead5vector_1;
        let x_707 : vec3<f32> = GLF_dead5vector_1;
        let x_709 : f32 = GLF_dead5row;
        let x_710 : f32 = GLF_dead5column;
        let x_711 : f32 = GLF_dead5row;
        let x_712 : f32 = GLF_dead5scalar;
        let x_714 : f32 = x_655.GLF_dead8one;
        donor_replacementGLF_dead13A = array<f32, 50u>(0.720000029, x_643, x_644, x_645, x_646, x_647, 20.11000061, x_650, ((x_651 * 57.295780182) * x_657), x_659, x_660, x_661, dot(x_662, x_663), x_665, x_667, x_668, 8638.0, x_670, x_672, x_673, x_674, x_675, x_676, x_677, x_678, 20.11000061, 0.720000029, 8638.0, x_680, dot(x_681, x_682), x_684, x_685, x_686, ((x_687 * 57.295780182) * x_690), x_692, x_694, x_696, x_697, 0.720000029, x_698, x_699, ((x_700 * 57.295780182) * x_703), x_705, dot(x_706, x_707), x_709, x_710, 20.11000061, x_711, x_712, x_714);
        let x_717 : f32 = GLF_dead13gl_FragCoord.x;
        if ((i32(x_717) < 180)) {
          let x_725 : f32 = donor_replacementGLF_dead13A[40];
          let x_730 : f32 = x_728.GLF_dead13resolution.x;
          let x_734 : f32 = donor_replacementGLF_dead13A[44];
          let x_736 : f32 = x_728.GLF_dead13resolution.y;
          GLF_dead13_GLF_color = vec4<f32>((x_725 / x_730), (x_734 / x_736), 1.0, 1.0);
        } else {
          let x_741 : f32 = GLF_dead13gl_FragCoord.x;
          if ((i32(x_741) < 180)) {
            let x_748 : f32 = donor_replacementGLF_dead13A[45];
            let x_750 : f32 = x_728.GLF_dead13resolution.x;
            let x_754 : f32 = donor_replacementGLF_dead13A[49];
            let x_756 : f32 = x_728.GLF_dead13resolution.y;
            GLF_dead13_GLF_color = vec4<f32>((x_748 / x_750), (x_754 / x_756), 1.0, 1.0);
          } else {
            discard;
          }
        }
      }
      let x_761 : vec4<f32> = GLF_dead5color;
      let x_763 : vec3<f32> = sin(vec3<f32>(x_761.x, x_761.y, x_761.z));
      GLF_dead5color = vec4<f32>(x_763.x, x_763.y, x_763.z, 1.0);
    }
    if (false) {
      donor_replacementGLF_dead2p = vec2<i32>(-2059, -30667);
      if (false) {
        let x_779 : f32 = gl_FragCoord.y;
        if ((x_779 < 0.0)) {
          donor_replacementGLF_dead14c = vec3<f32>(-8.199999809, -3.400000095, -1.700000048);
          let x_787 : i32 = count;
          let x_790 : i32 = count;
          let x_793 : f32 = donor_replacementGLF_dead14c[clamp(x_790, 0, 2)];
          let x_794 : i32 = count;
          let x_797 : f32 = donor_replacementGLF_dead14c[clamp(x_794, 0, 2)];
          donor_replacementGLF_dead14c[clamp(x_787, 0, 2)] = (x_793 * x_797);
        }
        let x_802 : i32 = *(v);
        donor_replacementGLF_dead8overall_region = (-89127 >> bitcast<u32>(x_802));
        let x_805 : vec4<f32> = x_GLF_color;
        x_GLF_outVarBackup_GLF_color_2 = x_805;
        x_GLF_color = vec4<f32>(-3680.080810547, 4148.155761719, -9324.436523438, 5.218483925);
        if (true) {
          let x_813 : vec4<f32> = x_GLF_outVarBackup_GLF_color_2;
          x_GLF_color = x_813;
        }
        donor_replacementGLF_dead8sums = array<f32, 9u>(3.900000095, 7430.902832031, -9.0, 9.699999809, -4.699999809, 8.300000191, -8.600000381, 4.5, 7.800000191);
        let x_826 : i32 = donor_replacementGLF_dead8overall_region;
        let x_828 : i32 = donor_replacementGLF_dead8overall_region;
        if (((x_826 > 0) & (x_828 < 9))) {
          let x_834 : i32 = donor_replacementGLF_dead8overall_region;
          let x_838 : f32 = donor_replacementGLF_dead8sums[clamp(x_834, 0, 8)];
          let x_839 : vec3<f32> = vec3<f32>(x_838, x_838, x_838);
          GLF_dead8_GLF_color = vec4<f32>(x_839.x, x_839.y, x_839.z, 1.0);
        } else {
          GLF_dead8_GLF_color = vec4<f32>(0.0, 0.0, 0.0, 1.0);
          let x_847 : f32 = gl_FragCoord.y;
          if ((x_847 < 0.0)) {
            let x_854 : vec4<f32> = GLF_dead15gl_FragCoord;
            GLF_dead15icoord = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_854.x, x_854.y)));
            let x_860 : i32 = GLF_dead15icoord.x;
            GLF_dead15A = select(-1, 0, ((x_860 & 1) != 0));
            let x_866 : i32 = GLF_dead15icoord.x;
            GLF_dead15B = select(-1, 0, ((x_866 & 2) != 0));
            let x_872 : i32 = GLF_dead15icoord.x;
            GLF_dead15C = select(-1, 0, ((x_872 & 4) != 0));
            let x_878 : i32 = GLF_dead15icoord.x;
            GLF_dead15D = select(-1, 0, ((x_878 & 8) != 0));
            let x_884 : i32 = GLF_dead15icoord.x;
            GLF_dead15E = select(-1, 0, ((x_884 & 16) != 0));
            let x_890 : i32 = GLF_dead15icoord.y;
            GLF_dead15F = select(-1, 0, ((x_890 & 1) != 0));
            let x_896 : i32 = GLF_dead15icoord.y;
            GLF_dead15G = select(-1, 0, ((x_896 & 2) != 0));
            let x_902 : i32 = GLF_dead15icoord.y;
            GLF_dead15H = select(-1, 0, ((x_902 & 4) != 0));
            let x_908 : i32 = GLF_dead15icoord.y;
            GLF_dead15I = select(-1, 0, ((x_908 & 8) != 0));
            let x_914 : i32 = GLF_dead15icoord.y;
            GLF_dead15J = select(-1, 0, ((x_914 & 16) != 0));
            let x_919 : i32 = GLF_dead15A;
            let x_920 : i32 = GLF_dead15C;
            let x_923 : i32 = GLF_dead15D;
            let x_926 : i32 = GLF_dead15E;
            let x_929 : i32 = GLF_dead15F;
            let x_931 : i32 = GLF_dead15G;
            let x_933 : i32 = GLF_dead15H;
            let x_935 : i32 = GLF_dead15I;
            let x_938 : i32 = GLF_dead15J;
            let x_941 : i32 = GLF_dead15B;
            let x_942 : i32 = GLF_dead15C;
            let x_945 : i32 = GLF_dead15D;
            let x_948 : i32 = GLF_dead15E;
            let x_951 : i32 = GLF_dead15F;
            let x_953 : i32 = GLF_dead15G;
            let x_955 : i32 = GLF_dead15H;
            let x_957 : i32 = GLF_dead15I;
            let x_960 : i32 = GLF_dead15J;
            let x_964 : i32 = GLF_dead15A;
            let x_966 : i32 = GLF_dead15C;
            let x_968 : i32 = GLF_dead15D;
            let x_971 : i32 = GLF_dead15E;
            let x_974 : i32 = GLF_dead15F;
            let x_976 : i32 = GLF_dead15H;
            let x_979 : i32 = GLF_dead15I;
            let x_981 : i32 = GLF_dead15J;
            let x_985 : i32 = GLF_dead15A;
            let x_986 : i32 = GLF_dead15B;
            let x_989 : i32 = GLF_dead15D;
            let x_992 : i32 = GLF_dead15E;
            let x_995 : i32 = GLF_dead15G;
            let x_997 : i32 = GLF_dead15H;
            let x_1000 : i32 = GLF_dead15I;
            let x_1002 : i32 = GLF_dead15J;
            GLF_dead15res = (((((((((((x_919 | ~(x_920)) | ~(x_923)) | ~(x_926)) | x_929) | x_931) | x_933) | ~(x_935)) | ~(x_938)) & ((((((((x_941 | ~(x_942)) | ~(x_945)) | ~(x_948)) | x_951) | x_953) | x_955) | ~(x_957)) | ~(x_960))) & (((((((~(x_964) | x_966) | ~(x_968)) | ~(x_971)) | x_974) | ~(x_976)) | x_979) | ~(x_981))) & (((((((x_985 | ~(x_986)) | ~(x_989)) | ~(x_992)) | x_995) | ~(x_997)) | x_1000) | ~(x_1002)));
            let x_1006 : i32 = GLF_dead15A;
            let x_1007 : i32 = GLF_dead15B;
            let x_1009 : i32 = GLF_dead15C;
            let x_1012 : i32 = GLF_dead15D;
            let x_1014 : i32 = GLF_dead15E;
            let x_1017 : i32 = GLF_dead15F;
            let x_1019 : i32 = GLF_dead15G;
            let x_1021 : i32 = GLF_dead15H;
            let x_1024 : i32 = GLF_dead15I;
            let x_1026 : i32 = GLF_dead15J;
            let x_1029 : i32 = GLF_dead15B;
            let x_1030 : i32 = GLF_dead15C;
            let x_1033 : i32 = GLF_dead15D;
            let x_1036 : i32 = GLF_dead15E;
            let x_1039 : i32 = GLF_dead15F;
            let x_1042 : i32 = GLF_dead15G;
            let x_1045 : i32 = GLF_dead15H;
            let x_1047 : i32 = GLF_dead15I;
            let x_1049 : i32 = GLF_dead15J;
            let x_1053 : i32 = GLF_dead15A;
            let x_1054 : i32 = GLF_dead15C;
            let x_1056 : i32 = GLF_dead15D;
            let x_1059 : i32 = GLF_dead15E;
            let x_1062 : i32 = GLF_dead15G;
            let x_1065 : i32 = GLF_dead15H;
            let x_1067 : i32 = GLF_dead15I;
            let x_1069 : i32 = GLF_dead15J;
            let x_1073 : i32 = GLF_dead15A;
            let x_1074 : i32 = GLF_dead15C;
            let x_1076 : i32 = GLF_dead15D;
            let x_1079 : i32 = GLF_dead15E;
            let x_1082 : i32 = GLF_dead15F;
            let x_1085 : i32 = GLF_dead15H;
            let x_1087 : i32 = GLF_dead15I;
            let x_1089 : i32 = GLF_dead15J;
            let x_1093 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1093 & ((((((((((((x_1006 | x_1007) | ~(x_1009)) | x_1012) | ~(x_1014)) | x_1017) | x_1019) | ~(x_1021)) | x_1024) | ~(x_1026)) & ((((((((x_1029 | ~(x_1030)) | ~(x_1033)) | ~(x_1036)) | ~(x_1039)) | ~(x_1042)) | x_1045) | x_1047) | ~(x_1049))) & (((((((x_1053 | x_1054) | ~(x_1056)) | ~(x_1059)) | ~(x_1062)) | x_1065) | x_1067) | ~(x_1069))) & (((((((x_1073 | x_1074) | ~(x_1076)) | ~(x_1079)) | ~(x_1082)) | x_1085) | x_1087) | ~(x_1089))));
            let x_1095 : i32 = GLF_dead15A;
            let x_1096 : i32 = GLF_dead15B;
            let x_1098 : i32 = GLF_dead15C;
            let x_1101 : i32 = GLF_dead15D;
            let x_1103 : i32 = GLF_dead15E;
            let x_1106 : i32 = GLF_dead15G;
            let x_1109 : i32 = GLF_dead15H;
            let x_1111 : i32 = GLF_dead15I;
            let x_1113 : i32 = GLF_dead15J;
            let x_1116 : i32 = GLF_dead15A;
            let x_1118 : i32 = GLF_dead15C;
            let x_1120 : i32 = GLF_dead15D;
            let x_1122 : i32 = GLF_dead15E;
            let x_1125 : i32 = GLF_dead15G;
            let x_1128 : i32 = GLF_dead15H;
            let x_1130 : i32 = GLF_dead15I;
            let x_1132 : i32 = GLF_dead15J;
            let x_1136 : i32 = GLF_dead15A;
            let x_1138 : i32 = GLF_dead15B;
            let x_1141 : i32 = GLF_dead15C;
            let x_1144 : i32 = GLF_dead15D;
            let x_1147 : i32 = GLF_dead15E;
            let x_1149 : i32 = GLF_dead15G;
            let x_1152 : i32 = GLF_dead15H;
            let x_1154 : i32 = GLF_dead15I;
            let x_1156 : i32 = GLF_dead15J;
            let x_1160 : i32 = GLF_dead15A;
            let x_1161 : i32 = GLF_dead15B;
            let x_1164 : i32 = GLF_dead15D;
            let x_1166 : i32 = GLF_dead15E;
            let x_1169 : i32 = GLF_dead15G;
            let x_1171 : i32 = GLF_dead15H;
            let x_1173 : i32 = GLF_dead15I;
            let x_1175 : i32 = GLF_dead15J;
            let x_1179 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1179 & (((((((((((x_1095 | x_1096) | ~(x_1098)) | x_1101) | ~(x_1103)) | ~(x_1106)) | x_1109) | x_1111) | ~(x_1113)) & (((((((~(x_1116) | x_1118) | x_1120) | ~(x_1122)) | ~(x_1125)) | x_1128) | x_1130) | ~(x_1132))) & ((((((((~(x_1136) | ~(x_1138)) | ~(x_1141)) | ~(x_1144)) | x_1147) | ~(x_1149)) | x_1152) | x_1154) | ~(x_1156))) & (((((((x_1160 | ~(x_1161)) | x_1164) | ~(x_1166)) | x_1169) | x_1171) | x_1173) | ~(x_1175))));
            let x_1181 : i32 = GLF_dead15A;
            let x_1183 : i32 = GLF_dead15B;
            let x_1185 : i32 = GLF_dead15C;
            let x_1188 : i32 = GLF_dead15D;
            let x_1190 : i32 = GLF_dead15E;
            let x_1193 : i32 = GLF_dead15G;
            let x_1195 : i32 = GLF_dead15H;
            let x_1197 : i32 = GLF_dead15I;
            let x_1199 : i32 = GLF_dead15J;
            let x_1202 : i32 = GLF_dead15A;
            let x_1203 : i32 = GLF_dead15B;
            let x_1206 : i32 = GLF_dead15D;
            let x_1209 : i32 = GLF_dead15E;
            let x_1211 : i32 = GLF_dead15G;
            let x_1213 : i32 = GLF_dead15H;
            let x_1215 : i32 = GLF_dead15I;
            let x_1217 : i32 = GLF_dead15J;
            let x_1221 : i32 = GLF_dead15A;
            let x_1222 : i32 = GLF_dead15C;
            let x_1225 : i32 = GLF_dead15D;
            let x_1228 : i32 = GLF_dead15E;
            let x_1230 : i32 = GLF_dead15F;
            let x_1232 : i32 = GLF_dead15G;
            let x_1234 : i32 = GLF_dead15H;
            let x_1236 : i32 = GLF_dead15I;
            let x_1238 : i32 = GLF_dead15J;
            let x_1242 : i32 = GLF_dead15A;
            let x_1244 : i32 = GLF_dead15C;
            let x_1246 : i32 = GLF_dead15D;
            let x_1249 : i32 = GLF_dead15E;
            let x_1251 : i32 = GLF_dead15F;
            let x_1253 : i32 = GLF_dead15G;
            let x_1255 : i32 = GLF_dead15H;
            let x_1257 : i32 = GLF_dead15I;
            let x_1259 : i32 = GLF_dead15J;
            let x_1263 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1263 & (((((((((((~(x_1181) | x_1183) | ~(x_1185)) | x_1188) | ~(x_1190)) | x_1193) | x_1195) | x_1197) | ~(x_1199)) & (((((((x_1202 | ~(x_1203)) | ~(x_1206)) | x_1209) | x_1211) | x_1213) | x_1215) | ~(x_1217))) & ((((((((x_1221 | ~(x_1222)) | ~(x_1225)) | x_1228) | x_1230) | x_1232) | x_1234) | x_1236) | ~(x_1238))) & ((((((((~(x_1242) | x_1244) | ~(x_1246)) | x_1249) | x_1251) | x_1253) | x_1255) | x_1257) | ~(x_1259))));
            let x_1265 : i32 = GLF_dead15A;
            let x_1267 : i32 = GLF_dead15B;
            let x_1270 : i32 = GLF_dead15C;
            let x_1272 : i32 = GLF_dead15D;
            let x_1275 : i32 = GLF_dead15E;
            let x_1278 : i32 = GLF_dead15F;
            let x_1281 : i32 = GLF_dead15G;
            let x_1284 : i32 = GLF_dead15H;
            let x_1287 : i32 = GLF_dead15I;
            let x_1290 : i32 = GLF_dead15J;
            let x_1292 : i32 = GLF_dead15A;
            let x_1293 : i32 = GLF_dead15B;
            let x_1296 : i32 = GLF_dead15C;
            let x_1298 : i32 = GLF_dead15D;
            let x_1300 : i32 = GLF_dead15E;
            let x_1303 : i32 = GLF_dead15F;
            let x_1306 : i32 = GLF_dead15G;
            let x_1309 : i32 = GLF_dead15H;
            let x_1312 : i32 = GLF_dead15I;
            let x_1315 : i32 = GLF_dead15J;
            let x_1318 : i32 = GLF_dead15A;
            let x_1320 : i32 = GLF_dead15B;
            let x_1322 : i32 = GLF_dead15C;
            let x_1324 : i32 = GLF_dead15D;
            let x_1326 : i32 = GLF_dead15E;
            let x_1329 : i32 = GLF_dead15G;
            let x_1332 : i32 = GLF_dead15H;
            let x_1335 : i32 = GLF_dead15I;
            let x_1338 : i32 = GLF_dead15J;
            let x_1341 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1341 & (((((((((((~(x_1265) | ~(x_1267)) | x_1270) | ~(x_1272)) | ~(x_1275)) | ~(x_1278)) | ~(x_1281)) | ~(x_1284)) | ~(x_1287)) | x_1290) & (((((((((x_1292 | ~(x_1293)) | x_1296) | x_1298) | ~(x_1300)) | ~(x_1303)) | ~(x_1306)) | ~(x_1309)) | ~(x_1312)) | x_1315)) & ((((((((~(x_1318) | x_1320) | x_1322) | x_1324) | ~(x_1326)) | ~(x_1329)) | ~(x_1332)) | ~(x_1335)) | x_1338)));
            let x_1343 : i32 = GLF_dead15C;
            let x_1345 : i32 = GLF_dead15D;
            let x_1348 : i32 = GLF_dead15E;
            let x_1350 : i32 = GLF_dead15F;
            let x_1353 : i32 = GLF_dead15G;
            let x_1356 : i32 = GLF_dead15H;
            let x_1359 : i32 = GLF_dead15I;
            let x_1362 : i32 = GLF_dead15J;
            let x_1364 : i32 = GLF_dead15A;
            let x_1366 : i32 = GLF_dead15C;
            let x_1369 : i32 = GLF_dead15D;
            let x_1372 : i32 = GLF_dead15E;
            let x_1374 : i32 = GLF_dead15G;
            let x_1377 : i32 = GLF_dead15H;
            let x_1380 : i32 = GLF_dead15I;
            let x_1383 : i32 = GLF_dead15J;
            let x_1386 : i32 = GLF_dead15B;
            let x_1387 : i32 = GLF_dead15D;
            let x_1390 : i32 = GLF_dead15E;
            let x_1392 : i32 = GLF_dead15F;
            let x_1395 : i32 = GLF_dead15H;
            let x_1398 : i32 = GLF_dead15I;
            let x_1401 : i32 = GLF_dead15J;
            let x_1404 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1404 & (((((((((~(x_1343) | ~(x_1345)) | x_1348) | ~(x_1350)) | ~(x_1353)) | ~(x_1356)) | ~(x_1359)) | x_1362) & (((((((~(x_1364) | ~(x_1366)) | ~(x_1369)) | x_1372) | ~(x_1374)) | ~(x_1377)) | ~(x_1380)) | x_1383)) & ((((((x_1386 | ~(x_1387)) | x_1390) | ~(x_1392)) | ~(x_1395)) | ~(x_1398)) | x_1401)));
            let x_1406 : i32 = GLF_dead15A;
            let x_1407 : i32 = GLF_dead15B;
            let x_1409 : i32 = GLF_dead15C;
            let x_1411 : i32 = GLF_dead15D;
            let x_1414 : i32 = GLF_dead15E;
            let x_1416 : i32 = GLF_dead15G;
            let x_1419 : i32 = GLF_dead15H;
            let x_1422 : i32 = GLF_dead15I;
            let x_1425 : i32 = GLF_dead15J;
            let x_1427 : i32 = GLF_dead15B;
            let x_1428 : i32 = GLF_dead15C;
            let x_1430 : i32 = GLF_dead15D;
            let x_1432 : i32 = GLF_dead15E;
            let x_1435 : i32 = GLF_dead15F;
            let x_1437 : i32 = GLF_dead15G;
            let x_1440 : i32 = GLF_dead15H;
            let x_1443 : i32 = GLF_dead15I;
            let x_1446 : i32 = GLF_dead15J;
            let x_1449 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1449 & (((((((((x_1406 | x_1407) | x_1409) | ~(x_1411)) | x_1414) | ~(x_1416)) | ~(x_1419)) | ~(x_1422)) | x_1425) & ((((((((x_1427 | x_1428) | x_1430) | ~(x_1432)) | x_1435) | ~(x_1437)) | ~(x_1440)) | ~(x_1443)) | x_1446)));
            let x_1451 : i32 = GLF_dead15A;
            let x_1452 : i32 = GLF_dead15C;
            let x_1455 : i32 = GLF_dead15D;
            let x_1457 : i32 = GLF_dead15E;
            let x_1459 : i32 = GLF_dead15F;
            let x_1461 : i32 = GLF_dead15G;
            let x_1464 : i32 = GLF_dead15H;
            let x_1467 : i32 = GLF_dead15I;
            let x_1470 : i32 = GLF_dead15J;
            let x_1472 : i32 = GLF_dead15B;
            let x_1473 : i32 = GLF_dead15C;
            let x_1476 : i32 = GLF_dead15D;
            let x_1478 : i32 = GLF_dead15E;
            let x_1480 : i32 = GLF_dead15F;
            let x_1482 : i32 = GLF_dead15G;
            let x_1485 : i32 = GLF_dead15H;
            let x_1488 : i32 = GLF_dead15J;
            let x_1491 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1491 & (((((((((x_1451 | ~(x_1452)) | x_1455) | x_1457) | x_1459) | ~(x_1461)) | ~(x_1464)) | ~(x_1467)) | x_1470) & (((((((x_1472 | ~(x_1473)) | x_1476) | x_1478) | x_1480) | ~(x_1482)) | ~(x_1485)) | x_1488)));
            let x_1493 : i32 = GLF_dead15A;
            let x_1495 : i32 = GLF_dead15B;
            let x_1498 : i32 = GLF_dead15C;
            let x_1500 : i32 = GLF_dead15D;
            let x_1502 : i32 = GLF_dead15E;
            let x_1504 : i32 = GLF_dead15F;
            let x_1506 : i32 = GLF_dead15G;
            let x_1509 : i32 = GLF_dead15H;
            let x_1512 : i32 = GLF_dead15I;
            let x_1515 : i32 = GLF_dead15J;
            let x_1517 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1517 & (((((((((~(x_1493) | ~(x_1495)) | x_1498) | x_1500) | x_1502) | x_1504) | ~(x_1506)) | ~(x_1509)) | ~(x_1512)) | x_1515));
            let x_1519 : i32 = GLF_dead15A;
            let x_1520 : i32 = GLF_dead15B;
            let x_1522 : i32 = GLF_dead15C;
            let x_1525 : i32 = GLF_dead15D;
            let x_1528 : i32 = GLF_dead15E;
            let x_1530 : i32 = GLF_dead15G;
            let x_1532 : i32 = GLF_dead15H;
            let x_1535 : i32 = GLF_dead15I;
            let x_1538 : i32 = GLF_dead15J;
            let x_1540 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1540 & ((((((((x_1519 | x_1520) | ~(x_1522)) | ~(x_1525)) | x_1528) | x_1530) | ~(x_1532)) | ~(x_1535)) | x_1538));
            let x_1542 : i32 = GLF_dead15B;
            let x_1544 : i32 = GLF_dead15D;
            let x_1546 : i32 = GLF_dead15E;
            let x_1548 : i32 = GLF_dead15F;
            let x_1551 : i32 = GLF_dead15G;
            let x_1553 : i32 = GLF_dead15H;
            let x_1556 : i32 = GLF_dead15I;
            let x_1559 : i32 = GLF_dead15J;
            let x_1561 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1561 & (((((((~(x_1542) | x_1544) | x_1546) | ~(x_1548)) | x_1551) | ~(x_1553)) | ~(x_1556)) | x_1559));
            let x_1563 : i32 = GLF_dead15B;
            let x_1565 : i32 = GLF_dead15C;
            let x_1567 : i32 = GLF_dead15D;
            let x_1570 : i32 = GLF_dead15E;
            let x_1572 : i32 = GLF_dead15F;
            let x_1574 : i32 = GLF_dead15G;
            let x_1576 : i32 = GLF_dead15H;
            let x_1579 : i32 = GLF_dead15I;
            let x_1582 : i32 = GLF_dead15J;
            let x_1584 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1584 & ((((((((~(x_1563) | x_1565) | ~(x_1567)) | x_1570) | x_1572) | x_1574) | ~(x_1576)) | ~(x_1579)) | x_1582));
            let x_1586 : i32 = GLF_dead15A;
            let x_1588 : i32 = GLF_dead15B;
            let x_1591 : i32 = GLF_dead15C;
            let x_1594 : i32 = GLF_dead15D;
            let x_1596 : i32 = GLF_dead15E;
            let x_1598 : i32 = GLF_dead15F;
            let x_1600 : i32 = GLF_dead15G;
            let x_1602 : i32 = GLF_dead15I;
            let x_1605 : i32 = GLF_dead15J;
            let x_1607 : i32 = GLF_dead15B;
            let x_1609 : i32 = GLF_dead15C;
            let x_1612 : i32 = GLF_dead15D;
            let x_1614 : i32 = GLF_dead15E;
            let x_1616 : i32 = GLF_dead15F;
            let x_1619 : i32 = GLF_dead15G;
            let x_1622 : i32 = GLF_dead15H;
            let x_1624 : i32 = GLF_dead15I;
            let x_1627 : i32 = GLF_dead15J;
            let x_1630 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1630 & (((((((((~(x_1586) | ~(x_1588)) | ~(x_1591)) | x_1594) | x_1596) | x_1598) | x_1600) | ~(x_1602)) | x_1605) & ((((((((~(x_1607) | ~(x_1609)) | x_1612) | x_1614) | ~(x_1616)) | ~(x_1619)) | x_1622) | ~(x_1624)) | x_1627)));
            let x_1632 : i32 = GLF_dead15A;
            let x_1634 : i32 = GLF_dead15B;
            let x_1636 : i32 = GLF_dead15C;
            let x_1638 : i32 = GLF_dead15D;
            let x_1640 : i32 = GLF_dead15E;
            let x_1642 : i32 = GLF_dead15H;
            let x_1644 : i32 = GLF_dead15I;
            let x_1647 : i32 = GLF_dead15J;
            let x_1649 : i32 = GLF_dead15B;
            let x_1650 : i32 = GLF_dead15C;
            let x_1652 : i32 = GLF_dead15D;
            let x_1654 : i32 = GLF_dead15E;
            let x_1656 : i32 = GLF_dead15F;
            let x_1658 : i32 = GLF_dead15G;
            let x_1661 : i32 = GLF_dead15H;
            let x_1663 : i32 = GLF_dead15I;
            let x_1666 : i32 = GLF_dead15J;
            let x_1669 : i32 = GLF_dead15A;
            let x_1670 : i32 = GLF_dead15B;
            let x_1672 : i32 = GLF_dead15C;
            let x_1674 : i32 = GLF_dead15D;
            let x_1677 : i32 = GLF_dead15E;
            let x_1679 : i32 = GLF_dead15F;
            let x_1681 : i32 = GLF_dead15G;
            let x_1683 : i32 = GLF_dead15H;
            let x_1685 : i32 = GLF_dead15I;
            let x_1688 : i32 = GLF_dead15J;
            let x_1691 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1691 & (((((((((~(x_1632) | x_1634) | x_1636) | x_1638) | x_1640) | x_1642) | ~(x_1644)) | x_1647) & ((((((((x_1649 | x_1650) | x_1652) | x_1654) | x_1656) | ~(x_1658)) | x_1661) | ~(x_1663)) | x_1666)) & (((((((((x_1669 | x_1670) | x_1672) | ~(x_1674)) | x_1677) | x_1679) | x_1681) | x_1683) | ~(x_1685)) | x_1688)));
            let x_1693 : i32 = GLF_dead15A;
            let x_1694 : i32 = GLF_dead15B;
            let x_1697 : i32 = GLF_dead15C;
            let x_1699 : i32 = GLF_dead15D;
            let x_1701 : i32 = GLF_dead15E;
            let x_1703 : i32 = GLF_dead15F;
            let x_1705 : i32 = GLF_dead15G;
            let x_1707 : i32 = GLF_dead15H;
            let x_1709 : i32 = GLF_dead15I;
            let x_1712 : i32 = GLF_dead15J;
            let x_1714 : i32 = GLF_dead15B;
            let x_1716 : i32 = GLF_dead15D;
            let x_1718 : i32 = GLF_dead15E;
            let x_1720 : i32 = GLF_dead15F;
            let x_1723 : i32 = GLF_dead15G;
            let x_1726 : i32 = GLF_dead15H;
            let x_1729 : i32 = GLF_dead15I;
            let x_1731 : i32 = GLF_dead15J;
            let x_1734 : i32 = GLF_dead15A;
            let x_1736 : i32 = GLF_dead15B;
            let x_1739 : i32 = GLF_dead15C;
            let x_1741 : i32 = GLF_dead15E;
            let x_1744 : i32 = GLF_dead15G;
            let x_1747 : i32 = GLF_dead15H;
            let x_1750 : i32 = GLF_dead15I;
            let x_1752 : i32 = GLF_dead15J;
            let x_1756 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1756 & (((((((((((x_1693 | ~(x_1694)) | x_1697) | x_1699) | x_1701) | x_1703) | x_1705) | x_1707) | ~(x_1709)) | x_1712) & (((((((~(x_1714) | x_1716) | x_1718) | ~(x_1720)) | ~(x_1723)) | ~(x_1726)) | x_1729) | x_1731)) & (((((((~(x_1734) | ~(x_1736)) | x_1739) | ~(x_1741)) | ~(x_1744)) | ~(x_1747)) | x_1750) | ~(x_1752))));
            let x_1758 : i32 = GLF_dead15A;
            let x_1760 : i32 = GLF_dead15D;
            let x_1763 : i32 = GLF_dead15E;
            let x_1766 : i32 = GLF_dead15F;
            let x_1769 : i32 = GLF_dead15G;
            let x_1771 : i32 = GLF_dead15H;
            let x_1774 : i32 = GLF_dead15I;
            let x_1776 : i32 = GLF_dead15J;
            let x_1779 : i32 = GLF_dead15A;
            let x_1780 : i32 = GLF_dead15B;
            let x_1782 : i32 = GLF_dead15E;
            let x_1785 : i32 = GLF_dead15F;
            let x_1788 : i32 = GLF_dead15G;
            let x_1791 : i32 = GLF_dead15H;
            let x_1793 : i32 = GLF_dead15I;
            let x_1795 : i32 = GLF_dead15J;
            let x_1799 : i32 = GLF_dead15B;
            let x_1801 : i32 = GLF_dead15C;
            let x_1803 : i32 = GLF_dead15D;
            let x_1805 : i32 = GLF_dead15E;
            let x_1808 : i32 = GLF_dead15F;
            let x_1810 : i32 = GLF_dead15G;
            let x_1813 : i32 = GLF_dead15H;
            let x_1815 : i32 = GLF_dead15I;
            let x_1817 : i32 = GLF_dead15J;
            let x_1821 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1821 & (((((((((~(x_1758) | ~(x_1760)) | ~(x_1763)) | ~(x_1766)) | x_1769) | ~(x_1771)) | x_1774) | ~(x_1776)) & (((((((x_1779 | x_1780) | ~(x_1782)) | ~(x_1785)) | ~(x_1788)) | x_1791) | x_1793) | ~(x_1795))) & ((((((((~(x_1799) | x_1801) | x_1803) | ~(x_1805)) | x_1808) | ~(x_1810)) | x_1813) | x_1815) | ~(x_1817))));
            let x_1823 : i32 = GLF_dead15B;
            let x_1825 : i32 = GLF_dead15C;
            let x_1828 : i32 = GLF_dead15D;
            let x_1831 : i32 = GLF_dead15E;
            let x_1833 : i32 = GLF_dead15F;
            let x_1835 : i32 = GLF_dead15G;
            let x_1838 : i32 = GLF_dead15H;
            let x_1840 : i32 = GLF_dead15I;
            let x_1842 : i32 = GLF_dead15J;
            let x_1845 : i32 = GLF_dead15A;
            let x_1847 : i32 = GLF_dead15B;
            let x_1850 : i32 = GLF_dead15C;
            let x_1852 : i32 = GLF_dead15D;
            let x_1855 : i32 = GLF_dead15G;
            let x_1857 : i32 = GLF_dead15H;
            let x_1859 : i32 = GLF_dead15I;
            let x_1861 : i32 = GLF_dead15J;
            let x_1865 : i32 = GLF_dead15C;
            let x_1867 : i32 = GLF_dead15D;
            let x_1869 : i32 = GLF_dead15E;
            let x_1872 : i32 = GLF_dead15F;
            let x_1875 : i32 = GLF_dead15G;
            let x_1877 : i32 = GLF_dead15H;
            let x_1879 : i32 = GLF_dead15I;
            let x_1881 : i32 = GLF_dead15J;
            let x_1885 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1885 & ((((((((((~(x_1823) | ~(x_1825)) | ~(x_1828)) | x_1831) | x_1833) | ~(x_1835)) | x_1838) | x_1840) | ~(x_1842)) & (((((((~(x_1845) | ~(x_1847)) | x_1850) | ~(x_1852)) | x_1855) | x_1857) | x_1859) | ~(x_1861))) & (((((((~(x_1865) | x_1867) | ~(x_1869)) | ~(x_1872)) | x_1875) | x_1877) | x_1879) | ~(x_1881))));
            let x_1887 : i32 = GLF_dead15A;
            let x_1889 : i32 = GLF_dead15B;
            let x_1891 : i32 = GLF_dead15C;
            let x_1893 : i32 = GLF_dead15E;
            let x_1895 : i32 = GLF_dead15F;
            let x_1897 : i32 = GLF_dead15G;
            let x_1899 : i32 = GLF_dead15H;
            let x_1902 : i32 = GLF_dead15I;
            let x_1905 : i32 = GLF_dead15J;
            let x_1907 : i32 = GLF_dead15A;
            let x_1909 : i32 = GLF_dead15B;
            let x_1911 : i32 = GLF_dead15D;
            let x_1913 : i32 = GLF_dead15E;
            let x_1915 : i32 = GLF_dead15G;
            let x_1918 : i32 = GLF_dead15H;
            let x_1920 : i32 = GLF_dead15I;
            let x_1923 : i32 = GLF_dead15J;
            let x_1926 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1926 & (((((((((~(x_1887) | x_1889) | x_1891) | x_1893) | x_1895) | x_1897) | ~(x_1899)) | ~(x_1902)) | x_1905) & (((((((~(x_1907) | x_1909) | x_1911) | x_1913) | ~(x_1915)) | x_1918) | ~(x_1920)) | x_1923)));
            let x_1928 : i32 = GLF_dead15A;
            let x_1929 : i32 = GLF_dead15B;
            let x_1931 : i32 = GLF_dead15C;
            let x_1934 : i32 = GLF_dead15D;
            let x_1937 : i32 = GLF_dead15E;
            let x_1940 : i32 = GLF_dead15F;
            let x_1943 : i32 = GLF_dead15H;
            let x_1946 : i32 = GLF_dead15I;
            let x_1948 : i32 = GLF_dead15J;
            let x_1951 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1951 & ((((((((x_1928 | x_1929) | ~(x_1931)) | ~(x_1934)) | ~(x_1937)) | ~(x_1940)) | ~(x_1943)) | x_1946) | ~(x_1948)));
            let x_1953 : i32 = GLF_dead15A;
            let x_1955 : i32 = GLF_dead15C;
            let x_1958 : i32 = GLF_dead15E;
            let x_1961 : i32 = GLF_dead15F;
            let x_1964 : i32 = GLF_dead15G;
            let x_1966 : i32 = GLF_dead15H;
            let x_1969 : i32 = GLF_dead15I;
            let x_1971 : i32 = GLF_dead15J;
            let x_1974 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1974 & (((((((~(x_1953) | ~(x_1955)) | ~(x_1958)) | ~(x_1961)) | x_1964) | ~(x_1966)) | x_1969) | ~(x_1971)));
            let x_1976 : i32 = GLF_dead15A;
            let x_1977 : i32 = GLF_dead15B;
            let x_1980 : i32 = GLF_dead15C;
            let x_1983 : i32 = GLF_dead15D;
            let x_1985 : i32 = GLF_dead15E;
            let x_1988 : i32 = GLF_dead15F;
            let x_1991 : i32 = GLF_dead15H;
            let x_1994 : i32 = GLF_dead15I;
            let x_1996 : i32 = GLF_dead15J;
            let x_1999 : i32 = GLF_dead15res;
            GLF_dead15res = (x_1999 & ((((((((x_1976 | ~(x_1977)) | ~(x_1980)) | x_1983) | ~(x_1985)) | ~(x_1988)) | ~(x_1991)) | x_1994) | ~(x_1996)));
            let x_2001 : i32 = GLF_dead15B;
            let x_2002 : i32 = GLF_dead15C;
            let x_2005 : i32 = GLF_dead15D;
            let x_2007 : i32 = GLF_dead15E;
            let x_2010 : i32 = GLF_dead15F;
            let x_2013 : i32 = GLF_dead15G;
            let x_2016 : i32 = GLF_dead15H;
            let x_2019 : i32 = GLF_dead15I;
            let x_2021 : i32 = GLF_dead15J;
            let x_2024 : i32 = GLF_dead15A;
            let x_2026 : i32 = GLF_dead15B;
            let x_2029 : i32 = GLF_dead15C;
            let x_2032 : i32 = GLF_dead15D;
            let x_2034 : i32 = GLF_dead15E;
            let x_2037 : i32 = GLF_dead15F;
            let x_2039 : i32 = GLF_dead15H;
            let x_2042 : i32 = GLF_dead15I;
            let x_2044 : i32 = GLF_dead15J;
            let x_2048 : i32 = GLF_dead15B;
            let x_2050 : i32 = GLF_dead15C;
            let x_2053 : i32 = GLF_dead15D;
            let x_2055 : i32 = GLF_dead15E;
            let x_2058 : i32 = GLF_dead15F;
            let x_2060 : i32 = GLF_dead15G;
            let x_2063 : i32 = GLF_dead15H;
            let x_2066 : i32 = GLF_dead15I;
            let x_2068 : i32 = GLF_dead15J;
            let x_2072 : i32 = GLF_dead15res;
            GLF_dead15res = (x_2072 & ((((((((((x_2001 | ~(x_2002)) | x_2005) | ~(x_2007)) | ~(x_2010)) | ~(x_2013)) | ~(x_2016)) | x_2019) | ~(x_2021)) & ((((((((~(x_2024) | ~(x_2026)) | ~(x_2029)) | x_2032) | ~(x_2034)) | x_2037) | ~(x_2039)) | x_2042) | ~(x_2044))) & ((((((((~(x_2048) | ~(x_2050)) | x_2053) | ~(x_2055)) | x_2058) | ~(x_2060)) | ~(x_2063)) | x_2066) | ~(x_2068))));
            let x_2074 : i32 = GLF_dead15res;
            let x_2076 : f32 = select(1.0, 0.0, (x_2074 == 0));
            let x_2077 : vec3<f32> = vec3<f32>(x_2076, x_2076, x_2076);
            GLF_dead15_GLF_color = vec4<f32>(x_2077.x, x_2077.y, x_2077.z, 1.0);
          }
          let x_2083 : vec4<f32> = x_GLF_color;
          x_GLF_outVarBackup_GLF_color_3 = x_2083;
          x_GLF_color = vec4<f32>(-15.699999809, -8669.764648438, 9.199999809, -2.0);
          if (true) {
            let x_2089 : vec4<f32> = x_GLF_outVarBackup_GLF_color_3;
            x_GLF_color = x_2089;
          }
        }
        if (false) {
          discard;
        }
      }
      let x_2094 : i32 = donor_replacementGLF_dead2p.x;
      if ((x_2094 < 0)) {
        let x_2099 : i32 = donor_replacementGLF_dead2p.x;
        donor_replacementGLF_dead2p.x = -(x_2099);
      }
    }
    if (false) {
      donor_replacementGLF_dead0obj = GLF_dead0Obj(array<f32, 10u>(3713.018798828, -3.0, 492.721984863, -3490.479736328, -1869.021850586, 5251.418945312, -7.400000095, 99.540000916, -242.813995361, 492.083007812), array<f32, 10u>(-8211.146484375, -3.400000095, -55.61000061, 3.5, -2593.154541016, 9.5, 5.199999809, -3.200000048, -0.899999976, -3.400000095));
      let x_2129 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_4 = x_2129;
      x_GLF_color = vec4<f32>(0.0, 4.04175717e-06, 0.0002072879, 0.0);
      if (true) {
        let x_2135 : vec4<f32> = x_GLF_outVarBackup_GLF_color_4;
        x_GLF_color = x_2135;
      }
      if (false) {
        donor_replacementGLF_dead9alpha2 = -2.799999952;
        donor_replacementGLF_dead9alpha3 = 36.180000305;
        let x_2143 : f32 = x_525.injectionSwitch.y;
        donor_replacementGLF_dead9beta = x_2143;
        donor_replacementGLF_dead9matrix_a = mat4x4<f32>(vec4<f32>(12.128843307, 9.128843307, 15.228843689, 16.728843689), vec4<f32>(9209.485351562, 175.525848389, -504.490142822, 41.708843231), vec4<f32>(-6014.671386719, -8398.931640625, 626.737854004, -347.523162842), vec4<f32>(9.02884388, 6850.973144531, 552.13684082, -82.291152954));
        if (false) {
          let x_2170 : vec4<f32> = GLF_dead15gl_FragCoord;
          GLF_dead15icoord_1 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_2170.x, x_2170.y)));
          let x_2176 : i32 = GLF_dead15icoord_1.x;
          GLF_dead15A_1 = select(-1, 0, ((x_2176 & 1) != 0));
          let x_2182 : i32 = GLF_dead15icoord_1.x;
          GLF_dead15B_1 = select(-1, 0, ((x_2182 & 2) != 0));
          let x_2188 : i32 = GLF_dead15icoord_1.x;
          GLF_dead15C_1 = select(-1, 0, ((x_2188 & 4) != 0));
          let x_2194 : i32 = GLF_dead15icoord_1.x;
          GLF_dead15D_1 = select(-1, 0, ((x_2194 & 8) != 0));
          let x_2200 : i32 = GLF_dead15icoord_1.x;
          GLF_dead15E_1 = select(-1, 0, ((x_2200 & 16) != 0));
          let x_2206 : i32 = GLF_dead15icoord_1.y;
          GLF_dead15F_1 = select(-1, 0, ((x_2206 & 1) != 0));
          let x_2212 : i32 = GLF_dead15icoord_1.y;
          GLF_dead15G_1 = select(-1, 0, ((x_2212 & 2) != 0));
          let x_2218 : i32 = GLF_dead15icoord_1.y;
          GLF_dead15H_1 = select(-1, 0, ((x_2218 & 4) != 0));
          let x_2224 : i32 = GLF_dead15icoord_1.y;
          GLF_dead15I_1 = select(-1, 0, ((x_2224 & 8) != 0));
          let x_2230 : i32 = GLF_dead15icoord_1.y;
          GLF_dead15J_1 = select(-1, 0, ((x_2230 & 16) != 0));
          let x_2235 : i32 = GLF_dead15A_1;
          let x_2236 : i32 = GLF_dead15C_1;
          let x_2239 : i32 = GLF_dead15D_1;
          let x_2242 : i32 = GLF_dead15E_1;
          let x_2245 : i32 = GLF_dead15F_1;
          let x_2247 : i32 = GLF_dead15G_1;
          let x_2249 : i32 = GLF_dead15H_1;
          let x_2251 : i32 = GLF_dead15I_1;
          let x_2254 : i32 = GLF_dead15J_1;
          let x_2257 : i32 = GLF_dead15B_1;
          let x_2258 : i32 = GLF_dead15C_1;
          let x_2261 : i32 = GLF_dead15D_1;
          let x_2264 : i32 = GLF_dead15E_1;
          let x_2267 : i32 = GLF_dead15F_1;
          let x_2269 : i32 = GLF_dead15G_1;
          let x_2271 : i32 = GLF_dead15H_1;
          let x_2273 : i32 = GLF_dead15I_1;
          let x_2276 : i32 = GLF_dead15J_1;
          let x_2280 : i32 = GLF_dead15A_1;
          let x_2282 : i32 = GLF_dead15C_1;
          let x_2284 : i32 = GLF_dead15D_1;
          let x_2287 : i32 = GLF_dead15E_1;
          let x_2290 : i32 = GLF_dead15F_1;
          let x_2292 : i32 = GLF_dead15H_1;
          let x_2295 : i32 = GLF_dead15I_1;
          let x_2297 : i32 = GLF_dead15J_1;
          let x_2301 : i32 = GLF_dead15A_1;
          let x_2302 : i32 = GLF_dead15B_1;
          let x_2305 : i32 = GLF_dead15D_1;
          let x_2308 : i32 = GLF_dead15E_1;
          let x_2311 : i32 = GLF_dead15G_1;
          let x_2313 : i32 = GLF_dead15H_1;
          let x_2316 : i32 = GLF_dead15I_1;
          let x_2318 : i32 = GLF_dead15J_1;
          GLF_dead15res_1 = (((((((((((x_2235 | ~(x_2236)) | ~(x_2239)) | ~(x_2242)) | x_2245) | x_2247) | x_2249) | ~(x_2251)) | ~(x_2254)) & ((((((((x_2257 | ~(x_2258)) | ~(x_2261)) | ~(x_2264)) | x_2267) | x_2269) | x_2271) | ~(x_2273)) | ~(x_2276))) & (((((((~(x_2280) | x_2282) | ~(x_2284)) | ~(x_2287)) | x_2290) | ~(x_2292)) | x_2295) | ~(x_2297))) & (((((((x_2301 | ~(x_2302)) | ~(x_2305)) | ~(x_2308)) | x_2311) | ~(x_2313)) | x_2316) | ~(x_2318)));
          let x_2322 : i32 = GLF_dead15A_1;
          let x_2323 : i32 = GLF_dead15B_1;
          let x_2325 : i32 = GLF_dead15C_1;
          let x_2328 : i32 = GLF_dead15D_1;
          let x_2330 : i32 = GLF_dead15E_1;
          let x_2333 : i32 = GLF_dead15F_1;
          let x_2335 : i32 = GLF_dead15G_1;
          let x_2337 : i32 = GLF_dead15H_1;
          let x_2340 : i32 = GLF_dead15I_1;
          let x_2342 : i32 = GLF_dead15J_1;
          let x_2345 : i32 = GLF_dead15B_1;
          let x_2346 : i32 = GLF_dead15C_1;
          let x_2349 : i32 = GLF_dead15D_1;
          let x_2352 : i32 = GLF_dead15E_1;
          let x_2355 : i32 = GLF_dead15F_1;
          let x_2358 : i32 = GLF_dead15G_1;
          let x_2361 : i32 = GLF_dead15H_1;
          let x_2363 : i32 = GLF_dead15I_1;
          let x_2365 : i32 = GLF_dead15J_1;
          let x_2369 : i32 = GLF_dead15A_1;
          let x_2370 : i32 = GLF_dead15C_1;
          let x_2372 : i32 = GLF_dead15D_1;
          let x_2375 : i32 = GLF_dead15E_1;
          let x_2378 : i32 = GLF_dead15G_1;
          let x_2381 : i32 = GLF_dead15H_1;
          let x_2383 : i32 = GLF_dead15I_1;
          let x_2385 : i32 = GLF_dead15J_1;
          let x_2389 : i32 = GLF_dead15A_1;
          let x_2390 : i32 = GLF_dead15C_1;
          let x_2392 : i32 = GLF_dead15D_1;
          let x_2395 : i32 = GLF_dead15E_1;
          let x_2398 : i32 = GLF_dead15F_1;
          let x_2401 : i32 = GLF_dead15H_1;
          let x_2403 : i32 = GLF_dead15I_1;
          let x_2405 : i32 = GLF_dead15J_1;
          let x_2409 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2409 & ((((((((((((x_2322 | x_2323) | ~(x_2325)) | x_2328) | ~(x_2330)) | x_2333) | x_2335) | ~(x_2337)) | x_2340) | ~(x_2342)) & ((((((((x_2345 | ~(x_2346)) | ~(x_2349)) | ~(x_2352)) | ~(x_2355)) | ~(x_2358)) | x_2361) | x_2363) | ~(x_2365))) & (((((((x_2369 | x_2370) | ~(x_2372)) | ~(x_2375)) | ~(x_2378)) | x_2381) | x_2383) | ~(x_2385))) & (((((((x_2389 | x_2390) | ~(x_2392)) | ~(x_2395)) | ~(x_2398)) | x_2401) | x_2403) | ~(x_2405))));
          let x_2411 : i32 = GLF_dead15A_1;
          let x_2412 : i32 = GLF_dead15B_1;
          let x_2414 : i32 = GLF_dead15C_1;
          let x_2417 : i32 = GLF_dead15D_1;
          let x_2419 : i32 = GLF_dead15E_1;
          let x_2422 : i32 = GLF_dead15G_1;
          let x_2425 : i32 = GLF_dead15H_1;
          let x_2427 : i32 = GLF_dead15I_1;
          let x_2429 : i32 = GLF_dead15J_1;
          let x_2432 : i32 = GLF_dead15A_1;
          let x_2434 : i32 = GLF_dead15C_1;
          let x_2436 : i32 = GLF_dead15D_1;
          let x_2438 : i32 = GLF_dead15E_1;
          let x_2441 : i32 = GLF_dead15G_1;
          let x_2444 : i32 = GLF_dead15H_1;
          let x_2446 : i32 = GLF_dead15I_1;
          let x_2448 : i32 = GLF_dead15J_1;
          let x_2452 : i32 = GLF_dead15A_1;
          let x_2454 : i32 = GLF_dead15B_1;
          let x_2457 : i32 = GLF_dead15C_1;
          let x_2460 : i32 = GLF_dead15D_1;
          let x_2463 : i32 = GLF_dead15E_1;
          let x_2465 : i32 = GLF_dead15G_1;
          let x_2468 : i32 = GLF_dead15H_1;
          let x_2470 : i32 = GLF_dead15I_1;
          let x_2472 : i32 = GLF_dead15J_1;
          let x_2476 : i32 = GLF_dead15A_1;
          let x_2477 : i32 = GLF_dead15B_1;
          let x_2480 : i32 = GLF_dead15D_1;
          let x_2482 : i32 = GLF_dead15E_1;
          let x_2485 : i32 = GLF_dead15G_1;
          let x_2487 : i32 = GLF_dead15H_1;
          let x_2489 : i32 = GLF_dead15I_1;
          let x_2491 : i32 = GLF_dead15J_1;
          let x_2495 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2495 & (((((((((((x_2411 | x_2412) | ~(x_2414)) | x_2417) | ~(x_2419)) | ~(x_2422)) | x_2425) | x_2427) | ~(x_2429)) & (((((((~(x_2432) | x_2434) | x_2436) | ~(x_2438)) | ~(x_2441)) | x_2444) | x_2446) | ~(x_2448))) & ((((((((~(x_2452) | ~(x_2454)) | ~(x_2457)) | ~(x_2460)) | x_2463) | ~(x_2465)) | x_2468) | x_2470) | ~(x_2472))) & (((((((x_2476 | ~(x_2477)) | x_2480) | ~(x_2482)) | x_2485) | x_2487) | x_2489) | ~(x_2491))));
          let x_2497 : i32 = GLF_dead15A_1;
          let x_2499 : i32 = GLF_dead15B_1;
          let x_2501 : i32 = GLF_dead15C_1;
          let x_2504 : i32 = GLF_dead15D_1;
          let x_2506 : i32 = GLF_dead15E_1;
          let x_2509 : i32 = GLF_dead15G_1;
          let x_2511 : i32 = GLF_dead15H_1;
          let x_2513 : i32 = GLF_dead15I_1;
          let x_2515 : i32 = GLF_dead15J_1;
          let x_2518 : i32 = GLF_dead15A_1;
          let x_2519 : i32 = GLF_dead15B_1;
          let x_2522 : i32 = GLF_dead15D_1;
          let x_2525 : i32 = GLF_dead15E_1;
          let x_2527 : i32 = GLF_dead15G_1;
          let x_2529 : i32 = GLF_dead15H_1;
          let x_2531 : i32 = GLF_dead15I_1;
          let x_2533 : i32 = GLF_dead15J_1;
          let x_2537 : i32 = GLF_dead15A_1;
          let x_2538 : i32 = GLF_dead15C_1;
          let x_2541 : i32 = GLF_dead15D_1;
          let x_2544 : i32 = GLF_dead15E_1;
          let x_2546 : i32 = GLF_dead15F_1;
          let x_2548 : i32 = GLF_dead15G_1;
          let x_2550 : i32 = GLF_dead15H_1;
          let x_2552 : i32 = GLF_dead15I_1;
          let x_2554 : i32 = GLF_dead15J_1;
          let x_2558 : i32 = GLF_dead15A_1;
          let x_2560 : i32 = GLF_dead15C_1;
          let x_2562 : i32 = GLF_dead15D_1;
          let x_2565 : i32 = GLF_dead15E_1;
          let x_2567 : i32 = GLF_dead15F_1;
          let x_2569 : i32 = GLF_dead15G_1;
          let x_2571 : i32 = GLF_dead15H_1;
          let x_2573 : i32 = GLF_dead15I_1;
          let x_2575 : i32 = GLF_dead15J_1;
          let x_2579 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2579 & (((((((((((~(x_2497) | x_2499) | ~(x_2501)) | x_2504) | ~(x_2506)) | x_2509) | x_2511) | x_2513) | ~(x_2515)) & (((((((x_2518 | ~(x_2519)) | ~(x_2522)) | x_2525) | x_2527) | x_2529) | x_2531) | ~(x_2533))) & ((((((((x_2537 | ~(x_2538)) | ~(x_2541)) | x_2544) | x_2546) | x_2548) | x_2550) | x_2552) | ~(x_2554))) & ((((((((~(x_2558) | x_2560) | ~(x_2562)) | x_2565) | x_2567) | x_2569) | x_2571) | x_2573) | ~(x_2575))));
          let x_2581 : i32 = GLF_dead15A_1;
          let x_2583 : i32 = GLF_dead15B_1;
          let x_2586 : i32 = GLF_dead15C_1;
          let x_2588 : i32 = GLF_dead15D_1;
          let x_2591 : i32 = GLF_dead15E_1;
          let x_2594 : i32 = GLF_dead15F_1;
          let x_2597 : i32 = GLF_dead15G_1;
          let x_2600 : i32 = GLF_dead15H_1;
          let x_2603 : i32 = GLF_dead15I_1;
          let x_2606 : i32 = GLF_dead15J_1;
          let x_2608 : i32 = GLF_dead15A_1;
          let x_2609 : i32 = GLF_dead15B_1;
          let x_2612 : i32 = GLF_dead15C_1;
          let x_2614 : i32 = GLF_dead15D_1;
          let x_2616 : i32 = GLF_dead15E_1;
          let x_2619 : i32 = GLF_dead15F_1;
          let x_2622 : i32 = GLF_dead15G_1;
          let x_2625 : i32 = GLF_dead15H_1;
          let x_2628 : i32 = GLF_dead15I_1;
          let x_2631 : i32 = GLF_dead15J_1;
          let x_2634 : i32 = GLF_dead15A_1;
          let x_2636 : i32 = GLF_dead15B_1;
          let x_2638 : i32 = GLF_dead15C_1;
          let x_2640 : i32 = GLF_dead15D_1;
          let x_2642 : i32 = GLF_dead15E_1;
          let x_2645 : i32 = GLF_dead15G_1;
          let x_2648 : i32 = GLF_dead15H_1;
          let x_2651 : i32 = GLF_dead15I_1;
          let x_2654 : i32 = GLF_dead15J_1;
          let x_2657 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2657 & (((((((((((~(x_2581) | ~(x_2583)) | x_2586) | ~(x_2588)) | ~(x_2591)) | ~(x_2594)) | ~(x_2597)) | ~(x_2600)) | ~(x_2603)) | x_2606) & (((((((((x_2608 | ~(x_2609)) | x_2612) | x_2614) | ~(x_2616)) | ~(x_2619)) | ~(x_2622)) | ~(x_2625)) | ~(x_2628)) | x_2631)) & ((((((((~(x_2634) | x_2636) | x_2638) | x_2640) | ~(x_2642)) | ~(x_2645)) | ~(x_2648)) | ~(x_2651)) | x_2654)));
          let x_2659 : i32 = GLF_dead15C_1;
          let x_2661 : i32 = GLF_dead15D_1;
          let x_2664 : i32 = GLF_dead15E_1;
          let x_2666 : i32 = GLF_dead15F_1;
          let x_2669 : i32 = GLF_dead15G_1;
          let x_2672 : i32 = GLF_dead15H_1;
          let x_2675 : i32 = GLF_dead15I_1;
          let x_2678 : i32 = GLF_dead15J_1;
          let x_2680 : i32 = GLF_dead15A_1;
          let x_2682 : i32 = GLF_dead15C_1;
          let x_2685 : i32 = GLF_dead15D_1;
          let x_2688 : i32 = GLF_dead15E_1;
          let x_2690 : i32 = GLF_dead15G_1;
          let x_2693 : i32 = GLF_dead15H_1;
          let x_2696 : i32 = GLF_dead15I_1;
          let x_2699 : i32 = GLF_dead15J_1;
          let x_2702 : i32 = GLF_dead15B_1;
          let x_2703 : i32 = GLF_dead15D_1;
          let x_2706 : i32 = GLF_dead15E_1;
          let x_2708 : i32 = GLF_dead15F_1;
          let x_2711 : i32 = GLF_dead15H_1;
          let x_2714 : i32 = GLF_dead15I_1;
          let x_2717 : i32 = GLF_dead15J_1;
          let x_2720 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2720 & (((((((((~(x_2659) | ~(x_2661)) | x_2664) | ~(x_2666)) | ~(x_2669)) | ~(x_2672)) | ~(x_2675)) | x_2678) & (((((((~(x_2680) | ~(x_2682)) | ~(x_2685)) | x_2688) | ~(x_2690)) | ~(x_2693)) | ~(x_2696)) | x_2699)) & ((((((x_2702 | ~(x_2703)) | x_2706) | ~(x_2708)) | ~(x_2711)) | ~(x_2714)) | x_2717)));
          let x_2722 : i32 = GLF_dead15A_1;
          let x_2723 : i32 = GLF_dead15B_1;
          let x_2725 : i32 = GLF_dead15C_1;
          let x_2727 : i32 = GLF_dead15D_1;
          let x_2730 : i32 = GLF_dead15E_1;
          let x_2732 : i32 = GLF_dead15G_1;
          let x_2735 : i32 = GLF_dead15H_1;
          let x_2738 : i32 = GLF_dead15I_1;
          let x_2741 : i32 = GLF_dead15J_1;
          let x_2743 : i32 = GLF_dead15B_1;
          let x_2744 : i32 = GLF_dead15C_1;
          let x_2746 : i32 = GLF_dead15D_1;
          let x_2748 : i32 = GLF_dead15E_1;
          let x_2751 : i32 = GLF_dead15F_1;
          let x_2753 : i32 = GLF_dead15G_1;
          let x_2756 : i32 = GLF_dead15H_1;
          let x_2759 : i32 = GLF_dead15I_1;
          let x_2762 : i32 = GLF_dead15J_1;
          let x_2765 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2765 & (((((((((x_2722 | x_2723) | x_2725) | ~(x_2727)) | x_2730) | ~(x_2732)) | ~(x_2735)) | ~(x_2738)) | x_2741) & ((((((((x_2743 | x_2744) | x_2746) | ~(x_2748)) | x_2751) | ~(x_2753)) | ~(x_2756)) | ~(x_2759)) | x_2762)));
          let x_2767 : i32 = GLF_dead15A_1;
          let x_2768 : i32 = GLF_dead15C_1;
          let x_2771 : i32 = GLF_dead15D_1;
          let x_2773 : i32 = GLF_dead15E_1;
          let x_2775 : i32 = GLF_dead15F_1;
          let x_2777 : i32 = GLF_dead15G_1;
          let x_2780 : i32 = GLF_dead15H_1;
          let x_2783 : i32 = GLF_dead15I_1;
          let x_2786 : i32 = GLF_dead15J_1;
          let x_2788 : i32 = GLF_dead15B_1;
          let x_2789 : i32 = GLF_dead15C_1;
          let x_2792 : i32 = GLF_dead15D_1;
          let x_2794 : i32 = GLF_dead15E_1;
          let x_2796 : i32 = GLF_dead15F_1;
          let x_2798 : i32 = GLF_dead15G_1;
          let x_2801 : i32 = GLF_dead15H_1;
          let x_2804 : i32 = GLF_dead15J_1;
          let x_2807 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2807 & (((((((((x_2767 | ~(x_2768)) | x_2771) | x_2773) | x_2775) | ~(x_2777)) | ~(x_2780)) | ~(x_2783)) | x_2786) & (((((((x_2788 | ~(x_2789)) | x_2792) | x_2794) | x_2796) | ~(x_2798)) | ~(x_2801)) | x_2804)));
          let x_2809 : i32 = GLF_dead15A_1;
          let x_2811 : i32 = GLF_dead15B_1;
          let x_2814 : i32 = GLF_dead15C_1;
          let x_2816 : i32 = GLF_dead15D_1;
          let x_2818 : i32 = GLF_dead15E_1;
          let x_2820 : i32 = GLF_dead15F_1;
          let x_2822 : i32 = GLF_dead15G_1;
          let x_2825 : i32 = GLF_dead15H_1;
          let x_2828 : i32 = GLF_dead15I_1;
          let x_2831 : i32 = GLF_dead15J_1;
          let x_2833 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2833 & (((((((((~(x_2809) | ~(x_2811)) | x_2814) | x_2816) | x_2818) | x_2820) | ~(x_2822)) | ~(x_2825)) | ~(x_2828)) | x_2831));
          let x_2835 : i32 = GLF_dead15A_1;
          let x_2836 : i32 = GLF_dead15B_1;
          let x_2838 : i32 = GLF_dead15C_1;
          let x_2841 : i32 = GLF_dead15D_1;
          let x_2844 : i32 = GLF_dead15E_1;
          let x_2846 : i32 = GLF_dead15G_1;
          let x_2848 : i32 = GLF_dead15H_1;
          let x_2851 : i32 = GLF_dead15I_1;
          let x_2854 : i32 = GLF_dead15J_1;
          let x_2856 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2856 & ((((((((x_2835 | x_2836) | ~(x_2838)) | ~(x_2841)) | x_2844) | x_2846) | ~(x_2848)) | ~(x_2851)) | x_2854));
          let x_2858 : i32 = GLF_dead15B_1;
          let x_2860 : i32 = GLF_dead15D_1;
          let x_2862 : i32 = GLF_dead15E_1;
          let x_2864 : i32 = GLF_dead15F_1;
          let x_2867 : i32 = GLF_dead15G_1;
          let x_2869 : i32 = GLF_dead15H_1;
          let x_2872 : i32 = GLF_dead15I_1;
          let x_2875 : i32 = GLF_dead15J_1;
          let x_2877 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2877 & (((((((~(x_2858) | x_2860) | x_2862) | ~(x_2864)) | x_2867) | ~(x_2869)) | ~(x_2872)) | x_2875));
          let x_2879 : i32 = GLF_dead15B_1;
          let x_2881 : i32 = GLF_dead15C_1;
          let x_2883 : i32 = GLF_dead15D_1;
          let x_2886 : i32 = GLF_dead15E_1;
          let x_2888 : i32 = GLF_dead15F_1;
          let x_2890 : i32 = GLF_dead15G_1;
          let x_2892 : i32 = GLF_dead15H_1;
          let x_2895 : i32 = GLF_dead15I_1;
          let x_2898 : i32 = GLF_dead15J_1;
          let x_2900 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2900 & ((((((((~(x_2879) | x_2881) | ~(x_2883)) | x_2886) | x_2888) | x_2890) | ~(x_2892)) | ~(x_2895)) | x_2898));
          let x_2902 : i32 = GLF_dead15A_1;
          let x_2904 : i32 = GLF_dead15B_1;
          let x_2907 : i32 = GLF_dead15C_1;
          let x_2910 : i32 = GLF_dead15D_1;
          let x_2912 : i32 = GLF_dead15E_1;
          let x_2914 : i32 = GLF_dead15F_1;
          let x_2916 : i32 = GLF_dead15G_1;
          let x_2918 : i32 = GLF_dead15I_1;
          let x_2921 : i32 = GLF_dead15J_1;
          let x_2923 : i32 = GLF_dead15B_1;
          let x_2925 : i32 = GLF_dead15C_1;
          let x_2928 : i32 = GLF_dead15D_1;
          let x_2930 : i32 = GLF_dead15E_1;
          let x_2932 : i32 = GLF_dead15F_1;
          let x_2935 : i32 = GLF_dead15G_1;
          let x_2938 : i32 = GLF_dead15H_1;
          let x_2940 : i32 = GLF_dead15I_1;
          let x_2943 : i32 = GLF_dead15J_1;
          let x_2946 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_2946 & (((((((((~(x_2902) | ~(x_2904)) | ~(x_2907)) | x_2910) | x_2912) | x_2914) | x_2916) | ~(x_2918)) | x_2921) & ((((((((~(x_2923) | ~(x_2925)) | x_2928) | x_2930) | ~(x_2932)) | ~(x_2935)) | x_2938) | ~(x_2940)) | x_2943)));
          let x_2948 : i32 = GLF_dead15A_1;
          let x_2950 : i32 = GLF_dead15B_1;
          let x_2952 : i32 = GLF_dead15C_1;
          let x_2954 : i32 = GLF_dead15D_1;
          let x_2956 : i32 = GLF_dead15E_1;
          let x_2958 : i32 = GLF_dead15H_1;
          let x_2960 : i32 = GLF_dead15I_1;
          let x_2963 : i32 = GLF_dead15J_1;
          let x_2965 : i32 = GLF_dead15B_1;
          let x_2966 : i32 = GLF_dead15C_1;
          let x_2968 : i32 = GLF_dead15D_1;
          let x_2970 : i32 = GLF_dead15E_1;
          let x_2972 : i32 = GLF_dead15F_1;
          let x_2974 : i32 = GLF_dead15G_1;
          let x_2977 : i32 = GLF_dead15H_1;
          let x_2979 : i32 = GLF_dead15I_1;
          let x_2982 : i32 = GLF_dead15J_1;
          let x_2985 : i32 = GLF_dead15A_1;
          let x_2986 : i32 = GLF_dead15B_1;
          let x_2988 : i32 = GLF_dead15C_1;
          let x_2990 : i32 = GLF_dead15D_1;
          let x_2993 : i32 = GLF_dead15E_1;
          let x_2995 : i32 = GLF_dead15F_1;
          let x_2997 : i32 = GLF_dead15G_1;
          let x_2999 : i32 = GLF_dead15H_1;
          let x_3001 : i32 = GLF_dead15I_1;
          let x_3004 : i32 = GLF_dead15J_1;
          let x_3007 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3007 & (((((((((~(x_2948) | x_2950) | x_2952) | x_2954) | x_2956) | x_2958) | ~(x_2960)) | x_2963) & ((((((((x_2965 | x_2966) | x_2968) | x_2970) | x_2972) | ~(x_2974)) | x_2977) | ~(x_2979)) | x_2982)) & (((((((((x_2985 | x_2986) | x_2988) | ~(x_2990)) | x_2993) | x_2995) | x_2997) | x_2999) | ~(x_3001)) | x_3004)));
          let x_3009 : i32 = GLF_dead15A_1;
          let x_3010 : i32 = GLF_dead15B_1;
          let x_3013 : i32 = GLF_dead15C_1;
          let x_3015 : i32 = GLF_dead15D_1;
          let x_3017 : i32 = GLF_dead15E_1;
          let x_3019 : i32 = GLF_dead15F_1;
          let x_3021 : i32 = GLF_dead15G_1;
          let x_3023 : i32 = GLF_dead15H_1;
          let x_3025 : i32 = GLF_dead15I_1;
          let x_3028 : i32 = GLF_dead15J_1;
          let x_3030 : i32 = GLF_dead15B_1;
          let x_3032 : i32 = GLF_dead15D_1;
          let x_3034 : i32 = GLF_dead15E_1;
          let x_3036 : i32 = GLF_dead15F_1;
          let x_3039 : i32 = GLF_dead15G_1;
          let x_3042 : i32 = GLF_dead15H_1;
          let x_3045 : i32 = GLF_dead15I_1;
          let x_3047 : i32 = GLF_dead15J_1;
          let x_3050 : i32 = GLF_dead15A_1;
          let x_3052 : i32 = GLF_dead15B_1;
          let x_3055 : i32 = GLF_dead15C_1;
          let x_3057 : i32 = GLF_dead15E_1;
          let x_3060 : i32 = GLF_dead15G_1;
          let x_3063 : i32 = GLF_dead15H_1;
          let x_3066 : i32 = GLF_dead15I_1;
          let x_3068 : i32 = GLF_dead15J_1;
          let x_3072 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3072 & (((((((((((x_3009 | ~(x_3010)) | x_3013) | x_3015) | x_3017) | x_3019) | x_3021) | x_3023) | ~(x_3025)) | x_3028) & (((((((~(x_3030) | x_3032) | x_3034) | ~(x_3036)) | ~(x_3039)) | ~(x_3042)) | x_3045) | x_3047)) & (((((((~(x_3050) | ~(x_3052)) | x_3055) | ~(x_3057)) | ~(x_3060)) | ~(x_3063)) | x_3066) | ~(x_3068))));
          let x_3074 : i32 = GLF_dead15A_1;
          let x_3076 : i32 = GLF_dead15D_1;
          let x_3079 : i32 = GLF_dead15E_1;
          let x_3082 : i32 = GLF_dead15F_1;
          let x_3085 : i32 = GLF_dead15G_1;
          let x_3087 : i32 = GLF_dead15H_1;
          let x_3090 : i32 = GLF_dead15I_1;
          let x_3092 : i32 = GLF_dead15J_1;
          let x_3095 : i32 = GLF_dead15A_1;
          let x_3096 : i32 = GLF_dead15B_1;
          let x_3098 : i32 = GLF_dead15E_1;
          let x_3101 : i32 = GLF_dead15F_1;
          let x_3104 : i32 = GLF_dead15G_1;
          let x_3107 : i32 = GLF_dead15H_1;
          let x_3109 : i32 = GLF_dead15I_1;
          let x_3111 : i32 = GLF_dead15J_1;
          let x_3115 : i32 = GLF_dead15B_1;
          let x_3117 : i32 = GLF_dead15C_1;
          let x_3119 : i32 = GLF_dead15D_1;
          let x_3121 : i32 = GLF_dead15E_1;
          let x_3124 : i32 = GLF_dead15F_1;
          let x_3126 : i32 = GLF_dead15G_1;
          let x_3129 : i32 = GLF_dead15H_1;
          let x_3131 : i32 = GLF_dead15I_1;
          let x_3133 : i32 = GLF_dead15J_1;
          let x_3137 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3137 & (((((((((~(x_3074) | ~(x_3076)) | ~(x_3079)) | ~(x_3082)) | x_3085) | ~(x_3087)) | x_3090) | ~(x_3092)) & (((((((x_3095 | x_3096) | ~(x_3098)) | ~(x_3101)) | ~(x_3104)) | x_3107) | x_3109) | ~(x_3111))) & ((((((((~(x_3115) | x_3117) | x_3119) | ~(x_3121)) | x_3124) | ~(x_3126)) | x_3129) | x_3131) | ~(x_3133))));
          let x_3139 : i32 = GLF_dead15B_1;
          let x_3141 : i32 = GLF_dead15C_1;
          let x_3144 : i32 = GLF_dead15D_1;
          let x_3147 : i32 = GLF_dead15E_1;
          let x_3149 : i32 = GLF_dead15F_1;
          let x_3151 : i32 = GLF_dead15G_1;
          let x_3154 : i32 = GLF_dead15H_1;
          let x_3156 : i32 = GLF_dead15I_1;
          let x_3158 : i32 = GLF_dead15J_1;
          let x_3161 : i32 = GLF_dead15A_1;
          let x_3163 : i32 = GLF_dead15B_1;
          let x_3166 : i32 = GLF_dead15C_1;
          let x_3168 : i32 = GLF_dead15D_1;
          let x_3171 : i32 = GLF_dead15G_1;
          let x_3173 : i32 = GLF_dead15H_1;
          let x_3175 : i32 = GLF_dead15I_1;
          let x_3177 : i32 = GLF_dead15J_1;
          let x_3181 : i32 = GLF_dead15C_1;
          let x_3183 : i32 = GLF_dead15D_1;
          let x_3185 : i32 = GLF_dead15E_1;
          let x_3188 : i32 = GLF_dead15F_1;
          let x_3191 : i32 = GLF_dead15G_1;
          let x_3193 : i32 = GLF_dead15H_1;
          let x_3195 : i32 = GLF_dead15I_1;
          let x_3197 : i32 = GLF_dead15J_1;
          let x_3201 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3201 & ((((((((((~(x_3139) | ~(x_3141)) | ~(x_3144)) | x_3147) | x_3149) | ~(x_3151)) | x_3154) | x_3156) | ~(x_3158)) & (((((((~(x_3161) | ~(x_3163)) | x_3166) | ~(x_3168)) | x_3171) | x_3173) | x_3175) | ~(x_3177))) & (((((((~(x_3181) | x_3183) | ~(x_3185)) | ~(x_3188)) | x_3191) | x_3193) | x_3195) | ~(x_3197))));
          let x_3203 : i32 = GLF_dead15A_1;
          let x_3205 : i32 = GLF_dead15B_1;
          let x_3207 : i32 = GLF_dead15C_1;
          let x_3209 : i32 = GLF_dead15E_1;
          let x_3211 : i32 = GLF_dead15F_1;
          let x_3213 : i32 = GLF_dead15G_1;
          let x_3215 : i32 = GLF_dead15H_1;
          let x_3218 : i32 = GLF_dead15I_1;
          let x_3221 : i32 = GLF_dead15J_1;
          let x_3223 : i32 = GLF_dead15A_1;
          let x_3225 : i32 = GLF_dead15B_1;
          let x_3227 : i32 = GLF_dead15D_1;
          let x_3229 : i32 = GLF_dead15E_1;
          let x_3231 : i32 = GLF_dead15G_1;
          let x_3234 : i32 = GLF_dead15H_1;
          let x_3236 : i32 = GLF_dead15I_1;
          let x_3239 : i32 = GLF_dead15J_1;
          let x_3242 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3242 & (((((((((~(x_3203) | x_3205) | x_3207) | x_3209) | x_3211) | x_3213) | ~(x_3215)) | ~(x_3218)) | x_3221) & (((((((~(x_3223) | x_3225) | x_3227) | x_3229) | ~(x_3231)) | x_3234) | ~(x_3236)) | x_3239)));
          let x_3244 : i32 = GLF_dead15A_1;
          let x_3245 : i32 = GLF_dead15B_1;
          let x_3247 : i32 = GLF_dead15C_1;
          let x_3250 : i32 = GLF_dead15D_1;
          let x_3253 : i32 = GLF_dead15E_1;
          let x_3256 : i32 = GLF_dead15F_1;
          let x_3259 : i32 = GLF_dead15H_1;
          let x_3262 : i32 = GLF_dead15I_1;
          let x_3264 : i32 = GLF_dead15J_1;
          let x_3267 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3267 & ((((((((x_3244 | x_3245) | ~(x_3247)) | ~(x_3250)) | ~(x_3253)) | ~(x_3256)) | ~(x_3259)) | x_3262) | ~(x_3264)));
          let x_3269 : i32 = GLF_dead15A_1;
          let x_3271 : i32 = GLF_dead15C_1;
          let x_3274 : i32 = GLF_dead15E_1;
          let x_3277 : i32 = GLF_dead15F_1;
          let x_3280 : i32 = GLF_dead15G_1;
          let x_3282 : i32 = GLF_dead15H_1;
          let x_3285 : i32 = GLF_dead15I_1;
          let x_3287 : i32 = GLF_dead15J_1;
          let x_3290 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3290 & (((((((~(x_3269) | ~(x_3271)) | ~(x_3274)) | ~(x_3277)) | x_3280) | ~(x_3282)) | x_3285) | ~(x_3287)));
          let x_3292 : i32 = GLF_dead15A_1;
          let x_3293 : i32 = GLF_dead15B_1;
          let x_3296 : i32 = GLF_dead15C_1;
          let x_3299 : i32 = GLF_dead15D_1;
          let x_3301 : i32 = GLF_dead15E_1;
          let x_3304 : i32 = GLF_dead15F_1;
          let x_3307 : i32 = GLF_dead15H_1;
          let x_3310 : i32 = GLF_dead15I_1;
          let x_3312 : i32 = GLF_dead15J_1;
          let x_3315 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3315 & ((((((((x_3292 | ~(x_3293)) | ~(x_3296)) | x_3299) | ~(x_3301)) | ~(x_3304)) | ~(x_3307)) | x_3310) | ~(x_3312)));
          let x_3317 : i32 = GLF_dead15B_1;
          let x_3318 : i32 = GLF_dead15C_1;
          let x_3321 : i32 = GLF_dead15D_1;
          let x_3323 : i32 = GLF_dead15E_1;
          let x_3326 : i32 = GLF_dead15F_1;
          let x_3329 : i32 = GLF_dead15G_1;
          let x_3332 : i32 = GLF_dead15H_1;
          let x_3335 : i32 = GLF_dead15I_1;
          let x_3337 : i32 = GLF_dead15J_1;
          let x_3340 : i32 = GLF_dead15A_1;
          let x_3342 : i32 = GLF_dead15B_1;
          let x_3345 : i32 = GLF_dead15C_1;
          let x_3348 : i32 = GLF_dead15D_1;
          let x_3350 : i32 = GLF_dead15E_1;
          let x_3353 : i32 = GLF_dead15F_1;
          let x_3355 : i32 = GLF_dead15H_1;
          let x_3358 : i32 = GLF_dead15I_1;
          let x_3360 : i32 = GLF_dead15J_1;
          let x_3364 : i32 = GLF_dead15B_1;
          let x_3366 : i32 = GLF_dead15C_1;
          let x_3369 : i32 = GLF_dead15D_1;
          let x_3371 : i32 = GLF_dead15E_1;
          let x_3374 : i32 = GLF_dead15F_1;
          let x_3376 : i32 = GLF_dead15G_1;
          let x_3379 : i32 = GLF_dead15H_1;
          let x_3382 : i32 = GLF_dead15I_1;
          let x_3384 : i32 = GLF_dead15J_1;
          let x_3388 : i32 = GLF_dead15res_1;
          GLF_dead15res_1 = (x_3388 & ((((((((((x_3317 | ~(x_3318)) | x_3321) | ~(x_3323)) | ~(x_3326)) | ~(x_3329)) | ~(x_3332)) | x_3335) | ~(x_3337)) & ((((((((~(x_3340) | ~(x_3342)) | ~(x_3345)) | x_3348) | ~(x_3350)) | x_3353) | ~(x_3355)) | x_3358) | ~(x_3360))) & ((((((((~(x_3364) | ~(x_3366)) | x_3369) | ~(x_3371)) | x_3374) | ~(x_3376)) | ~(x_3379)) | x_3382) | ~(x_3384))));
          let x_3390 : i32 = GLF_dead15res_1;
          let x_3392 : f32 = select(1.0, 0.0, (x_3390 == 0));
          let x_3393 : vec3<f32> = vec3<f32>(x_3392, x_3392, x_3392);
          GLF_dead15_GLF_color = vec4<f32>(x_3393.x, x_3393.y, x_3393.z, 1.0);
        }
        let x_3399 : i32 = GLF_dead9MATRIX_N;
        GLF_dead9a = (x_3399 - 1);
        loop {
          let x_3406 : i32 = GLF_dead9a;
          let x_3407 : i32 = count;
          if ((x_3406 >= x_3407)) {
          } else {
            break;
          }
          let x_3409 : i32 = GLF_dead9a;
          let x_3413 : f32 = GLF_dead5color[clamp(x_3409, 0, 3)];
          let x_3414 : i32 = GLF_dead9a;
          let x_3416 : i32 = count;
          let x_3419 : f32 = donor_replacementGLF_dead9matrix_a[clamp(x_3414, 0, 3)][clamp(x_3416, 0, 3)];
          let x_3421 : f32 = donor_replacementGLF_dead9alpha3;
          donor_replacementGLF_dead9alpha3 = (x_3421 + (x_3413 * x_3419));

          continuing {
            let x_3423 : i32 = GLF_dead9a;
            GLF_dead9a = (x_3423 - 1);
          }
        }
        let x_3425 : f32 = donor_replacementGLF_dead9alpha2;
        let x_3426 : f32 = donor_replacementGLF_dead9alpha3;
        donor_replacementGLF_dead9beta = (x_3425 * x_3426);
        let x_3429 : i32 = GLF_dead9MATRIX_N;
        GLF_dead9a_1 = (x_3429 - 1);
        loop {
          let x_3436 : i32 = GLF_dead9a_1;
          let x_3437 : i32 = count;
          if ((x_3436 >= x_3437)) {
          } else {
            break;
          }
          let x_3439 : i32 = GLF_dead9a_1;
          let x_3441 : i32 = count;
          let x_3443 : i32 = GLF_dead9a_1;
          let x_3445 : i32 = count;
          let x_3448 : f32 = donor_replacementGLF_dead9matrix_a[clamp(x_3443, 0, 3)][clamp(x_3445, 0, 3)];
          let x_3449 : f32 = donor_replacementGLF_dead9beta;
          let x_3450 : i32 = GLF_dead9a_1;
          let x_3453 : f32 = GLF_dead5color[clamp(x_3450, 0, 3)];
          donor_replacementGLF_dead9matrix_a[clamp(x_3439, 0, 3)][clamp(x_3441, 0, 3)] = (x_3448 - (x_3449 * x_3453));

          continuing {
            let x_3457 : i32 = GLF_dead9a_1;
            GLF_dead9a_1 = (x_3457 - 1);
          }
        }
        donor_replacementGLF_dead9alpha3 = 0.0;
        donor_replacementGLF_dead9beta = 0.0;
      }
      let x_3460 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_5 = x_3460;
      x_GLF_color = vec4<f32>(-417.033996582, -417.033996582, -417.033996582, 340.79598999);
      if (true) {
        let x_3467 : f32 = x_525.injectionSwitch.x;
        let x_3469 : f32 = x_525.injectionSwitch.y;
        if ((x_3467 > x_3469)) {
          let x_3475 : f32 = x_655.GLF_dead8one;
          let x_3477 : f32 = GLF_dead8gl_PointCoord.x;
          let x_3479 : f32 = x_655.GLF_dead8one;
          let x_3485 : vec2<f32> = x_3482.GLF_dead8resolution;
          let x_3489 : f32 = dot(x_3485, vec2<f32>(-3.900000095, -7.300000191));
          let x_3491 : f32 = x_655.GLF_dead8one;
          let x_3495 : f32 = x_655.GLF_dead8one;
          let x_3500 : f32 = x_655.GLF_dead8one;
          let x_3502 : f32 = x_655.GLF_dead8one;
          let x_3505 : f32 = x_655.GLF_dead8one;
          let x_3509 : f32 = x_655.GLF_dead8one;
          let x_3513 : f32 = x_655.GLF_dead8one;
          let x_3515 : f32 = x_655.GLF_dead8one;
          let x_3520 : f32 = x_655.GLF_dead8one;
          let x_3522 : f32 = GLF_dead8gl_PointCoord.x;
          let x_3524 : f32 = x_655.GLF_dead8one;
          let x_3526 : vec2<f32> = x_3482.GLF_dead8resolution;
          let x_3527 : f32 = dot(x_3526, vec2<f32>(-3.900000095, -7.300000191));
          let x_3529 : f32 = x_655.GLF_dead8one;
          let x_3532 : f32 = x_655.GLF_dead8one;
          let x_3535 : f32 = x_655.GLF_dead8one;
          let x_3537 : f32 = x_655.GLF_dead8one;
          let x_3539 : f32 = x_655.GLF_dead8one;
          let x_3542 : f32 = x_655.GLF_dead8one;
          let x_3544 : f32 = x_655.GLF_dead8one;
          let x_3546 : f32 = x_655.GLF_dead8one;
          let x_3549 : f32 = x_655.GLF_dead8one;
          let x_3552 : vec2<f32> = x_3482.GLF_dead8resolution;
          let x_3553 : f32 = dot(x_3552, vec2<f32>(-3.900000095, -7.300000191));
          let x_3555 : f32 = x_655.GLF_dead8one;
          let x_3558 : f32 = x_655.GLF_dead8one;
          let x_3560 : f32 = x_655.GLF_dead8one;
          let x_3562 : f32 = GLF_dead8gl_PointCoord.x;
          let x_3564 : f32 = x_655.GLF_dead8one;
          let x_3566 : f32 = x_655.GLF_dead8one;
          let x_3568 : f32 = x_655.GLF_dead8one;
          donor_replacementGLF_dead13A_1 = array<f32, 50u>(x_3475, x_3477, x_3479, (x_3489 - (2.0 * (x_3491 * (x_3491 * x_3489)))), -57.63999939, dpdx(x_3495), 24.459999084, 263.592987061, x_3500, x_3502, 5947.008789062, x_3505, -271.928985596, 0x1p+128, 786.697998047, atan(x_3509), clamp(-4.199999809, x_3513, x_3515), 69.25, -1.100000024, 5947.008789062, -57.63999939, x_3520, -1.100000024, x_3522, x_3524, (x_3527 - (2.0 * (x_3529 * (x_3529 * x_3527)))), 69.25, 263.592987061, 0x1p+128, 24.459999084, dpdx(x_3532), x_3535, clamp(-4.199999809, x_3537, x_3539), x_3542, x_3544, -271.928985596, atan(x_3546), 786.697998047, -271.928985596, dpdx(x_3549), (x_3553 - (2.0 * (x_3555 * (x_3555 * x_3553)))), x_3558, x_3560, 0x1p+128, x_3562, x_3564, clamp(-4.199999809, x_3566, x_3568), 786.697998047, -1.100000024, 263.592987061);
          let x_3572 : f32 = GLF_dead13gl_FragCoord.x;
          if ((i32(x_3572) < 40)) {
            let x_3579 : f32 = donor_replacementGLF_dead13A_1[5];
            let x_3581 : f32 = x_728.GLF_dead13resolution.x;
            let x_3584 : f32 = donor_replacementGLF_dead13A_1[9];
            let x_3586 : f32 = x_728.GLF_dead13resolution.y;
            GLF_dead13_GLF_color = vec4<f32>((x_3579 / x_3581), (x_3584 / x_3586), 1.0, 1.0);
          } else {
            let x_3591 : f32 = GLF_dead13gl_FragCoord.x;
            if ((i32(x_3591) < 60)) {
              let x_3598 : f32 = donor_replacementGLF_dead13A_1[10];
              let x_3600 : f32 = x_728.GLF_dead13resolution.x;
              let x_3604 : f32 = donor_replacementGLF_dead13A_1[14];
              let x_3606 : f32 = x_728.GLF_dead13resolution.y;
              GLF_dead13_GLF_color = vec4<f32>((x_3598 / x_3600), (x_3604 / x_3606), 1.0, 1.0);
            } else {
              let x_3611 : f32 = GLF_dead13gl_FragCoord.x;
              if ((i32(x_3611) < 80)) {
                let x_3619 : f32 = donor_replacementGLF_dead13A_1[15];
                let x_3621 : f32 = x_728.GLF_dead13resolution.x;
                let x_3625 : f32 = donor_replacementGLF_dead13A_1[19];
                let x_3627 : f32 = x_728.GLF_dead13resolution.y;
                GLF_dead13_GLF_color = vec4<f32>((x_3619 / x_3621), (x_3625 / x_3627), 1.0, 1.0);
              } else {
                let x_3632 : f32 = GLF_dead13gl_FragCoord.x;
                if ((i32(x_3632) < 100)) {
                  let x_3640 : f32 = donor_replacementGLF_dead13A_1[20];
                  let x_3642 : f32 = x_728.GLF_dead13resolution.x;
                  let x_3646 : f32 = donor_replacementGLF_dead13A_1[24];
                  let x_3648 : f32 = x_728.GLF_dead13resolution.y;
                  GLF_dead13_GLF_color = vec4<f32>((x_3640 / x_3642), (x_3646 / x_3648), 1.0, 1.0);
                } else {
                  let x_3653 : f32 = GLF_dead13gl_FragCoord.x;
                  if ((i32(x_3653) < 120)) {
                    let x_3661 : f32 = donor_replacementGLF_dead13A_1[25];
                    let x_3663 : f32 = x_728.GLF_dead13resolution.x;
                    let x_3667 : f32 = donor_replacementGLF_dead13A_1[29];
                    let x_3669 : f32 = x_728.GLF_dead13resolution.y;
                    GLF_dead13_GLF_color = vec4<f32>((x_3661 / x_3663), (x_3667 / x_3669), 1.0, 1.0);
                  } else {
                    let x_3674 : f32 = GLF_dead13gl_FragCoord.x;
                    if ((i32(x_3674) < 140)) {
                      let x_3682 : f32 = donor_replacementGLF_dead13A_1[30];
                      let x_3684 : f32 = x_728.GLF_dead13resolution.x;
                      let x_3688 : f32 = donor_replacementGLF_dead13A_1[34];
                      let x_3690 : f32 = x_728.GLF_dead13resolution.y;
                      GLF_dead13_GLF_color = vec4<f32>((x_3682 / x_3684), (x_3688 / x_3690), 1.0, 1.0);
                    } else {
                      let x_3695 : f32 = GLF_dead13gl_FragCoord.x;
                      if ((i32(x_3695) < 160)) {
                        let x_3703 : f32 = donor_replacementGLF_dead13A_1[35];
                        let x_3705 : f32 = x_728.GLF_dead13resolution.x;
                        let x_3709 : f32 = donor_replacementGLF_dead13A_1[39];
                        let x_3711 : f32 = x_728.GLF_dead13resolution.y;
                        GLF_dead13_GLF_color = vec4<f32>((x_3703 / x_3705), (x_3709 / x_3711), 1.0, 1.0);
                      } else {
                        let x_3716 : f32 = GLF_dead13gl_FragCoord.x;
                        if ((i32(x_3716) < 180)) {
                          let x_3722 : f32 = donor_replacementGLF_dead13A_1[40];
                          let x_3724 : f32 = x_728.GLF_dead13resolution.x;
                          let x_3727 : f32 = donor_replacementGLF_dead13A_1[44];
                          let x_3729 : f32 = x_728.GLF_dead13resolution.y;
                          GLF_dead13_GLF_color = vec4<f32>((x_3722 / x_3724), (x_3727 / x_3729), 1.0, 1.0);
                        } else {
                          let x_3734 : f32 = GLF_dead13gl_FragCoord.x;
                          if ((i32(x_3734) < 180)) {
                            let x_3740 : f32 = donor_replacementGLF_dead13A_1[45];
                            let x_3742 : f32 = x_728.GLF_dead13resolution.x;
                            let x_3745 : f32 = donor_replacementGLF_dead13A_1[49];
                            let x_3747 : f32 = x_728.GLF_dead13resolution.y;
                            GLF_dead13_GLF_color = vec4<f32>((x_3740 / x_3742), (x_3745 / x_3747), 1.0, 1.0);
                          } else {
                            discard;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        let x_3752 : vec4<f32> = x_GLF_outVarBackup_GLF_color_5;
        x_GLF_color = x_3752;
        if (false) {
          GLF_dead13A = array<f32, 50u>(2243.764648438, (0.800000012 - (46.38999939 * floor((0.800000012 / 46.38999939)))), 9.600000381, 77.279998779, 0.200000003, 2779.033691406, 11.609999657, 7854.560058594, 0x1.8p+128, -6609.309082031, 5638.110839844, -5357.526367188, -7712.654296875, 85.75, 0.0, 3.700000048, -28.260000229, -4.0, 80.279998779, 3.700000048, 2243.764648438, 2779.033691406, 0x1.8p+128, 5638.110839844, -7712.654296875, -6609.309082031, (0.800000012 - (46.38999939 * floor((0.800000012 / 46.38999939)))), 0.0, 0.200000003, -28.260000229, 9.600000381, 77.279998779, -5357.526367188, 11.609999657, 80.279998779, 85.75, -4.0, 7854.560058594, 77.279998779, 2243.764648438, -28.260000229, (0.800000012 - (46.38999939 * floor((0.800000012 / 46.38999939)))), 9.600000381, -4.0, 3.700000048, 0x1.8p+128, 0.200000003, -5357.526367188, 5638.110839844, 2779.033691406);
          GLF_dead13i = 0;
          loop {
            let x_3783 : i32 = GLF_dead13i;
            if ((x_3783 < 200)) {
            } else {
              break;
            }
            let x_3786 : i32 = GLF_dead13i;
            let x_3788 : f32 = x_728.GLF_dead13resolution.x;
            if ((x_3786 >= i32(x_3788))) {
              break;
            }
            let x_3794 : i32 = GLF_dead13i;
            let x_3797 : i32 = GLF_dead13i;
            if (((4 * (x_3794 / 4)) == x_3797)) {
              let x_3801 : i32 = GLF_dead13i;
              let x_3804 : i32 = GLF_dead13i;
              GLF_dead13A[clamp((x_3801 / 4), 0, 49)] = f32(x_3804);
            }

            continuing {
              let x_3807 : i32 = GLF_dead13i;
              GLF_dead13i = (x_3807 + 1);
            }
          }
          GLF_dead13i_1 = 0;
          loop {
            let x_3815 : i32 = GLF_dead13i_1;
            if ((x_3815 < 50)) {
            } else {
              break;
            }
            let x_3818 : i32 = GLF_dead13i_1;
            let x_3820 : f32 = GLF_dead13gl_FragCoord.x;
            if ((x_3818 < i32(x_3820))) {
              break;
            }
            let x_3826 : i32 = GLF_dead13i_1;
            if ((x_3826 > 0)) {
              let x_3830 : i32 = GLF_dead13i_1;
              let x_3831 : i32 = clamp(x_3830, 0, 49);
              let x_3832 : i32 = GLF_dead13i_1;
              let x_3836 : f32 = GLF_dead13A[clamp((x_3832 - 1), 0, 49)];
              let x_3838 : f32 = GLF_dead13A[x_3831];
              GLF_dead13A[x_3831] = (x_3838 + x_3836);
            }

            continuing {
              let x_3841 : i32 = GLF_dead13i_1;
              GLF_dead13i_1 = (x_3841 + 1);
            }
          }
          let x_3844 : f32 = GLF_dead13gl_FragCoord.x;
          if ((i32(x_3844) < 20)) {
            let x_3850 : f32 = GLF_dead13A[0];
            let x_3852 : f32 = x_728.GLF_dead13resolution.x;
            let x_3855 : f32 = GLF_dead13A[4];
            let x_3857 : f32 = x_728.GLF_dead13resolution.y;
            GLF_dead13_GLF_color = vec4<f32>((x_3850 / x_3852), (x_3855 / x_3857), 1.0, 1.0);
          } else {
            let x_3862 : f32 = GLF_dead13gl_FragCoord.x;
            if ((i32(x_3862) < 40)) {
              let x_3868 : f32 = GLF_dead13A[5];
              let x_3870 : f32 = x_728.GLF_dead13resolution.x;
              let x_3873 : f32 = GLF_dead13A[9];
              let x_3875 : f32 = x_728.GLF_dead13resolution.y;
              GLF_dead13_GLF_color = vec4<f32>((x_3868 / x_3870), (x_3873 / x_3875), 1.0, 1.0);
            } else {
              let x_3880 : f32 = GLF_dead13gl_FragCoord.x;
              if ((i32(x_3880) < 60)) {
                let x_3886 : f32 = GLF_dead13A[10];
                let x_3888 : f32 = x_728.GLF_dead13resolution.x;
                let x_3891 : f32 = GLF_dead13A[14];
                let x_3893 : f32 = x_728.GLF_dead13resolution.y;
                GLF_dead13_GLF_color = vec4<f32>((x_3886 / x_3888), (x_3891 / x_3893), 1.0, 1.0);
              } else {
                let x_3898 : f32 = GLF_dead13gl_FragCoord.x;
                if ((i32(x_3898) < 80)) {
                  let x_3904 : f32 = GLF_dead13A[15];
                  let x_3906 : f32 = x_728.GLF_dead13resolution.x;
                  let x_3909 : f32 = GLF_dead13A[19];
                  let x_3911 : f32 = x_728.GLF_dead13resolution.y;
                  GLF_dead13_GLF_color = vec4<f32>((x_3904 / x_3906), (x_3909 / x_3911), 1.0, 1.0);
                } else {
                  let x_3916 : f32 = GLF_dead13gl_FragCoord.x;
                  if ((i32(x_3916) < 100)) {
                    let x_3922 : f32 = GLF_dead13A[20];
                    let x_3924 : f32 = x_728.GLF_dead13resolution.x;
                    let x_3927 : f32 = GLF_dead13A[24];
                    let x_3929 : f32 = x_728.GLF_dead13resolution.y;
                    GLF_dead13_GLF_color = vec4<f32>((x_3922 / x_3924), (x_3927 / x_3929), 1.0, 1.0);
                  } else {
                    let x_3934 : f32 = GLF_dead13gl_FragCoord.x;
                    if ((i32(x_3934) < 120)) {
                      let x_3940 : f32 = GLF_dead13A[25];
                      let x_3942 : f32 = x_728.GLF_dead13resolution.x;
                      let x_3945 : f32 = GLF_dead13A[29];
                      let x_3947 : f32 = x_728.GLF_dead13resolution.y;
                      GLF_dead13_GLF_color = vec4<f32>((x_3940 / x_3942), (x_3945 / x_3947), 1.0, 1.0);
                    } else {
                      let x_3952 : f32 = GLF_dead13gl_FragCoord.x;
                      if ((i32(x_3952) < 140)) {
                        let x_3958 : f32 = GLF_dead13A[30];
                        let x_3960 : f32 = x_728.GLF_dead13resolution.x;
                        let x_3963 : f32 = GLF_dead13A[34];
                        let x_3965 : f32 = x_728.GLF_dead13resolution.y;
                        GLF_dead13_GLF_color = vec4<f32>((x_3958 / x_3960), (x_3963 / x_3965), 1.0, 1.0);
                      } else {
                        let x_3970 : f32 = GLF_dead13gl_FragCoord.x;
                        if ((i32(x_3970) < 160)) {
                          let x_3976 : f32 = GLF_dead13A[35];
                          let x_3978 : f32 = x_728.GLF_dead13resolution.x;
                          let x_3981 : f32 = GLF_dead13A[39];
                          let x_3983 : f32 = x_728.GLF_dead13resolution.y;
                          GLF_dead13_GLF_color = vec4<f32>((x_3976 / x_3978), (x_3981 / x_3983), 1.0, 1.0);
                        } else {
                          let x_3988 : f32 = GLF_dead13gl_FragCoord.x;
                          if ((i32(x_3988) < 180)) {
                            let x_3994 : f32 = GLF_dead13A[40];
                            let x_3996 : f32 = x_728.GLF_dead13resolution.x;
                            let x_3999 : f32 = GLF_dead13A[44];
                            let x_4001 : f32 = x_728.GLF_dead13resolution.y;
                            GLF_dead13_GLF_color = vec4<f32>((x_3994 / x_3996), (x_3999 / x_4001), 1.0, 1.0);
                          } else {
                            let x_4006 : f32 = GLF_dead13gl_FragCoord.x;
                            if ((i32(x_4006) < 180)) {
                              let x_4012 : f32 = GLF_dead13A[45];
                              let x_4014 : f32 = x_728.GLF_dead13resolution.x;
                              let x_4017 : f32 = GLF_dead13A[49];
                              let x_4019 : f32 = x_728.GLF_dead13resolution.y;
                              GLF_dead13_GLF_color = vec4<f32>((x_4012 / x_4014), (x_4017 / x_4019), 1.0, 1.0);
                            } else {
                              discard;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      let x_4025 : f32 = x_525.injectionSwitch.x;
      let x_4027 : f32 = x_525.injectionSwitch.y;
      if ((x_4025 > x_4027)) {
        let x_4033 : vec2<f32> = x_525.injectionSwitch;
        donor_replacementGLF_dead10pos = tan(x_4033);
        let x_4036 : f32 = x_525.injectionSwitch.x;
        let x_4038 : f32 = x_525.injectionSwitch.y;
        if ((x_4036 > x_4038)) {
          let x_4044 : f32 = x_655.GLF_dead8one;
          donor_replacementGLF_dead14result = log(x_4044);
          let x_4047 : f32 = donor_replacementGLF_dead14result;
          donor_replacementGLF_dead14result = (x_4047 + 100.0);
        }
        let x_4067 : i32 = *(v);
        let x_4071 : vec2<f32> = donor_replacementGLF_dead10pos;
        param = x_4071;
        indexable = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
        let x_4076 : vec4<f32> = indexable[clamp(x_4067, 0, 7)];
        param_1 = x_4076;
        let x_4077 : bool = GLF_dead10collision_vf2_vf4_(&(param), &(param_1));
        if (x_4077) {
          if (false) {
            let x_4085 : f32 = GLF_dead8gl_PointCoord.x;
            let x_4090 : f32 = x_655.GLF_dead8one;
            let x_4092 : f32 = x_655.GLF_dead8one;
            let x_4094 : f32 = x_655.GLF_dead8one;
            let x_4099 : f32 = x_655.GLF_dead8one;
            let x_4101 : f32 = x_655.GLF_dead8one;
            let x_4109 : vec2<f32> = x_3482.GLF_dead8resolution;
            let x_4115 : f32 = x_655.GLF_dead8one;
            let x_4117 : vec2<f32> = x_3482.GLF_dead8resolution;
            let x_4120 : f32 = x_655.GLF_dead8one;
            let x_4122 : f32 = GLF_dead8gl_PointCoord.x;
            let x_4124 : f32 = x_655.GLF_dead8one;
            let x_4126 : f32 = x_655.GLF_dead8one;
            let x_4128 : f32 = x_655.GLF_dead8one;
            let x_4130 : f32 = x_655.GLF_dead8one;
            let x_4132 : f32 = x_655.GLF_dead8one;
            let x_4134 : f32 = x_655.GLF_dead8one;
            donor_replacementGLF_dead13A_2 = array<f32, 50u>(-1464.599365234, x_4085, 929.914978027, -102.698997498, -9.800000191, 0.0, 3.900000095, x_4090, x_4092, x_4094, 3221.095703125, 3.099999905, 335.32800293, x_4099, 8.0, x_4101, -3897.126708984, -3.900000095, 0x1.8p+128, distance(x_4109, vec2<f32>(423.988769531, -380900.90625)), x_4115, 3.900000095, 3.099999905, -3.900000095, 929.914978027, 335.32800293, distance(x_4117, vec2<f32>(423.988769531, -380900.90625)), 0x1.8p+128, -102.698997498, x_4120, x_4122, x_4124, x_4126, -3897.126708984, -9.800000191, -1464.599365234, 0.0, x_4128, 8.0, 3221.095703125, x_4130, -102.698997498, x_4132, 3221.095703125, 8.0, x_4134, -3.900000095, 3.099999905, 0.0, 335.32800293);
            GLF_dead13i_2 = 0;
            loop {
              let x_4142 : i32 = GLF_dead13i_2;
              if ((x_4142 < 50)) {
              } else {
                break;
              }
              let x_4144 : i32 = GLF_dead13i_2;
              let x_4146 : f32 = GLF_dead13gl_FragCoord.x;
              if ((x_4144 < i32(x_4146))) {
                break;
              }
              let x_4152 : i32 = GLF_dead13i_2;
              if ((x_4152 > 0)) {
                let x_4156 : i32 = GLF_dead13i_2;
                let x_4157 : i32 = clamp(x_4156, 0, 49);
                let x_4158 : i32 = GLF_dead13i_2;
                let x_4162 : f32 = donor_replacementGLF_dead13A_2[clamp((x_4158 - 1), 0, 49)];
                let x_4164 : f32 = donor_replacementGLF_dead13A_2[x_4157];
                donor_replacementGLF_dead13A_2[x_4157] = (x_4164 + x_4162);
              }

              continuing {
                let x_4167 : i32 = GLF_dead13i_2;
                GLF_dead13i_2 = (x_4167 + 1);
              }
            }
          }
          let x_4187 : i32 = *(v);
          indexable_1 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
          let x_4191 : f32 = indexable_1[clamp(x_4187, 0, 7)].x;
          let x_4193 : i32 = *(v);
          indexable_2 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
          let x_4197 : f32 = indexable_2[clamp(x_4193, 0, 7)].y;
          let x_4200 : i32 = *(v);
          indexable_3 = array<vec4<f32>, 16u>(vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(0.5, 0.0, 0.0, 1.0), vec4<f32>(0.0, 0.5, 0.0, 1.0), vec4<f32>(0.5, 0.5, 0.0, 1.0), vec4<f32>(0.0, 0.0, 0.5, 1.0), vec4<f32>(0.5, 0.0, 0.5, 1.0), vec4<f32>(0.0, 0.5, 0.5, 1.0), vec4<f32>(0.5, 0.5, 0.5, 1.0), vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(1.0, 0.0, 0.0, 1.0), vec4<f32>(0.0, 1.0, 0.0, 1.0), vec4<f32>(1.0, 1.0, 0.0, 1.0), vec4<f32>(0.0, 0.0, 1.0, 1.0), vec4<f32>(1.0, 0.0, 1.0, 1.0), vec4<f32>(0.0, 1.0, 1.0, 1.0), vec4<f32>(1.0, 1.0, 1.0, 1.0));
          let x_4210 : vec4<f32> = indexable_3[clamp(((((i32(x_4191) * i32(x_4197)) + (x_4200 * 9)) + 11) % 16), 0, 15)];
          GLF_dead5color = x_4210;
        }
      }
      donor_replacementGLF_dead0odd_number = 8913.747070312;
      if (false) {
        let x_4216 : vec4<f32> = GLF_dead15gl_FragCoord;
        GLF_dead15icoord_2 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_4216.x, x_4216.y)));
        let x_4222 : i32 = GLF_dead15icoord_2.x;
        GLF_dead15A_2 = select(-1, 0, ((x_4222 & 1) != 0));
        let x_4228 : i32 = GLF_dead15icoord_2.x;
        GLF_dead15B_2 = select(-1, 0, ((x_4228 & 2) != 0));
        let x_4234 : i32 = GLF_dead15icoord_2.x;
        GLF_dead15C_2 = select(-1, 0, ((x_4234 & 4) != 0));
        let x_4240 : i32 = GLF_dead15icoord_2.x;
        GLF_dead15D_2 = select(-1, 0, ((x_4240 & 8) != 0));
        let x_4246 : i32 = GLF_dead15icoord_2.x;
        GLF_dead15E_2 = select(-1, 0, ((x_4246 & 16) != 0));
        let x_4252 : i32 = GLF_dead15icoord_2.y;
        GLF_dead15F_2 = select(-1, 0, ((x_4252 & 1) != 0));
        let x_4258 : i32 = GLF_dead15icoord_2.y;
        GLF_dead15G_2 = select(-1, 0, ((x_4258 & 2) != 0));
        let x_4264 : i32 = GLF_dead15icoord_2.y;
        GLF_dead15H_2 = select(-1, 0, ((x_4264 & 4) != 0));
        let x_4270 : i32 = GLF_dead15icoord_2.y;
        GLF_dead15I_2 = select(-1, 0, ((x_4270 & 8) != 0));
        let x_4276 : i32 = GLF_dead15icoord_2.y;
        GLF_dead15J_2 = select(-1, 0, ((x_4276 & 16) != 0));
        let x_4281 : i32 = GLF_dead15A_2;
        let x_4282 : i32 = GLF_dead15C_2;
        let x_4285 : i32 = GLF_dead15D_2;
        let x_4288 : i32 = GLF_dead15E_2;
        let x_4291 : i32 = GLF_dead15F_2;
        let x_4293 : i32 = GLF_dead15G_2;
        let x_4295 : i32 = GLF_dead15H_2;
        let x_4297 : i32 = GLF_dead15I_2;
        let x_4300 : i32 = GLF_dead15J_2;
        let x_4303 : i32 = GLF_dead15B_2;
        let x_4304 : i32 = GLF_dead15C_2;
        let x_4307 : i32 = GLF_dead15D_2;
        let x_4310 : i32 = GLF_dead15E_2;
        let x_4313 : i32 = GLF_dead15F_2;
        let x_4315 : i32 = GLF_dead15G_2;
        let x_4317 : i32 = GLF_dead15H_2;
        let x_4319 : i32 = GLF_dead15I_2;
        let x_4322 : i32 = GLF_dead15J_2;
        let x_4326 : i32 = GLF_dead15A_2;
        let x_4328 : i32 = GLF_dead15C_2;
        let x_4330 : i32 = GLF_dead15D_2;
        let x_4333 : i32 = GLF_dead15E_2;
        let x_4336 : i32 = GLF_dead15F_2;
        let x_4338 : i32 = GLF_dead15H_2;
        let x_4341 : i32 = GLF_dead15I_2;
        let x_4343 : i32 = GLF_dead15J_2;
        let x_4347 : i32 = GLF_dead15A_2;
        let x_4348 : i32 = GLF_dead15B_2;
        let x_4351 : i32 = GLF_dead15D_2;
        let x_4354 : i32 = GLF_dead15E_2;
        let x_4357 : i32 = GLF_dead15G_2;
        let x_4359 : i32 = GLF_dead15H_2;
        let x_4362 : i32 = GLF_dead15I_2;
        let x_4364 : i32 = GLF_dead15J_2;
        GLF_dead15res_2 = (((((((((((x_4281 | ~(x_4282)) | ~(x_4285)) | ~(x_4288)) | x_4291) | x_4293) | x_4295) | ~(x_4297)) | ~(x_4300)) & ((((((((x_4303 | ~(x_4304)) | ~(x_4307)) | ~(x_4310)) | x_4313) | x_4315) | x_4317) | ~(x_4319)) | ~(x_4322))) & (((((((~(x_4326) | x_4328) | ~(x_4330)) | ~(x_4333)) | x_4336) | ~(x_4338)) | x_4341) | ~(x_4343))) & (((((((x_4347 | ~(x_4348)) | ~(x_4351)) | ~(x_4354)) | x_4357) | ~(x_4359)) | x_4362) | ~(x_4364)));
        let x_4368 : i32 = GLF_dead15A_2;
        let x_4369 : i32 = GLF_dead15B_2;
        let x_4371 : i32 = GLF_dead15C_2;
        let x_4374 : i32 = GLF_dead15D_2;
        let x_4376 : i32 = GLF_dead15E_2;
        let x_4379 : i32 = GLF_dead15F_2;
        let x_4381 : i32 = GLF_dead15G_2;
        let x_4383 : i32 = GLF_dead15H_2;
        let x_4386 : i32 = GLF_dead15I_2;
        let x_4388 : i32 = GLF_dead15J_2;
        let x_4391 : i32 = GLF_dead15B_2;
        let x_4392 : i32 = GLF_dead15C_2;
        let x_4395 : i32 = GLF_dead15D_2;
        let x_4398 : i32 = GLF_dead15E_2;
        let x_4401 : i32 = GLF_dead15F_2;
        let x_4404 : i32 = GLF_dead15G_2;
        let x_4407 : i32 = GLF_dead15H_2;
        let x_4409 : i32 = GLF_dead15I_2;
        let x_4411 : i32 = GLF_dead15J_2;
        let x_4415 : i32 = GLF_dead15A_2;
        let x_4416 : i32 = GLF_dead15C_2;
        let x_4418 : i32 = GLF_dead15D_2;
        let x_4421 : i32 = GLF_dead15E_2;
        let x_4424 : i32 = GLF_dead15G_2;
        let x_4427 : i32 = GLF_dead15H_2;
        let x_4429 : i32 = GLF_dead15I_2;
        let x_4431 : i32 = GLF_dead15J_2;
        let x_4435 : i32 = GLF_dead15A_2;
        let x_4436 : i32 = GLF_dead15C_2;
        let x_4438 : i32 = GLF_dead15D_2;
        let x_4441 : i32 = GLF_dead15E_2;
        let x_4444 : i32 = GLF_dead15F_2;
        let x_4447 : i32 = GLF_dead15H_2;
        let x_4449 : i32 = GLF_dead15I_2;
        let x_4451 : i32 = GLF_dead15J_2;
        let x_4455 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4455 & ((((((((((((x_4368 | x_4369) | ~(x_4371)) | x_4374) | ~(x_4376)) | x_4379) | x_4381) | ~(x_4383)) | x_4386) | ~(x_4388)) & ((((((((x_4391 | ~(x_4392)) | ~(x_4395)) | ~(x_4398)) | ~(x_4401)) | ~(x_4404)) | x_4407) | x_4409) | ~(x_4411))) & (((((((x_4415 | x_4416) | ~(x_4418)) | ~(x_4421)) | ~(x_4424)) | x_4427) | x_4429) | ~(x_4431))) & (((((((x_4435 | x_4436) | ~(x_4438)) | ~(x_4441)) | ~(x_4444)) | x_4447) | x_4449) | ~(x_4451))));
        let x_4457 : i32 = GLF_dead15A_2;
        let x_4458 : i32 = GLF_dead15B_2;
        let x_4460 : i32 = GLF_dead15C_2;
        let x_4463 : i32 = GLF_dead15D_2;
        let x_4465 : i32 = GLF_dead15E_2;
        let x_4468 : i32 = GLF_dead15G_2;
        let x_4471 : i32 = GLF_dead15H_2;
        let x_4473 : i32 = GLF_dead15I_2;
        let x_4475 : i32 = GLF_dead15J_2;
        let x_4478 : i32 = GLF_dead15A_2;
        let x_4480 : i32 = GLF_dead15C_2;
        let x_4482 : i32 = GLF_dead15D_2;
        let x_4484 : i32 = GLF_dead15E_2;
        let x_4487 : i32 = GLF_dead15G_2;
        let x_4490 : i32 = GLF_dead15H_2;
        let x_4492 : i32 = GLF_dead15I_2;
        let x_4494 : i32 = GLF_dead15J_2;
        let x_4498 : i32 = GLF_dead15A_2;
        let x_4500 : i32 = GLF_dead15B_2;
        let x_4503 : i32 = GLF_dead15C_2;
        let x_4506 : i32 = GLF_dead15D_2;
        let x_4509 : i32 = GLF_dead15E_2;
        let x_4511 : i32 = GLF_dead15G_2;
        let x_4514 : i32 = GLF_dead15H_2;
        let x_4516 : i32 = GLF_dead15I_2;
        let x_4518 : i32 = GLF_dead15J_2;
        let x_4522 : i32 = GLF_dead15A_2;
        let x_4523 : i32 = GLF_dead15B_2;
        let x_4526 : i32 = GLF_dead15D_2;
        let x_4528 : i32 = GLF_dead15E_2;
        let x_4531 : i32 = GLF_dead15G_2;
        let x_4533 : i32 = GLF_dead15H_2;
        let x_4535 : i32 = GLF_dead15I_2;
        let x_4537 : i32 = GLF_dead15J_2;
        let x_4541 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4541 & (((((((((((x_4457 | x_4458) | ~(x_4460)) | x_4463) | ~(x_4465)) | ~(x_4468)) | x_4471) | x_4473) | ~(x_4475)) & (((((((~(x_4478) | x_4480) | x_4482) | ~(x_4484)) | ~(x_4487)) | x_4490) | x_4492) | ~(x_4494))) & ((((((((~(x_4498) | ~(x_4500)) | ~(x_4503)) | ~(x_4506)) | x_4509) | ~(x_4511)) | x_4514) | x_4516) | ~(x_4518))) & (((((((x_4522 | ~(x_4523)) | x_4526) | ~(x_4528)) | x_4531) | x_4533) | x_4535) | ~(x_4537))));
        let x_4543 : i32 = GLF_dead15A_2;
        let x_4545 : i32 = GLF_dead15B_2;
        let x_4547 : i32 = GLF_dead15C_2;
        let x_4550 : i32 = GLF_dead15D_2;
        let x_4552 : i32 = GLF_dead15E_2;
        let x_4555 : i32 = GLF_dead15G_2;
        let x_4557 : i32 = GLF_dead15H_2;
        let x_4559 : i32 = GLF_dead15I_2;
        let x_4561 : i32 = GLF_dead15J_2;
        let x_4564 : i32 = GLF_dead15A_2;
        let x_4565 : i32 = GLF_dead15B_2;
        let x_4568 : i32 = GLF_dead15D_2;
        let x_4571 : i32 = GLF_dead15E_2;
        let x_4573 : i32 = GLF_dead15G_2;
        let x_4575 : i32 = GLF_dead15H_2;
        let x_4577 : i32 = GLF_dead15I_2;
        let x_4579 : i32 = GLF_dead15J_2;
        let x_4583 : i32 = GLF_dead15A_2;
        let x_4584 : i32 = GLF_dead15C_2;
        let x_4587 : i32 = GLF_dead15D_2;
        let x_4590 : i32 = GLF_dead15E_2;
        let x_4592 : i32 = GLF_dead15F_2;
        let x_4594 : i32 = GLF_dead15G_2;
        let x_4596 : i32 = GLF_dead15H_2;
        let x_4598 : i32 = GLF_dead15I_2;
        let x_4600 : i32 = GLF_dead15J_2;
        let x_4604 : i32 = GLF_dead15A_2;
        let x_4606 : i32 = GLF_dead15C_2;
        let x_4608 : i32 = GLF_dead15D_2;
        let x_4611 : i32 = GLF_dead15E_2;
        let x_4613 : i32 = GLF_dead15F_2;
        let x_4615 : i32 = GLF_dead15G_2;
        let x_4617 : i32 = GLF_dead15H_2;
        let x_4619 : i32 = GLF_dead15I_2;
        let x_4621 : i32 = GLF_dead15J_2;
        let x_4625 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4625 & (((((((((((~(x_4543) | x_4545) | ~(x_4547)) | x_4550) | ~(x_4552)) | x_4555) | x_4557) | x_4559) | ~(x_4561)) & (((((((x_4564 | ~(x_4565)) | ~(x_4568)) | x_4571) | x_4573) | x_4575) | x_4577) | ~(x_4579))) & ((((((((x_4583 | ~(x_4584)) | ~(x_4587)) | x_4590) | x_4592) | x_4594) | x_4596) | x_4598) | ~(x_4600))) & ((((((((~(x_4604) | x_4606) | ~(x_4608)) | x_4611) | x_4613) | x_4615) | x_4617) | x_4619) | ~(x_4621))));
        let x_4627 : i32 = GLF_dead15A_2;
        let x_4629 : i32 = GLF_dead15B_2;
        let x_4632 : i32 = GLF_dead15C_2;
        let x_4634 : i32 = GLF_dead15D_2;
        let x_4637 : i32 = GLF_dead15E_2;
        let x_4640 : i32 = GLF_dead15F_2;
        let x_4643 : i32 = GLF_dead15G_2;
        let x_4646 : i32 = GLF_dead15H_2;
        let x_4649 : i32 = GLF_dead15I_2;
        let x_4652 : i32 = GLF_dead15J_2;
        let x_4654 : i32 = GLF_dead15A_2;
        let x_4655 : i32 = GLF_dead15B_2;
        let x_4658 : i32 = GLF_dead15C_2;
        let x_4660 : i32 = GLF_dead15D_2;
        let x_4662 : i32 = GLF_dead15E_2;
        let x_4665 : i32 = GLF_dead15F_2;
        let x_4668 : i32 = GLF_dead15G_2;
        let x_4671 : i32 = GLF_dead15H_2;
        let x_4674 : i32 = GLF_dead15I_2;
        let x_4677 : i32 = GLF_dead15J_2;
        let x_4680 : i32 = GLF_dead15A_2;
        let x_4682 : i32 = GLF_dead15B_2;
        let x_4684 : i32 = GLF_dead15C_2;
        let x_4686 : i32 = GLF_dead15D_2;
        let x_4688 : i32 = GLF_dead15E_2;
        let x_4691 : i32 = GLF_dead15G_2;
        let x_4694 : i32 = GLF_dead15H_2;
        let x_4697 : i32 = GLF_dead15I_2;
        let x_4700 : i32 = GLF_dead15J_2;
        let x_4703 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4703 & (((((((((((~(x_4627) | ~(x_4629)) | x_4632) | ~(x_4634)) | ~(x_4637)) | ~(x_4640)) | ~(x_4643)) | ~(x_4646)) | ~(x_4649)) | x_4652) & (((((((((x_4654 | ~(x_4655)) | x_4658) | x_4660) | ~(x_4662)) | ~(x_4665)) | ~(x_4668)) | ~(x_4671)) | ~(x_4674)) | x_4677)) & ((((((((~(x_4680) | x_4682) | x_4684) | x_4686) | ~(x_4688)) | ~(x_4691)) | ~(x_4694)) | ~(x_4697)) | x_4700)));
        let x_4705 : i32 = GLF_dead15C_2;
        let x_4707 : i32 = GLF_dead15D_2;
        let x_4710 : i32 = GLF_dead15E_2;
        let x_4712 : i32 = GLF_dead15F_2;
        let x_4715 : i32 = GLF_dead15G_2;
        let x_4718 : i32 = GLF_dead15H_2;
        let x_4721 : i32 = GLF_dead15I_2;
        let x_4724 : i32 = GLF_dead15J_2;
        let x_4726 : i32 = GLF_dead15A_2;
        let x_4728 : i32 = GLF_dead15C_2;
        let x_4731 : i32 = GLF_dead15D_2;
        let x_4734 : i32 = GLF_dead15E_2;
        let x_4736 : i32 = GLF_dead15G_2;
        let x_4739 : i32 = GLF_dead15H_2;
        let x_4742 : i32 = GLF_dead15I_2;
        let x_4745 : i32 = GLF_dead15J_2;
        let x_4748 : i32 = GLF_dead15B_2;
        let x_4749 : i32 = GLF_dead15D_2;
        let x_4752 : i32 = GLF_dead15E_2;
        let x_4754 : i32 = GLF_dead15F_2;
        let x_4757 : i32 = GLF_dead15H_2;
        let x_4760 : i32 = GLF_dead15I_2;
        let x_4763 : i32 = GLF_dead15J_2;
        let x_4766 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4766 & (((((((((~(x_4705) | ~(x_4707)) | x_4710) | ~(x_4712)) | ~(x_4715)) | ~(x_4718)) | ~(x_4721)) | x_4724) & (((((((~(x_4726) | ~(x_4728)) | ~(x_4731)) | x_4734) | ~(x_4736)) | ~(x_4739)) | ~(x_4742)) | x_4745)) & ((((((x_4748 | ~(x_4749)) | x_4752) | ~(x_4754)) | ~(x_4757)) | ~(x_4760)) | x_4763)));
        let x_4768 : i32 = GLF_dead15A_2;
        let x_4769 : i32 = GLF_dead15B_2;
        let x_4771 : i32 = GLF_dead15C_2;
        let x_4773 : i32 = GLF_dead15D_2;
        let x_4776 : i32 = GLF_dead15E_2;
        let x_4778 : i32 = GLF_dead15G_2;
        let x_4781 : i32 = GLF_dead15H_2;
        let x_4784 : i32 = GLF_dead15I_2;
        let x_4787 : i32 = GLF_dead15J_2;
        let x_4789 : i32 = GLF_dead15B_2;
        let x_4790 : i32 = GLF_dead15C_2;
        let x_4792 : i32 = GLF_dead15D_2;
        let x_4794 : i32 = GLF_dead15E_2;
        let x_4797 : i32 = GLF_dead15F_2;
        let x_4799 : i32 = GLF_dead15G_2;
        let x_4802 : i32 = GLF_dead15H_2;
        let x_4805 : i32 = GLF_dead15I_2;
        let x_4808 : i32 = GLF_dead15J_2;
        let x_4811 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4811 & (((((((((x_4768 | x_4769) | x_4771) | ~(x_4773)) | x_4776) | ~(x_4778)) | ~(x_4781)) | ~(x_4784)) | x_4787) & ((((((((x_4789 | x_4790) | x_4792) | ~(x_4794)) | x_4797) | ~(x_4799)) | ~(x_4802)) | ~(x_4805)) | x_4808)));
        let x_4813 : i32 = GLF_dead15A_2;
        let x_4814 : i32 = GLF_dead15C_2;
        let x_4817 : i32 = GLF_dead15D_2;
        let x_4819 : i32 = GLF_dead15E_2;
        let x_4821 : i32 = GLF_dead15F_2;
        let x_4823 : i32 = GLF_dead15G_2;
        let x_4826 : i32 = GLF_dead15H_2;
        let x_4829 : i32 = GLF_dead15I_2;
        let x_4832 : i32 = GLF_dead15J_2;
        let x_4834 : i32 = GLF_dead15B_2;
        let x_4835 : i32 = GLF_dead15C_2;
        let x_4838 : i32 = GLF_dead15D_2;
        let x_4840 : i32 = GLF_dead15E_2;
        let x_4842 : i32 = GLF_dead15F_2;
        let x_4844 : i32 = GLF_dead15G_2;
        let x_4847 : i32 = GLF_dead15H_2;
        let x_4850 : i32 = GLF_dead15J_2;
        let x_4853 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4853 & (((((((((x_4813 | ~(x_4814)) | x_4817) | x_4819) | x_4821) | ~(x_4823)) | ~(x_4826)) | ~(x_4829)) | x_4832) & (((((((x_4834 | ~(x_4835)) | x_4838) | x_4840) | x_4842) | ~(x_4844)) | ~(x_4847)) | x_4850)));
        let x_4855 : i32 = GLF_dead15A_2;
        let x_4857 : i32 = GLF_dead15B_2;
        let x_4860 : i32 = GLF_dead15C_2;
        let x_4862 : i32 = GLF_dead15D_2;
        let x_4864 : i32 = GLF_dead15E_2;
        let x_4866 : i32 = GLF_dead15F_2;
        let x_4868 : i32 = GLF_dead15G_2;
        let x_4871 : i32 = GLF_dead15H_2;
        let x_4874 : i32 = GLF_dead15I_2;
        let x_4877 : i32 = GLF_dead15J_2;
        let x_4879 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4879 & (((((((((~(x_4855) | ~(x_4857)) | x_4860) | x_4862) | x_4864) | x_4866) | ~(x_4868)) | ~(x_4871)) | ~(x_4874)) | x_4877));
        let x_4881 : i32 = GLF_dead15A_2;
        let x_4882 : i32 = GLF_dead15B_2;
        let x_4884 : i32 = GLF_dead15C_2;
        let x_4887 : i32 = GLF_dead15D_2;
        let x_4890 : i32 = GLF_dead15E_2;
        let x_4892 : i32 = GLF_dead15G_2;
        let x_4894 : i32 = GLF_dead15H_2;
        let x_4897 : i32 = GLF_dead15I_2;
        let x_4900 : i32 = GLF_dead15J_2;
        let x_4902 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4902 & ((((((((x_4881 | x_4882) | ~(x_4884)) | ~(x_4887)) | x_4890) | x_4892) | ~(x_4894)) | ~(x_4897)) | x_4900));
        let x_4904 : i32 = GLF_dead15B_2;
        let x_4906 : i32 = GLF_dead15D_2;
        let x_4908 : i32 = GLF_dead15E_2;
        let x_4910 : i32 = GLF_dead15F_2;
        let x_4913 : i32 = GLF_dead15G_2;
        let x_4915 : i32 = GLF_dead15H_2;
        let x_4918 : i32 = GLF_dead15I_2;
        let x_4921 : i32 = GLF_dead15J_2;
        let x_4923 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4923 & (((((((~(x_4904) | x_4906) | x_4908) | ~(x_4910)) | x_4913) | ~(x_4915)) | ~(x_4918)) | x_4921));
        let x_4925 : i32 = GLF_dead15B_2;
        let x_4927 : i32 = GLF_dead15C_2;
        let x_4929 : i32 = GLF_dead15D_2;
        let x_4932 : i32 = GLF_dead15E_2;
        let x_4934 : i32 = GLF_dead15F_2;
        let x_4936 : i32 = GLF_dead15G_2;
        let x_4938 : i32 = GLF_dead15H_2;
        let x_4941 : i32 = GLF_dead15I_2;
        let x_4944 : i32 = GLF_dead15J_2;
        let x_4946 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4946 & ((((((((~(x_4925) | x_4927) | ~(x_4929)) | x_4932) | x_4934) | x_4936) | ~(x_4938)) | ~(x_4941)) | x_4944));
        let x_4948 : i32 = GLF_dead15A_2;
        let x_4950 : i32 = GLF_dead15B_2;
        let x_4953 : i32 = GLF_dead15C_2;
        let x_4956 : i32 = GLF_dead15D_2;
        let x_4958 : i32 = GLF_dead15E_2;
        let x_4960 : i32 = GLF_dead15F_2;
        let x_4962 : i32 = GLF_dead15G_2;
        let x_4964 : i32 = GLF_dead15I_2;
        let x_4967 : i32 = GLF_dead15J_2;
        let x_4969 : i32 = GLF_dead15B_2;
        let x_4971 : i32 = GLF_dead15C_2;
        let x_4974 : i32 = GLF_dead15D_2;
        let x_4976 : i32 = GLF_dead15E_2;
        let x_4978 : i32 = GLF_dead15F_2;
        let x_4981 : i32 = GLF_dead15G_2;
        let x_4984 : i32 = GLF_dead15H_2;
        let x_4986 : i32 = GLF_dead15I_2;
        let x_4989 : i32 = GLF_dead15J_2;
        let x_4992 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_4992 & (((((((((~(x_4948) | ~(x_4950)) | ~(x_4953)) | x_4956) | x_4958) | x_4960) | x_4962) | ~(x_4964)) | x_4967) & ((((((((~(x_4969) | ~(x_4971)) | x_4974) | x_4976) | ~(x_4978)) | ~(x_4981)) | x_4984) | ~(x_4986)) | x_4989)));
        let x_4994 : i32 = GLF_dead15A_2;
        let x_4996 : i32 = GLF_dead15B_2;
        let x_4998 : i32 = GLF_dead15C_2;
        let x_5000 : i32 = GLF_dead15D_2;
        let x_5002 : i32 = GLF_dead15E_2;
        let x_5004 : i32 = GLF_dead15H_2;
        let x_5006 : i32 = GLF_dead15I_2;
        let x_5009 : i32 = GLF_dead15J_2;
        let x_5011 : i32 = GLF_dead15B_2;
        let x_5012 : i32 = GLF_dead15C_2;
        let x_5014 : i32 = GLF_dead15D_2;
        let x_5016 : i32 = GLF_dead15E_2;
        let x_5018 : i32 = GLF_dead15F_2;
        let x_5020 : i32 = GLF_dead15G_2;
        let x_5023 : i32 = GLF_dead15H_2;
        let x_5025 : i32 = GLF_dead15I_2;
        let x_5028 : i32 = GLF_dead15J_2;
        let x_5031 : i32 = GLF_dead15A_2;
        let x_5032 : i32 = GLF_dead15B_2;
        let x_5034 : i32 = GLF_dead15C_2;
        let x_5036 : i32 = GLF_dead15D_2;
        let x_5039 : i32 = GLF_dead15E_2;
        let x_5041 : i32 = GLF_dead15F_2;
        let x_5043 : i32 = GLF_dead15G_2;
        let x_5045 : i32 = GLF_dead15H_2;
        let x_5047 : i32 = GLF_dead15I_2;
        let x_5050 : i32 = GLF_dead15J_2;
        let x_5053 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5053 & (((((((((~(x_4994) | x_4996) | x_4998) | x_5000) | x_5002) | x_5004) | ~(x_5006)) | x_5009) & ((((((((x_5011 | x_5012) | x_5014) | x_5016) | x_5018) | ~(x_5020)) | x_5023) | ~(x_5025)) | x_5028)) & (((((((((x_5031 | x_5032) | x_5034) | ~(x_5036)) | x_5039) | x_5041) | x_5043) | x_5045) | ~(x_5047)) | x_5050)));
        let x_5055 : i32 = GLF_dead15A_2;
        let x_5056 : i32 = GLF_dead15B_2;
        let x_5059 : i32 = GLF_dead15C_2;
        let x_5061 : i32 = GLF_dead15D_2;
        let x_5063 : i32 = GLF_dead15E_2;
        let x_5065 : i32 = GLF_dead15F_2;
        let x_5067 : i32 = GLF_dead15G_2;
        let x_5069 : i32 = GLF_dead15H_2;
        let x_5071 : i32 = GLF_dead15I_2;
        let x_5074 : i32 = GLF_dead15J_2;
        let x_5076 : i32 = GLF_dead15B_2;
        let x_5078 : i32 = GLF_dead15D_2;
        let x_5080 : i32 = GLF_dead15E_2;
        let x_5082 : i32 = GLF_dead15F_2;
        let x_5085 : i32 = GLF_dead15G_2;
        let x_5088 : i32 = GLF_dead15H_2;
        let x_5091 : i32 = GLF_dead15I_2;
        let x_5093 : i32 = GLF_dead15J_2;
        let x_5096 : i32 = GLF_dead15A_2;
        let x_5098 : i32 = GLF_dead15B_2;
        let x_5101 : i32 = GLF_dead15C_2;
        let x_5103 : i32 = GLF_dead15E_2;
        let x_5106 : i32 = GLF_dead15G_2;
        let x_5109 : i32 = GLF_dead15H_2;
        let x_5112 : i32 = GLF_dead15I_2;
        let x_5114 : i32 = GLF_dead15J_2;
        let x_5118 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5118 & (((((((((((x_5055 | ~(x_5056)) | x_5059) | x_5061) | x_5063) | x_5065) | x_5067) | x_5069) | ~(x_5071)) | x_5074) & (((((((~(x_5076) | x_5078) | x_5080) | ~(x_5082)) | ~(x_5085)) | ~(x_5088)) | x_5091) | x_5093)) & (((((((~(x_5096) | ~(x_5098)) | x_5101) | ~(x_5103)) | ~(x_5106)) | ~(x_5109)) | x_5112) | ~(x_5114))));
        let x_5120 : i32 = GLF_dead15A_2;
        let x_5122 : i32 = GLF_dead15D_2;
        let x_5125 : i32 = GLF_dead15E_2;
        let x_5128 : i32 = GLF_dead15F_2;
        let x_5131 : i32 = GLF_dead15G_2;
        let x_5133 : i32 = GLF_dead15H_2;
        let x_5136 : i32 = GLF_dead15I_2;
        let x_5138 : i32 = GLF_dead15J_2;
        let x_5141 : i32 = GLF_dead15A_2;
        let x_5142 : i32 = GLF_dead15B_2;
        let x_5144 : i32 = GLF_dead15E_2;
        let x_5147 : i32 = GLF_dead15F_2;
        let x_5150 : i32 = GLF_dead15G_2;
        let x_5153 : i32 = GLF_dead15H_2;
        let x_5155 : i32 = GLF_dead15I_2;
        let x_5157 : i32 = GLF_dead15J_2;
        let x_5161 : i32 = GLF_dead15B_2;
        let x_5163 : i32 = GLF_dead15C_2;
        let x_5165 : i32 = GLF_dead15D_2;
        let x_5167 : i32 = GLF_dead15E_2;
        let x_5170 : i32 = GLF_dead15F_2;
        let x_5172 : i32 = GLF_dead15G_2;
        let x_5175 : i32 = GLF_dead15H_2;
        let x_5177 : i32 = GLF_dead15I_2;
        let x_5179 : i32 = GLF_dead15J_2;
        let x_5183 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5183 & (((((((((~(x_5120) | ~(x_5122)) | ~(x_5125)) | ~(x_5128)) | x_5131) | ~(x_5133)) | x_5136) | ~(x_5138)) & (((((((x_5141 | x_5142) | ~(x_5144)) | ~(x_5147)) | ~(x_5150)) | x_5153) | x_5155) | ~(x_5157))) & ((((((((~(x_5161) | x_5163) | x_5165) | ~(x_5167)) | x_5170) | ~(x_5172)) | x_5175) | x_5177) | ~(x_5179))));
        let x_5185 : i32 = GLF_dead15B_2;
        let x_5187 : i32 = GLF_dead15C_2;
        let x_5190 : i32 = GLF_dead15D_2;
        let x_5193 : i32 = GLF_dead15E_2;
        let x_5195 : i32 = GLF_dead15F_2;
        let x_5197 : i32 = GLF_dead15G_2;
        let x_5200 : i32 = GLF_dead15H_2;
        let x_5202 : i32 = GLF_dead15I_2;
        let x_5204 : i32 = GLF_dead15J_2;
        let x_5207 : i32 = GLF_dead15A_2;
        let x_5209 : i32 = GLF_dead15B_2;
        let x_5212 : i32 = GLF_dead15C_2;
        let x_5214 : i32 = GLF_dead15D_2;
        let x_5217 : i32 = GLF_dead15G_2;
        let x_5219 : i32 = GLF_dead15H_2;
        let x_5221 : i32 = GLF_dead15I_2;
        let x_5223 : i32 = GLF_dead15J_2;
        let x_5227 : i32 = GLF_dead15C_2;
        let x_5229 : i32 = GLF_dead15D_2;
        let x_5231 : i32 = GLF_dead15E_2;
        let x_5234 : i32 = GLF_dead15F_2;
        let x_5237 : i32 = GLF_dead15G_2;
        let x_5239 : i32 = GLF_dead15H_2;
        let x_5241 : i32 = GLF_dead15I_2;
        let x_5243 : i32 = GLF_dead15J_2;
        let x_5247 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5247 & ((((((((((~(x_5185) | ~(x_5187)) | ~(x_5190)) | x_5193) | x_5195) | ~(x_5197)) | x_5200) | x_5202) | ~(x_5204)) & (((((((~(x_5207) | ~(x_5209)) | x_5212) | ~(x_5214)) | x_5217) | x_5219) | x_5221) | ~(x_5223))) & (((((((~(x_5227) | x_5229) | ~(x_5231)) | ~(x_5234)) | x_5237) | x_5239) | x_5241) | ~(x_5243))));
        let x_5249 : i32 = GLF_dead15A_2;
        let x_5251 : i32 = GLF_dead15B_2;
        let x_5253 : i32 = GLF_dead15C_2;
        let x_5255 : i32 = GLF_dead15E_2;
        let x_5257 : i32 = GLF_dead15F_2;
        let x_5259 : i32 = GLF_dead15G_2;
        let x_5261 : i32 = GLF_dead15H_2;
        let x_5264 : i32 = GLF_dead15I_2;
        let x_5267 : i32 = GLF_dead15J_2;
        let x_5269 : i32 = GLF_dead15A_2;
        let x_5271 : i32 = GLF_dead15B_2;
        let x_5273 : i32 = GLF_dead15D_2;
        let x_5275 : i32 = GLF_dead15E_2;
        let x_5277 : i32 = GLF_dead15G_2;
        let x_5280 : i32 = GLF_dead15H_2;
        let x_5282 : i32 = GLF_dead15I_2;
        let x_5285 : i32 = GLF_dead15J_2;
        let x_5288 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5288 & (((((((((~(x_5249) | x_5251) | x_5253) | x_5255) | x_5257) | x_5259) | ~(x_5261)) | ~(x_5264)) | x_5267) & (((((((~(x_5269) | x_5271) | x_5273) | x_5275) | ~(x_5277)) | x_5280) | ~(x_5282)) | x_5285)));
        let x_5290 : i32 = GLF_dead15A_2;
        let x_5291 : i32 = GLF_dead15B_2;
        let x_5293 : i32 = GLF_dead15C_2;
        let x_5296 : i32 = GLF_dead15D_2;
        let x_5299 : i32 = GLF_dead15E_2;
        let x_5302 : i32 = GLF_dead15F_2;
        let x_5305 : i32 = GLF_dead15H_2;
        let x_5308 : i32 = GLF_dead15I_2;
        let x_5310 : i32 = GLF_dead15J_2;
        let x_5313 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5313 & ((((((((x_5290 | x_5291) | ~(x_5293)) | ~(x_5296)) | ~(x_5299)) | ~(x_5302)) | ~(x_5305)) | x_5308) | ~(x_5310)));
        let x_5315 : i32 = GLF_dead15A_2;
        let x_5317 : i32 = GLF_dead15C_2;
        let x_5320 : i32 = GLF_dead15E_2;
        let x_5323 : i32 = GLF_dead15F_2;
        let x_5326 : i32 = GLF_dead15G_2;
        let x_5328 : i32 = GLF_dead15H_2;
        let x_5331 : i32 = GLF_dead15I_2;
        let x_5333 : i32 = GLF_dead15J_2;
        let x_5336 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5336 & (((((((~(x_5315) | ~(x_5317)) | ~(x_5320)) | ~(x_5323)) | x_5326) | ~(x_5328)) | x_5331) | ~(x_5333)));
        let x_5338 : i32 = GLF_dead15A_2;
        let x_5339 : i32 = GLF_dead15B_2;
        let x_5342 : i32 = GLF_dead15C_2;
        let x_5345 : i32 = GLF_dead15D_2;
        let x_5347 : i32 = GLF_dead15E_2;
        let x_5350 : i32 = GLF_dead15F_2;
        let x_5353 : i32 = GLF_dead15H_2;
        let x_5356 : i32 = GLF_dead15I_2;
        let x_5358 : i32 = GLF_dead15J_2;
        let x_5361 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5361 & ((((((((x_5338 | ~(x_5339)) | ~(x_5342)) | x_5345) | ~(x_5347)) | ~(x_5350)) | ~(x_5353)) | x_5356) | ~(x_5358)));
        let x_5363 : i32 = GLF_dead15B_2;
        let x_5364 : i32 = GLF_dead15C_2;
        let x_5367 : i32 = GLF_dead15D_2;
        let x_5369 : i32 = GLF_dead15E_2;
        let x_5372 : i32 = GLF_dead15F_2;
        let x_5375 : i32 = GLF_dead15G_2;
        let x_5378 : i32 = GLF_dead15H_2;
        let x_5381 : i32 = GLF_dead15I_2;
        let x_5383 : i32 = GLF_dead15J_2;
        let x_5386 : i32 = GLF_dead15A_2;
        let x_5388 : i32 = GLF_dead15B_2;
        let x_5391 : i32 = GLF_dead15C_2;
        let x_5394 : i32 = GLF_dead15D_2;
        let x_5396 : i32 = GLF_dead15E_2;
        let x_5399 : i32 = GLF_dead15F_2;
        let x_5401 : i32 = GLF_dead15H_2;
        let x_5404 : i32 = GLF_dead15I_2;
        let x_5406 : i32 = GLF_dead15J_2;
        let x_5410 : i32 = GLF_dead15B_2;
        let x_5412 : i32 = GLF_dead15C_2;
        let x_5415 : i32 = GLF_dead15D_2;
        let x_5417 : i32 = GLF_dead15E_2;
        let x_5420 : i32 = GLF_dead15F_2;
        let x_5422 : i32 = GLF_dead15G_2;
        let x_5425 : i32 = GLF_dead15H_2;
        let x_5428 : i32 = GLF_dead15I_2;
        let x_5430 : i32 = GLF_dead15J_2;
        let x_5434 : i32 = GLF_dead15res_2;
        GLF_dead15res_2 = (x_5434 & ((((((((((x_5363 | ~(x_5364)) | x_5367) | ~(x_5369)) | ~(x_5372)) | ~(x_5375)) | ~(x_5378)) | x_5381) | ~(x_5383)) & ((((((((~(x_5386) | ~(x_5388)) | ~(x_5391)) | x_5394) | ~(x_5396)) | x_5399) | ~(x_5401)) | x_5404) | ~(x_5406))) & ((((((((~(x_5410) | ~(x_5412)) | x_5415) | ~(x_5417)) | x_5420) | ~(x_5422)) | ~(x_5425)) | x_5428) | ~(x_5430))));
        let x_5436 : i32 = GLF_dead15res_2;
        let x_5438 : f32 = select(1.0, 0.0, (x_5436 == 0));
        let x_5439 : vec3<f32> = vec3<f32>(x_5438, x_5438, x_5438);
        GLF_dead15_GLF_color = vec4<f32>(x_5439.x, x_5439.y, x_5439.z, 1.0);
      }
      loop {
        let x_5449 : i32 = *(v);
        if ((x_5449 <= 9)) {
        } else {
          break;
        }
        let x_5451 : i32 = *(v);
        let x_5453 : f32 = donor_replacementGLF_dead0odd_number;
        donor_replacementGLF_dead0obj.odd_numbers[clamp(x_5451, 0, 9)] = x_5453;
        let x_5455 : f32 = donor_replacementGLF_dead0odd_number;
        donor_replacementGLF_dead0odd_number = (x_5455 + 2.0);
        if (false) {
          if (false) {
            let x_5462 : f32 = GLF_dead11gl_FragCoord.y;
            if ((i32(x_5462) < 210)) {
              let x_5470 : i32 = GLF_dead11data[6];
              donor_replacementGLF_dead0odd_number = (0.5 + (f32(x_5470) / 10.0));
            } else {
              let x_5477 : f32 = GLF_dead11gl_FragCoord.y;
              if ((i32(x_5477) < 240)) {
                let x_5484 : i32 = GLF_dead11data[7];
                donor_replacementGLF_dead0odd_number = (0.5 + (f32(x_5484) / 10.0));
                let x_5489 : f32 = gl_FragCoord.x;
                if ((x_5489 < 0.0)) {
                  let x_5494 : vec4<f32> = GLF_dead15gl_FragCoord;
                  GLF_dead15icoord_3 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_5494.x, x_5494.y)));
                  let x_5500 : i32 = GLF_dead15icoord_3.x;
                  GLF_dead15A_3 = select(-1, 0, ((x_5500 & 1) != 0));
                  let x_5506 : i32 = GLF_dead15icoord_3.x;
                  GLF_dead15B_3 = select(-1, 0, ((x_5506 & 2) != 0));
                  let x_5512 : i32 = GLF_dead15icoord_3.x;
                  GLF_dead15C_3 = select(-1, 0, ((x_5512 & 4) != 0));
                  let x_5518 : i32 = GLF_dead15icoord_3.x;
                  GLF_dead15D_3 = select(-1, 0, ((x_5518 & 8) != 0));
                  let x_5524 : i32 = GLF_dead15icoord_3.x;
                  GLF_dead15E_3 = select(-1, 0, ((x_5524 & 16) != 0));
                  let x_5530 : i32 = GLF_dead15icoord_3.y;
                  GLF_dead15F_3 = select(-1, 0, ((x_5530 & 1) != 0));
                  let x_5536 : i32 = GLF_dead15icoord_3.y;
                  GLF_dead15G_3 = select(-1, 0, ((x_5536 & 2) != 0));
                  let x_5542 : i32 = GLF_dead15icoord_3.y;
                  GLF_dead15H_3 = select(-1, 0, ((x_5542 & 4) != 0));
                  let x_5548 : i32 = GLF_dead15icoord_3.y;
                  GLF_dead15I_3 = select(-1, 0, ((x_5548 & 8) != 0));
                  let x_5554 : i32 = GLF_dead15icoord_3.y;
                  GLF_dead15J_3 = select(-1, 0, ((x_5554 & 16) != 0));
                  let x_5559 : i32 = GLF_dead15A_3;
                  let x_5560 : i32 = GLF_dead15C_3;
                  let x_5563 : i32 = GLF_dead15D_3;
                  let x_5566 : i32 = GLF_dead15E_3;
                  let x_5569 : i32 = GLF_dead15F_3;
                  let x_5571 : i32 = GLF_dead15G_3;
                  let x_5573 : i32 = GLF_dead15H_3;
                  let x_5575 : i32 = GLF_dead15I_3;
                  let x_5578 : i32 = GLF_dead15J_3;
                  let x_5581 : i32 = GLF_dead15B_3;
                  let x_5582 : i32 = GLF_dead15C_3;
                  let x_5585 : i32 = GLF_dead15D_3;
                  let x_5588 : i32 = GLF_dead15E_3;
                  let x_5591 : i32 = GLF_dead15F_3;
                  let x_5593 : i32 = GLF_dead15G_3;
                  let x_5595 : i32 = GLF_dead15H_3;
                  let x_5597 : i32 = GLF_dead15I_3;
                  let x_5600 : i32 = GLF_dead15J_3;
                  let x_5604 : i32 = GLF_dead15A_3;
                  let x_5606 : i32 = GLF_dead15C_3;
                  let x_5608 : i32 = GLF_dead15D_3;
                  let x_5611 : i32 = GLF_dead15E_3;
                  let x_5614 : i32 = GLF_dead15F_3;
                  let x_5616 : i32 = GLF_dead15H_3;
                  let x_5619 : i32 = GLF_dead15I_3;
                  let x_5621 : i32 = GLF_dead15J_3;
                  let x_5625 : i32 = GLF_dead15A_3;
                  let x_5626 : i32 = GLF_dead15B_3;
                  let x_5629 : i32 = GLF_dead15D_3;
                  let x_5632 : i32 = GLF_dead15E_3;
                  let x_5635 : i32 = GLF_dead15G_3;
                  let x_5637 : i32 = GLF_dead15H_3;
                  let x_5640 : i32 = GLF_dead15I_3;
                  let x_5642 : i32 = GLF_dead15J_3;
                  GLF_dead15res_3 = (((((((((((x_5559 | ~(x_5560)) | ~(x_5563)) | ~(x_5566)) | x_5569) | x_5571) | x_5573) | ~(x_5575)) | ~(x_5578)) & ((((((((x_5581 | ~(x_5582)) | ~(x_5585)) | ~(x_5588)) | x_5591) | x_5593) | x_5595) | ~(x_5597)) | ~(x_5600))) & (((((((~(x_5604) | x_5606) | ~(x_5608)) | ~(x_5611)) | x_5614) | ~(x_5616)) | x_5619) | ~(x_5621))) & (((((((x_5625 | ~(x_5626)) | ~(x_5629)) | ~(x_5632)) | x_5635) | ~(x_5637)) | x_5640) | ~(x_5642)));
                  let x_5646 : i32 = GLF_dead15A_3;
                  let x_5647 : i32 = GLF_dead15B_3;
                  let x_5649 : i32 = GLF_dead15C_3;
                  let x_5652 : i32 = GLF_dead15D_3;
                  let x_5654 : i32 = GLF_dead15E_3;
                  let x_5657 : i32 = GLF_dead15F_3;
                  let x_5659 : i32 = GLF_dead15G_3;
                  let x_5661 : i32 = GLF_dead15H_3;
                  let x_5664 : i32 = GLF_dead15I_3;
                  let x_5666 : i32 = GLF_dead15J_3;
                  let x_5669 : i32 = GLF_dead15B_3;
                  let x_5670 : i32 = GLF_dead15C_3;
                  let x_5673 : i32 = GLF_dead15D_3;
                  let x_5676 : i32 = GLF_dead15E_3;
                  let x_5679 : i32 = GLF_dead15F_3;
                  let x_5682 : i32 = GLF_dead15G_3;
                  let x_5685 : i32 = GLF_dead15H_3;
                  let x_5687 : i32 = GLF_dead15I_3;
                  let x_5689 : i32 = GLF_dead15J_3;
                  let x_5693 : i32 = GLF_dead15A_3;
                  let x_5694 : i32 = GLF_dead15C_3;
                  let x_5696 : i32 = GLF_dead15D_3;
                  let x_5699 : i32 = GLF_dead15E_3;
                  let x_5702 : i32 = GLF_dead15G_3;
                  let x_5705 : i32 = GLF_dead15H_3;
                  let x_5707 : i32 = GLF_dead15I_3;
                  let x_5709 : i32 = GLF_dead15J_3;
                  let x_5713 : i32 = GLF_dead15A_3;
                  let x_5714 : i32 = GLF_dead15C_3;
                  let x_5716 : i32 = GLF_dead15D_3;
                  let x_5719 : i32 = GLF_dead15E_3;
                  let x_5722 : i32 = GLF_dead15F_3;
                  let x_5725 : i32 = GLF_dead15H_3;
                  let x_5727 : i32 = GLF_dead15I_3;
                  let x_5729 : i32 = GLF_dead15J_3;
                  let x_5733 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_5733 & ((((((((((((x_5646 | x_5647) | ~(x_5649)) | x_5652) | ~(x_5654)) | x_5657) | x_5659) | ~(x_5661)) | x_5664) | ~(x_5666)) & ((((((((x_5669 | ~(x_5670)) | ~(x_5673)) | ~(x_5676)) | ~(x_5679)) | ~(x_5682)) | x_5685) | x_5687) | ~(x_5689))) & (((((((x_5693 | x_5694) | ~(x_5696)) | ~(x_5699)) | ~(x_5702)) | x_5705) | x_5707) | ~(x_5709))) & (((((((x_5713 | x_5714) | ~(x_5716)) | ~(x_5719)) | ~(x_5722)) | x_5725) | x_5727) | ~(x_5729))));
                  let x_5735 : i32 = GLF_dead15A_3;
                  let x_5736 : i32 = GLF_dead15B_3;
                  let x_5738 : i32 = GLF_dead15C_3;
                  let x_5741 : i32 = GLF_dead15D_3;
                  let x_5743 : i32 = GLF_dead15E_3;
                  let x_5746 : i32 = GLF_dead15G_3;
                  let x_5749 : i32 = GLF_dead15H_3;
                  let x_5751 : i32 = GLF_dead15I_3;
                  let x_5753 : i32 = GLF_dead15J_3;
                  let x_5756 : i32 = GLF_dead15A_3;
                  let x_5758 : i32 = GLF_dead15C_3;
                  let x_5760 : i32 = GLF_dead15D_3;
                  let x_5762 : i32 = GLF_dead15E_3;
                  let x_5765 : i32 = GLF_dead15G_3;
                  let x_5768 : i32 = GLF_dead15H_3;
                  let x_5770 : i32 = GLF_dead15I_3;
                  let x_5772 : i32 = GLF_dead15J_3;
                  let x_5776 : i32 = GLF_dead15A_3;
                  let x_5778 : i32 = GLF_dead15B_3;
                  let x_5781 : i32 = GLF_dead15C_3;
                  let x_5784 : i32 = GLF_dead15D_3;
                  let x_5787 : i32 = GLF_dead15E_3;
                  let x_5789 : i32 = GLF_dead15G_3;
                  let x_5792 : i32 = GLF_dead15H_3;
                  let x_5794 : i32 = GLF_dead15I_3;
                  let x_5796 : i32 = GLF_dead15J_3;
                  let x_5800 : i32 = GLF_dead15A_3;
                  let x_5801 : i32 = GLF_dead15B_3;
                  let x_5804 : i32 = GLF_dead15D_3;
                  let x_5806 : i32 = GLF_dead15E_3;
                  let x_5809 : i32 = GLF_dead15G_3;
                  let x_5811 : i32 = GLF_dead15H_3;
                  let x_5813 : i32 = GLF_dead15I_3;
                  let x_5815 : i32 = GLF_dead15J_3;
                  let x_5819 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_5819 & (((((((((((x_5735 | x_5736) | ~(x_5738)) | x_5741) | ~(x_5743)) | ~(x_5746)) | x_5749) | x_5751) | ~(x_5753)) & (((((((~(x_5756) | x_5758) | x_5760) | ~(x_5762)) | ~(x_5765)) | x_5768) | x_5770) | ~(x_5772))) & ((((((((~(x_5776) | ~(x_5778)) | ~(x_5781)) | ~(x_5784)) | x_5787) | ~(x_5789)) | x_5792) | x_5794) | ~(x_5796))) & (((((((x_5800 | ~(x_5801)) | x_5804) | ~(x_5806)) | x_5809) | x_5811) | x_5813) | ~(x_5815))));
                  let x_5821 : i32 = GLF_dead15A_3;
                  let x_5823 : i32 = GLF_dead15B_3;
                  let x_5825 : i32 = GLF_dead15C_3;
                  let x_5828 : i32 = GLF_dead15D_3;
                  let x_5830 : i32 = GLF_dead15E_3;
                  let x_5833 : i32 = GLF_dead15G_3;
                  let x_5835 : i32 = GLF_dead15H_3;
                  let x_5837 : i32 = GLF_dead15I_3;
                  let x_5839 : i32 = GLF_dead15J_3;
                  let x_5842 : i32 = GLF_dead15A_3;
                  let x_5843 : i32 = GLF_dead15B_3;
                  let x_5846 : i32 = GLF_dead15D_3;
                  let x_5849 : i32 = GLF_dead15E_3;
                  let x_5851 : i32 = GLF_dead15G_3;
                  let x_5853 : i32 = GLF_dead15H_3;
                  let x_5855 : i32 = GLF_dead15I_3;
                  let x_5857 : i32 = GLF_dead15J_3;
                  let x_5861 : i32 = GLF_dead15A_3;
                  let x_5862 : i32 = GLF_dead15C_3;
                  let x_5865 : i32 = GLF_dead15D_3;
                  let x_5868 : i32 = GLF_dead15E_3;
                  let x_5870 : i32 = GLF_dead15F_3;
                  let x_5872 : i32 = GLF_dead15G_3;
                  let x_5874 : i32 = GLF_dead15H_3;
                  let x_5876 : i32 = GLF_dead15I_3;
                  let x_5878 : i32 = GLF_dead15J_3;
                  let x_5882 : i32 = GLF_dead15A_3;
                  let x_5884 : i32 = GLF_dead15C_3;
                  let x_5886 : i32 = GLF_dead15D_3;
                  let x_5889 : i32 = GLF_dead15E_3;
                  let x_5891 : i32 = GLF_dead15F_3;
                  let x_5893 : i32 = GLF_dead15G_3;
                  let x_5895 : i32 = GLF_dead15H_3;
                  let x_5897 : i32 = GLF_dead15I_3;
                  let x_5899 : i32 = GLF_dead15J_3;
                  let x_5903 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_5903 & (((((((((((~(x_5821) | x_5823) | ~(x_5825)) | x_5828) | ~(x_5830)) | x_5833) | x_5835) | x_5837) | ~(x_5839)) & (((((((x_5842 | ~(x_5843)) | ~(x_5846)) | x_5849) | x_5851) | x_5853) | x_5855) | ~(x_5857))) & ((((((((x_5861 | ~(x_5862)) | ~(x_5865)) | x_5868) | x_5870) | x_5872) | x_5874) | x_5876) | ~(x_5878))) & ((((((((~(x_5882) | x_5884) | ~(x_5886)) | x_5889) | x_5891) | x_5893) | x_5895) | x_5897) | ~(x_5899))));
                  let x_5905 : i32 = GLF_dead15A_3;
                  let x_5907 : i32 = GLF_dead15B_3;
                  let x_5910 : i32 = GLF_dead15C_3;
                  let x_5912 : i32 = GLF_dead15D_3;
                  let x_5915 : i32 = GLF_dead15E_3;
                  let x_5918 : i32 = GLF_dead15F_3;
                  let x_5921 : i32 = GLF_dead15G_3;
                  let x_5924 : i32 = GLF_dead15H_3;
                  let x_5927 : i32 = GLF_dead15I_3;
                  let x_5930 : i32 = GLF_dead15J_3;
                  let x_5932 : i32 = GLF_dead15A_3;
                  let x_5933 : i32 = GLF_dead15B_3;
                  let x_5936 : i32 = GLF_dead15C_3;
                  let x_5938 : i32 = GLF_dead15D_3;
                  let x_5940 : i32 = GLF_dead15E_3;
                  let x_5943 : i32 = GLF_dead15F_3;
                  let x_5946 : i32 = GLF_dead15G_3;
                  let x_5949 : i32 = GLF_dead15H_3;
                  let x_5952 : i32 = GLF_dead15I_3;
                  let x_5955 : i32 = GLF_dead15J_3;
                  let x_5958 : i32 = GLF_dead15A_3;
                  let x_5960 : i32 = GLF_dead15B_3;
                  let x_5962 : i32 = GLF_dead15C_3;
                  let x_5964 : i32 = GLF_dead15D_3;
                  let x_5966 : i32 = GLF_dead15E_3;
                  let x_5969 : i32 = GLF_dead15G_3;
                  let x_5972 : i32 = GLF_dead15H_3;
                  let x_5975 : i32 = GLF_dead15I_3;
                  let x_5978 : i32 = GLF_dead15J_3;
                  let x_5981 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_5981 & (((((((((((~(x_5905) | ~(x_5907)) | x_5910) | ~(x_5912)) | ~(x_5915)) | ~(x_5918)) | ~(x_5921)) | ~(x_5924)) | ~(x_5927)) | x_5930) & (((((((((x_5932 | ~(x_5933)) | x_5936) | x_5938) | ~(x_5940)) | ~(x_5943)) | ~(x_5946)) | ~(x_5949)) | ~(x_5952)) | x_5955)) & ((((((((~(x_5958) | x_5960) | x_5962) | x_5964) | ~(x_5966)) | ~(x_5969)) | ~(x_5972)) | ~(x_5975)) | x_5978)));
                  let x_5983 : i32 = GLF_dead15C_3;
                  let x_5985 : i32 = GLF_dead15D_3;
                  let x_5988 : i32 = GLF_dead15E_3;
                  let x_5990 : i32 = GLF_dead15F_3;
                  let x_5993 : i32 = GLF_dead15G_3;
                  let x_5996 : i32 = GLF_dead15H_3;
                  let x_5999 : i32 = GLF_dead15I_3;
                  let x_6002 : i32 = GLF_dead15J_3;
                  let x_6004 : i32 = GLF_dead15A_3;
                  let x_6006 : i32 = GLF_dead15C_3;
                  let x_6009 : i32 = GLF_dead15D_3;
                  let x_6012 : i32 = GLF_dead15E_3;
                  let x_6014 : i32 = GLF_dead15G_3;
                  let x_6017 : i32 = GLF_dead15H_3;
                  let x_6020 : i32 = GLF_dead15I_3;
                  let x_6023 : i32 = GLF_dead15J_3;
                  let x_6026 : i32 = GLF_dead15B_3;
                  let x_6027 : i32 = GLF_dead15D_3;
                  let x_6030 : i32 = GLF_dead15E_3;
                  let x_6032 : i32 = GLF_dead15F_3;
                  let x_6035 : i32 = GLF_dead15H_3;
                  let x_6038 : i32 = GLF_dead15I_3;
                  let x_6041 : i32 = GLF_dead15J_3;
                  let x_6044 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6044 & (((((((((~(x_5983) | ~(x_5985)) | x_5988) | ~(x_5990)) | ~(x_5993)) | ~(x_5996)) | ~(x_5999)) | x_6002) & (((((((~(x_6004) | ~(x_6006)) | ~(x_6009)) | x_6012) | ~(x_6014)) | ~(x_6017)) | ~(x_6020)) | x_6023)) & ((((((x_6026 | ~(x_6027)) | x_6030) | ~(x_6032)) | ~(x_6035)) | ~(x_6038)) | x_6041)));
                  let x_6046 : i32 = GLF_dead15A_3;
                  let x_6047 : i32 = GLF_dead15B_3;
                  let x_6049 : i32 = GLF_dead15C_3;
                  let x_6051 : i32 = GLF_dead15D_3;
                  let x_6054 : i32 = GLF_dead15E_3;
                  let x_6056 : i32 = GLF_dead15G_3;
                  let x_6059 : i32 = GLF_dead15H_3;
                  let x_6062 : i32 = GLF_dead15I_3;
                  let x_6065 : i32 = GLF_dead15J_3;
                  let x_6067 : i32 = GLF_dead15B_3;
                  let x_6068 : i32 = GLF_dead15C_3;
                  let x_6070 : i32 = GLF_dead15D_3;
                  let x_6072 : i32 = GLF_dead15E_3;
                  let x_6075 : i32 = GLF_dead15F_3;
                  let x_6077 : i32 = GLF_dead15G_3;
                  let x_6080 : i32 = GLF_dead15H_3;
                  let x_6083 : i32 = GLF_dead15I_3;
                  let x_6086 : i32 = GLF_dead15J_3;
                  let x_6089 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6089 & (((((((((x_6046 | x_6047) | x_6049) | ~(x_6051)) | x_6054) | ~(x_6056)) | ~(x_6059)) | ~(x_6062)) | x_6065) & ((((((((x_6067 | x_6068) | x_6070) | ~(x_6072)) | x_6075) | ~(x_6077)) | ~(x_6080)) | ~(x_6083)) | x_6086)));
                  let x_6091 : i32 = GLF_dead15A_3;
                  let x_6092 : i32 = GLF_dead15C_3;
                  let x_6095 : i32 = GLF_dead15D_3;
                  let x_6097 : i32 = GLF_dead15E_3;
                  let x_6099 : i32 = GLF_dead15F_3;
                  let x_6101 : i32 = GLF_dead15G_3;
                  let x_6104 : i32 = GLF_dead15H_3;
                  let x_6107 : i32 = GLF_dead15I_3;
                  let x_6110 : i32 = GLF_dead15J_3;
                  let x_6112 : i32 = GLF_dead15B_3;
                  let x_6113 : i32 = GLF_dead15C_3;
                  let x_6116 : i32 = GLF_dead15D_3;
                  let x_6118 : i32 = GLF_dead15E_3;
                  let x_6120 : i32 = GLF_dead15F_3;
                  let x_6122 : i32 = GLF_dead15G_3;
                  let x_6125 : i32 = GLF_dead15H_3;
                  let x_6128 : i32 = GLF_dead15J_3;
                  let x_6131 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6131 & (((((((((x_6091 | ~(x_6092)) | x_6095) | x_6097) | x_6099) | ~(x_6101)) | ~(x_6104)) | ~(x_6107)) | x_6110) & (((((((x_6112 | ~(x_6113)) | x_6116) | x_6118) | x_6120) | ~(x_6122)) | ~(x_6125)) | x_6128)));
                  let x_6133 : i32 = GLF_dead15A_3;
                  let x_6135 : i32 = GLF_dead15B_3;
                  let x_6138 : i32 = GLF_dead15C_3;
                  let x_6140 : i32 = GLF_dead15D_3;
                  let x_6142 : i32 = GLF_dead15E_3;
                  let x_6144 : i32 = GLF_dead15F_3;
                  let x_6146 : i32 = GLF_dead15G_3;
                  let x_6149 : i32 = GLF_dead15H_3;
                  let x_6152 : i32 = GLF_dead15I_3;
                  let x_6155 : i32 = GLF_dead15J_3;
                  let x_6157 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6157 & (((((((((~(x_6133) | ~(x_6135)) | x_6138) | x_6140) | x_6142) | x_6144) | ~(x_6146)) | ~(x_6149)) | ~(x_6152)) | x_6155));
                  let x_6159 : i32 = GLF_dead15A_3;
                  let x_6160 : i32 = GLF_dead15B_3;
                  let x_6162 : i32 = GLF_dead15C_3;
                  let x_6165 : i32 = GLF_dead15D_3;
                  let x_6168 : i32 = GLF_dead15E_3;
                  let x_6170 : i32 = GLF_dead15G_3;
                  let x_6172 : i32 = GLF_dead15H_3;
                  let x_6175 : i32 = GLF_dead15I_3;
                  let x_6178 : i32 = GLF_dead15J_3;
                  let x_6180 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6180 & ((((((((x_6159 | x_6160) | ~(x_6162)) | ~(x_6165)) | x_6168) | x_6170) | ~(x_6172)) | ~(x_6175)) | x_6178));
                  let x_6182 : i32 = GLF_dead15B_3;
                  let x_6184 : i32 = GLF_dead15D_3;
                  let x_6186 : i32 = GLF_dead15E_3;
                  let x_6188 : i32 = GLF_dead15F_3;
                  let x_6191 : i32 = GLF_dead15G_3;
                  let x_6193 : i32 = GLF_dead15H_3;
                  let x_6196 : i32 = GLF_dead15I_3;
                  let x_6199 : i32 = GLF_dead15J_3;
                  let x_6201 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6201 & (((((((~(x_6182) | x_6184) | x_6186) | ~(x_6188)) | x_6191) | ~(x_6193)) | ~(x_6196)) | x_6199));
                  let x_6203 : i32 = GLF_dead15B_3;
                  let x_6205 : i32 = GLF_dead15C_3;
                  let x_6207 : i32 = GLF_dead15D_3;
                  let x_6210 : i32 = GLF_dead15E_3;
                  let x_6212 : i32 = GLF_dead15F_3;
                  let x_6214 : i32 = GLF_dead15G_3;
                  let x_6216 : i32 = GLF_dead15H_3;
                  let x_6219 : i32 = GLF_dead15I_3;
                  let x_6222 : i32 = GLF_dead15J_3;
                  let x_6224 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6224 & ((((((((~(x_6203) | x_6205) | ~(x_6207)) | x_6210) | x_6212) | x_6214) | ~(x_6216)) | ~(x_6219)) | x_6222));
                  let x_6226 : i32 = GLF_dead15A_3;
                  let x_6228 : i32 = GLF_dead15B_3;
                  let x_6231 : i32 = GLF_dead15C_3;
                  let x_6234 : i32 = GLF_dead15D_3;
                  let x_6236 : i32 = GLF_dead15E_3;
                  let x_6238 : i32 = GLF_dead15F_3;
                  let x_6240 : i32 = GLF_dead15G_3;
                  let x_6242 : i32 = GLF_dead15I_3;
                  let x_6245 : i32 = GLF_dead15J_3;
                  let x_6247 : i32 = GLF_dead15B_3;
                  let x_6249 : i32 = GLF_dead15C_3;
                  let x_6252 : i32 = GLF_dead15D_3;
                  let x_6254 : i32 = GLF_dead15E_3;
                  let x_6256 : i32 = GLF_dead15F_3;
                  let x_6259 : i32 = GLF_dead15G_3;
                  let x_6262 : i32 = GLF_dead15H_3;
                  let x_6264 : i32 = GLF_dead15I_3;
                  let x_6267 : i32 = GLF_dead15J_3;
                  let x_6270 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6270 & (((((((((~(x_6226) | ~(x_6228)) | ~(x_6231)) | x_6234) | x_6236) | x_6238) | x_6240) | ~(x_6242)) | x_6245) & ((((((((~(x_6247) | ~(x_6249)) | x_6252) | x_6254) | ~(x_6256)) | ~(x_6259)) | x_6262) | ~(x_6264)) | x_6267)));
                  let x_6272 : i32 = GLF_dead15A_3;
                  let x_6274 : i32 = GLF_dead15B_3;
                  let x_6276 : i32 = GLF_dead15C_3;
                  let x_6278 : i32 = GLF_dead15D_3;
                  let x_6280 : i32 = GLF_dead15E_3;
                  let x_6282 : i32 = GLF_dead15H_3;
                  let x_6284 : i32 = GLF_dead15I_3;
                  let x_6287 : i32 = GLF_dead15J_3;
                  let x_6289 : i32 = GLF_dead15B_3;
                  let x_6290 : i32 = GLF_dead15C_3;
                  let x_6292 : i32 = GLF_dead15D_3;
                  let x_6294 : i32 = GLF_dead15E_3;
                  let x_6296 : i32 = GLF_dead15F_3;
                  let x_6298 : i32 = GLF_dead15G_3;
                  let x_6301 : i32 = GLF_dead15H_3;
                  let x_6303 : i32 = GLF_dead15I_3;
                  let x_6306 : i32 = GLF_dead15J_3;
                  let x_6309 : i32 = GLF_dead15A_3;
                  let x_6310 : i32 = GLF_dead15B_3;
                  let x_6312 : i32 = GLF_dead15C_3;
                  let x_6314 : i32 = GLF_dead15D_3;
                  let x_6317 : i32 = GLF_dead15E_3;
                  let x_6319 : i32 = GLF_dead15F_3;
                  let x_6321 : i32 = GLF_dead15G_3;
                  let x_6323 : i32 = GLF_dead15H_3;
                  let x_6325 : i32 = GLF_dead15I_3;
                  let x_6328 : i32 = GLF_dead15J_3;
                  let x_6331 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6331 & (((((((((~(x_6272) | x_6274) | x_6276) | x_6278) | x_6280) | x_6282) | ~(x_6284)) | x_6287) & ((((((((x_6289 | x_6290) | x_6292) | x_6294) | x_6296) | ~(x_6298)) | x_6301) | ~(x_6303)) | x_6306)) & (((((((((x_6309 | x_6310) | x_6312) | ~(x_6314)) | x_6317) | x_6319) | x_6321) | x_6323) | ~(x_6325)) | x_6328)));
                  let x_6333 : i32 = GLF_dead15A_3;
                  let x_6334 : i32 = GLF_dead15B_3;
                  let x_6337 : i32 = GLF_dead15C_3;
                  let x_6339 : i32 = GLF_dead15D_3;
                  let x_6341 : i32 = GLF_dead15E_3;
                  let x_6343 : i32 = GLF_dead15F_3;
                  let x_6345 : i32 = GLF_dead15G_3;
                  let x_6347 : i32 = GLF_dead15H_3;
                  let x_6349 : i32 = GLF_dead15I_3;
                  let x_6352 : i32 = GLF_dead15J_3;
                  let x_6354 : i32 = GLF_dead15B_3;
                  let x_6356 : i32 = GLF_dead15D_3;
                  let x_6358 : i32 = GLF_dead15E_3;
                  let x_6360 : i32 = GLF_dead15F_3;
                  let x_6363 : i32 = GLF_dead15G_3;
                  let x_6366 : i32 = GLF_dead15H_3;
                  let x_6369 : i32 = GLF_dead15I_3;
                  let x_6371 : i32 = GLF_dead15J_3;
                  let x_6374 : i32 = GLF_dead15A_3;
                  let x_6376 : i32 = GLF_dead15B_3;
                  let x_6379 : i32 = GLF_dead15C_3;
                  let x_6381 : i32 = GLF_dead15E_3;
                  let x_6384 : i32 = GLF_dead15G_3;
                  let x_6387 : i32 = GLF_dead15H_3;
                  let x_6390 : i32 = GLF_dead15I_3;
                  let x_6392 : i32 = GLF_dead15J_3;
                  let x_6396 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6396 & (((((((((((x_6333 | ~(x_6334)) | x_6337) | x_6339) | x_6341) | x_6343) | x_6345) | x_6347) | ~(x_6349)) | x_6352) & (((((((~(x_6354) | x_6356) | x_6358) | ~(x_6360)) | ~(x_6363)) | ~(x_6366)) | x_6369) | x_6371)) & (((((((~(x_6374) | ~(x_6376)) | x_6379) | ~(x_6381)) | ~(x_6384)) | ~(x_6387)) | x_6390) | ~(x_6392))));
                  let x_6398 : i32 = GLF_dead15A_3;
                  let x_6400 : i32 = GLF_dead15D_3;
                  let x_6403 : i32 = GLF_dead15E_3;
                  let x_6406 : i32 = GLF_dead15F_3;
                  let x_6409 : i32 = GLF_dead15G_3;
                  let x_6411 : i32 = GLF_dead15H_3;
                  let x_6414 : i32 = GLF_dead15I_3;
                  let x_6416 : i32 = GLF_dead15J_3;
                  let x_6419 : i32 = GLF_dead15A_3;
                  let x_6420 : i32 = GLF_dead15B_3;
                  let x_6422 : i32 = GLF_dead15E_3;
                  let x_6425 : i32 = GLF_dead15F_3;
                  let x_6428 : i32 = GLF_dead15G_3;
                  let x_6431 : i32 = GLF_dead15H_3;
                  let x_6433 : i32 = GLF_dead15I_3;
                  let x_6435 : i32 = GLF_dead15J_3;
                  let x_6439 : i32 = GLF_dead15B_3;
                  let x_6441 : i32 = GLF_dead15C_3;
                  let x_6443 : i32 = GLF_dead15D_3;
                  let x_6445 : i32 = GLF_dead15E_3;
                  let x_6448 : i32 = GLF_dead15F_3;
                  let x_6450 : i32 = GLF_dead15G_3;
                  let x_6453 : i32 = GLF_dead15H_3;
                  let x_6455 : i32 = GLF_dead15I_3;
                  let x_6457 : i32 = GLF_dead15J_3;
                  let x_6461 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6461 & (((((((((~(x_6398) | ~(x_6400)) | ~(x_6403)) | ~(x_6406)) | x_6409) | ~(x_6411)) | x_6414) | ~(x_6416)) & (((((((x_6419 | x_6420) | ~(x_6422)) | ~(x_6425)) | ~(x_6428)) | x_6431) | x_6433) | ~(x_6435))) & ((((((((~(x_6439) | x_6441) | x_6443) | ~(x_6445)) | x_6448) | ~(x_6450)) | x_6453) | x_6455) | ~(x_6457))));
                  let x_6463 : i32 = GLF_dead15B_3;
                  let x_6465 : i32 = GLF_dead15C_3;
                  let x_6468 : i32 = GLF_dead15D_3;
                  let x_6471 : i32 = GLF_dead15E_3;
                  let x_6473 : i32 = GLF_dead15F_3;
                  let x_6475 : i32 = GLF_dead15G_3;
                  let x_6478 : i32 = GLF_dead15H_3;
                  let x_6480 : i32 = GLF_dead15I_3;
                  let x_6482 : i32 = GLF_dead15J_3;
                  let x_6485 : i32 = GLF_dead15A_3;
                  let x_6487 : i32 = GLF_dead15B_3;
                  let x_6490 : i32 = GLF_dead15C_3;
                  let x_6492 : i32 = GLF_dead15D_3;
                  let x_6495 : i32 = GLF_dead15G_3;
                  let x_6497 : i32 = GLF_dead15H_3;
                  let x_6499 : i32 = GLF_dead15I_3;
                  let x_6501 : i32 = GLF_dead15J_3;
                  let x_6505 : i32 = GLF_dead15C_3;
                  let x_6507 : i32 = GLF_dead15D_3;
                  let x_6509 : i32 = GLF_dead15E_3;
                  let x_6512 : i32 = GLF_dead15F_3;
                  let x_6515 : i32 = GLF_dead15G_3;
                  let x_6517 : i32 = GLF_dead15H_3;
                  let x_6519 : i32 = GLF_dead15I_3;
                  let x_6521 : i32 = GLF_dead15J_3;
                  let x_6525 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6525 & ((((((((((~(x_6463) | ~(x_6465)) | ~(x_6468)) | x_6471) | x_6473) | ~(x_6475)) | x_6478) | x_6480) | ~(x_6482)) & (((((((~(x_6485) | ~(x_6487)) | x_6490) | ~(x_6492)) | x_6495) | x_6497) | x_6499) | ~(x_6501))) & (((((((~(x_6505) | x_6507) | ~(x_6509)) | ~(x_6512)) | x_6515) | x_6517) | x_6519) | ~(x_6521))));
                  let x_6527 : i32 = GLF_dead15A_3;
                  let x_6529 : i32 = GLF_dead15B_3;
                  let x_6531 : i32 = GLF_dead15C_3;
                  let x_6533 : i32 = GLF_dead15E_3;
                  let x_6535 : i32 = GLF_dead15F_3;
                  let x_6537 : i32 = GLF_dead15G_3;
                  let x_6539 : i32 = GLF_dead15H_3;
                  let x_6542 : i32 = GLF_dead15I_3;
                  let x_6545 : i32 = GLF_dead15J_3;
                  let x_6547 : i32 = GLF_dead15A_3;
                  let x_6549 : i32 = GLF_dead15B_3;
                  let x_6551 : i32 = GLF_dead15D_3;
                  let x_6553 : i32 = GLF_dead15E_3;
                  let x_6555 : i32 = GLF_dead15G_3;
                  let x_6558 : i32 = GLF_dead15H_3;
                  let x_6560 : i32 = GLF_dead15I_3;
                  let x_6563 : i32 = GLF_dead15J_3;
                  let x_6566 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6566 & (((((((((~(x_6527) | x_6529) | x_6531) | x_6533) | x_6535) | x_6537) | ~(x_6539)) | ~(x_6542)) | x_6545) & (((((((~(x_6547) | x_6549) | x_6551) | x_6553) | ~(x_6555)) | x_6558) | ~(x_6560)) | x_6563)));
                  let x_6568 : i32 = GLF_dead15A_3;
                  let x_6569 : i32 = GLF_dead15B_3;
                  let x_6571 : i32 = GLF_dead15C_3;
                  let x_6574 : i32 = GLF_dead15D_3;
                  let x_6577 : i32 = GLF_dead15E_3;
                  let x_6580 : i32 = GLF_dead15F_3;
                  let x_6583 : i32 = GLF_dead15H_3;
                  let x_6586 : i32 = GLF_dead15I_3;
                  let x_6588 : i32 = GLF_dead15J_3;
                  let x_6591 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6591 & ((((((((x_6568 | x_6569) | ~(x_6571)) | ~(x_6574)) | ~(x_6577)) | ~(x_6580)) | ~(x_6583)) | x_6586) | ~(x_6588)));
                  let x_6593 : i32 = GLF_dead15A_3;
                  let x_6595 : i32 = GLF_dead15C_3;
                  let x_6598 : i32 = GLF_dead15E_3;
                  let x_6601 : i32 = GLF_dead15F_3;
                  let x_6604 : i32 = GLF_dead15G_3;
                  let x_6606 : i32 = GLF_dead15H_3;
                  let x_6609 : i32 = GLF_dead15I_3;
                  let x_6611 : i32 = GLF_dead15J_3;
                  let x_6614 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6614 & (((((((~(x_6593) | ~(x_6595)) | ~(x_6598)) | ~(x_6601)) | x_6604) | ~(x_6606)) | x_6609) | ~(x_6611)));
                  let x_6616 : i32 = GLF_dead15A_3;
                  let x_6617 : i32 = GLF_dead15B_3;
                  let x_6620 : i32 = GLF_dead15C_3;
                  let x_6623 : i32 = GLF_dead15D_3;
                  let x_6625 : i32 = GLF_dead15E_3;
                  let x_6628 : i32 = GLF_dead15F_3;
                  let x_6631 : i32 = GLF_dead15H_3;
                  let x_6634 : i32 = GLF_dead15I_3;
                  let x_6636 : i32 = GLF_dead15J_3;
                  let x_6639 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6639 & ((((((((x_6616 | ~(x_6617)) | ~(x_6620)) | x_6623) | ~(x_6625)) | ~(x_6628)) | ~(x_6631)) | x_6634) | ~(x_6636)));
                  let x_6641 : i32 = GLF_dead15B_3;
                  let x_6642 : i32 = GLF_dead15C_3;
                  let x_6645 : i32 = GLF_dead15D_3;
                  let x_6647 : i32 = GLF_dead15E_3;
                  let x_6650 : i32 = GLF_dead15F_3;
                  let x_6653 : i32 = GLF_dead15G_3;
                  let x_6656 : i32 = GLF_dead15H_3;
                  let x_6659 : i32 = GLF_dead15I_3;
                  let x_6661 : i32 = GLF_dead15J_3;
                  let x_6664 : i32 = GLF_dead15A_3;
                  let x_6666 : i32 = GLF_dead15B_3;
                  let x_6669 : i32 = GLF_dead15C_3;
                  let x_6672 : i32 = GLF_dead15D_3;
                  let x_6674 : i32 = GLF_dead15E_3;
                  let x_6677 : i32 = GLF_dead15F_3;
                  let x_6679 : i32 = GLF_dead15H_3;
                  let x_6682 : i32 = GLF_dead15I_3;
                  let x_6684 : i32 = GLF_dead15J_3;
                  let x_6688 : i32 = GLF_dead15B_3;
                  let x_6690 : i32 = GLF_dead15C_3;
                  let x_6693 : i32 = GLF_dead15D_3;
                  let x_6695 : i32 = GLF_dead15E_3;
                  let x_6698 : i32 = GLF_dead15F_3;
                  let x_6700 : i32 = GLF_dead15G_3;
                  let x_6703 : i32 = GLF_dead15H_3;
                  let x_6706 : i32 = GLF_dead15I_3;
                  let x_6708 : i32 = GLF_dead15J_3;
                  let x_6712 : i32 = GLF_dead15res_3;
                  GLF_dead15res_3 = (x_6712 & ((((((((((x_6641 | ~(x_6642)) | x_6645) | ~(x_6647)) | ~(x_6650)) | ~(x_6653)) | ~(x_6656)) | x_6659) | ~(x_6661)) & ((((((((~(x_6664) | ~(x_6666)) | ~(x_6669)) | x_6672) | ~(x_6674)) | x_6677) | ~(x_6679)) | x_6682) | ~(x_6684))) & ((((((((~(x_6688) | ~(x_6690)) | x_6693) | ~(x_6695)) | x_6698) | ~(x_6700)) | ~(x_6703)) | x_6706) | ~(x_6708))));
                  let x_6714 : i32 = GLF_dead15res_3;
                  let x_6716 : f32 = select(1.0, 0.0, (x_6714 == 0));
                  let x_6717 : vec3<f32> = vec3<f32>(x_6716, x_6716, x_6716);
                  GLF_dead15_GLF_color = vec4<f32>(x_6717.x, x_6717.y, x_6717.z, 1.0);
                }
              } else {
                let x_6724 : f32 = GLF_dead11gl_FragCoord.y;
                if ((i32(x_6724) < 270)) {
                  let x_6731 : i32 = GLF_dead11data[8];
                  donor_replacementGLF_dead0odd_number = (0.5 + (f32(x_6731) / 10.0));
                } else {
                  discard;
                }
                let x_6738 : vec4<f32> = x_GLF_color;
                x_GLF_outVarBackup_GLF_color_6 = x_6738;
                x_GLF_color = vec4<f32>(0.480325311, 0.564310312, 0.671429694, 0.004860868);
                let x_6745 : f32 = gl_FragCoord.y;
                if ((x_6745 >= 0.0)) {
                  let x_6749 : vec4<f32> = x_GLF_outVarBackup_GLF_color_6;
                  x_GLF_color = x_6749;
                }
              }
            }
          }
          let x_6751 : vec4<f32> = x_GLF_color;
          x_GLF_outVarBackup_GLF_color_7 = x_6751;
          if (false) {
            donor_replacementGLF_dead8matrix_number = 67464u;
            let x_6758 : vec4<f32> = x_GLF_color;
            x_GLF_outVarBackup_GLF_color_8 = x_6758;
            x_GLF_color = vec4<f32>(1.5, 2.0, 2.299999952, 27.13999939);
            if (true) {
              let x_6765 : vec4<f32> = x_GLF_outVarBackup_GLF_color_8;
              x_GLF_color = x_6765;
            }
            GLF_dead8r = 0;
            loop {
              let x_6772 : i32 = GLF_dead8r;
              let x_6773 : i32 = *(v);
              if ((x_6772 < x_6773)) {
              } else {
                break;
              }
              if (false) {
                let x_6778 : vec4<f32> = GLF_dead15gl_FragCoord;
                GLF_dead15icoord_4 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_6778.x, x_6778.y)));
                let x_6784 : i32 = GLF_dead15icoord_4.x;
                GLF_dead15A_4 = select(-1, 0, ((x_6784 & 1) != 0));
                let x_6790 : i32 = GLF_dead15icoord_4.x;
                GLF_dead15B_4 = select(-1, 0, ((x_6790 & 2) != 0));
                let x_6796 : i32 = GLF_dead15icoord_4.x;
                GLF_dead15C_4 = select(-1, 0, ((x_6796 & 4) != 0));
                let x_6802 : i32 = GLF_dead15icoord_4.x;
                GLF_dead15D_4 = select(-1, 0, ((x_6802 & 8) != 0));
                let x_6808 : i32 = GLF_dead15icoord_4.x;
                GLF_dead15E_4 = select(-1, 0, ((x_6808 & 16) != 0));
                let x_6814 : i32 = GLF_dead15icoord_4.y;
                GLF_dead15F_4 = select(-1, 0, ((x_6814 & 1) != 0));
                let x_6820 : i32 = GLF_dead15icoord_4.y;
                GLF_dead15G_4 = select(-1, 0, ((x_6820 & 2) != 0));
                let x_6826 : i32 = GLF_dead15icoord_4.y;
                GLF_dead15H_4 = select(-1, 0, ((x_6826 & 4) != 0));
                let x_6832 : i32 = GLF_dead15icoord_4.y;
                GLF_dead15I_4 = select(-1, 0, ((x_6832 & 8) != 0));
                let x_6838 : i32 = GLF_dead15icoord_4.y;
                GLF_dead15J_4 = select(-1, 0, ((x_6838 & 16) != 0));
                let x_6843 : i32 = GLF_dead15A_4;
                let x_6844 : i32 = GLF_dead15C_4;
                let x_6847 : i32 = GLF_dead15D_4;
                let x_6850 : i32 = GLF_dead15E_4;
                let x_6853 : i32 = GLF_dead15F_4;
                let x_6855 : i32 = GLF_dead15G_4;
                let x_6857 : i32 = GLF_dead15H_4;
                let x_6859 : i32 = GLF_dead15I_4;
                let x_6862 : i32 = GLF_dead15J_4;
                let x_6865 : i32 = GLF_dead15B_4;
                let x_6866 : i32 = GLF_dead15C_4;
                let x_6869 : i32 = GLF_dead15D_4;
                let x_6872 : i32 = GLF_dead15E_4;
                let x_6875 : i32 = GLF_dead15F_4;
                let x_6877 : i32 = GLF_dead15G_4;
                let x_6879 : i32 = GLF_dead15H_4;
                let x_6881 : i32 = GLF_dead15I_4;
                let x_6884 : i32 = GLF_dead15J_4;
                let x_6888 : i32 = GLF_dead15A_4;
                let x_6890 : i32 = GLF_dead15C_4;
                let x_6892 : i32 = GLF_dead15D_4;
                let x_6895 : i32 = GLF_dead15E_4;
                let x_6898 : i32 = GLF_dead15F_4;
                let x_6900 : i32 = GLF_dead15H_4;
                let x_6903 : i32 = GLF_dead15I_4;
                let x_6905 : i32 = GLF_dead15J_4;
                let x_6909 : i32 = GLF_dead15A_4;
                let x_6910 : i32 = GLF_dead15B_4;
                let x_6913 : i32 = GLF_dead15D_4;
                let x_6916 : i32 = GLF_dead15E_4;
                let x_6919 : i32 = GLF_dead15G_4;
                let x_6921 : i32 = GLF_dead15H_4;
                let x_6924 : i32 = GLF_dead15I_4;
                let x_6926 : i32 = GLF_dead15J_4;
                GLF_dead15res_4 = (((((((((((x_6843 | ~(x_6844)) | ~(x_6847)) | ~(x_6850)) | x_6853) | x_6855) | x_6857) | ~(x_6859)) | ~(x_6862)) & ((((((((x_6865 | ~(x_6866)) | ~(x_6869)) | ~(x_6872)) | x_6875) | x_6877) | x_6879) | ~(x_6881)) | ~(x_6884))) & (((((((~(x_6888) | x_6890) | ~(x_6892)) | ~(x_6895)) | x_6898) | ~(x_6900)) | x_6903) | ~(x_6905))) & (((((((x_6909 | ~(x_6910)) | ~(x_6913)) | ~(x_6916)) | x_6919) | ~(x_6921)) | x_6924) | ~(x_6926)));
                let x_6930 : i32 = GLF_dead15A_4;
                let x_6931 : i32 = GLF_dead15B_4;
                let x_6933 : i32 = GLF_dead15C_4;
                let x_6936 : i32 = GLF_dead15D_4;
                let x_6938 : i32 = GLF_dead15E_4;
                let x_6941 : i32 = GLF_dead15F_4;
                let x_6943 : i32 = GLF_dead15G_4;
                let x_6945 : i32 = GLF_dead15H_4;
                let x_6948 : i32 = GLF_dead15I_4;
                let x_6950 : i32 = GLF_dead15J_4;
                let x_6953 : i32 = GLF_dead15B_4;
                let x_6954 : i32 = GLF_dead15C_4;
                let x_6957 : i32 = GLF_dead15D_4;
                let x_6960 : i32 = GLF_dead15E_4;
                let x_6963 : i32 = GLF_dead15F_4;
                let x_6966 : i32 = GLF_dead15G_4;
                let x_6969 : i32 = GLF_dead15H_4;
                let x_6971 : i32 = GLF_dead15I_4;
                let x_6973 : i32 = GLF_dead15J_4;
                let x_6977 : i32 = GLF_dead15A_4;
                let x_6978 : i32 = GLF_dead15C_4;
                let x_6980 : i32 = GLF_dead15D_4;
                let x_6983 : i32 = GLF_dead15E_4;
                let x_6986 : i32 = GLF_dead15G_4;
                let x_6989 : i32 = GLF_dead15H_4;
                let x_6991 : i32 = GLF_dead15I_4;
                let x_6993 : i32 = GLF_dead15J_4;
                let x_6997 : i32 = GLF_dead15A_4;
                let x_6998 : i32 = GLF_dead15C_4;
                let x_7000 : i32 = GLF_dead15D_4;
                let x_7003 : i32 = GLF_dead15E_4;
                let x_7006 : i32 = GLF_dead15F_4;
                let x_7009 : i32 = GLF_dead15H_4;
                let x_7011 : i32 = GLF_dead15I_4;
                let x_7013 : i32 = GLF_dead15J_4;
                let x_7017 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7017 & ((((((((((((x_6930 | x_6931) | ~(x_6933)) | x_6936) | ~(x_6938)) | x_6941) | x_6943) | ~(x_6945)) | x_6948) | ~(x_6950)) & ((((((((x_6953 | ~(x_6954)) | ~(x_6957)) | ~(x_6960)) | ~(x_6963)) | ~(x_6966)) | x_6969) | x_6971) | ~(x_6973))) & (((((((x_6977 | x_6978) | ~(x_6980)) | ~(x_6983)) | ~(x_6986)) | x_6989) | x_6991) | ~(x_6993))) & (((((((x_6997 | x_6998) | ~(x_7000)) | ~(x_7003)) | ~(x_7006)) | x_7009) | x_7011) | ~(x_7013))));
                let x_7019 : i32 = GLF_dead15A_4;
                let x_7020 : i32 = GLF_dead15B_4;
                let x_7022 : i32 = GLF_dead15C_4;
                let x_7025 : i32 = GLF_dead15D_4;
                let x_7027 : i32 = GLF_dead15E_4;
                let x_7030 : i32 = GLF_dead15G_4;
                let x_7033 : i32 = GLF_dead15H_4;
                let x_7035 : i32 = GLF_dead15I_4;
                let x_7037 : i32 = GLF_dead15J_4;
                let x_7040 : i32 = GLF_dead15A_4;
                let x_7042 : i32 = GLF_dead15C_4;
                let x_7044 : i32 = GLF_dead15D_4;
                let x_7046 : i32 = GLF_dead15E_4;
                let x_7049 : i32 = GLF_dead15G_4;
                let x_7052 : i32 = GLF_dead15H_4;
                let x_7054 : i32 = GLF_dead15I_4;
                let x_7056 : i32 = GLF_dead15J_4;
                let x_7060 : i32 = GLF_dead15A_4;
                let x_7062 : i32 = GLF_dead15B_4;
                let x_7065 : i32 = GLF_dead15C_4;
                let x_7068 : i32 = GLF_dead15D_4;
                let x_7071 : i32 = GLF_dead15E_4;
                let x_7073 : i32 = GLF_dead15G_4;
                let x_7076 : i32 = GLF_dead15H_4;
                let x_7078 : i32 = GLF_dead15I_4;
                let x_7080 : i32 = GLF_dead15J_4;
                let x_7084 : i32 = GLF_dead15A_4;
                let x_7085 : i32 = GLF_dead15B_4;
                let x_7088 : i32 = GLF_dead15D_4;
                let x_7090 : i32 = GLF_dead15E_4;
                let x_7093 : i32 = GLF_dead15G_4;
                let x_7095 : i32 = GLF_dead15H_4;
                let x_7097 : i32 = GLF_dead15I_4;
                let x_7099 : i32 = GLF_dead15J_4;
                let x_7103 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7103 & (((((((((((x_7019 | x_7020) | ~(x_7022)) | x_7025) | ~(x_7027)) | ~(x_7030)) | x_7033) | x_7035) | ~(x_7037)) & (((((((~(x_7040) | x_7042) | x_7044) | ~(x_7046)) | ~(x_7049)) | x_7052) | x_7054) | ~(x_7056))) & ((((((((~(x_7060) | ~(x_7062)) | ~(x_7065)) | ~(x_7068)) | x_7071) | ~(x_7073)) | x_7076) | x_7078) | ~(x_7080))) & (((((((x_7084 | ~(x_7085)) | x_7088) | ~(x_7090)) | x_7093) | x_7095) | x_7097) | ~(x_7099))));
                let x_7105 : i32 = GLF_dead15A_4;
                let x_7107 : i32 = GLF_dead15B_4;
                let x_7109 : i32 = GLF_dead15C_4;
                let x_7112 : i32 = GLF_dead15D_4;
                let x_7114 : i32 = GLF_dead15E_4;
                let x_7117 : i32 = GLF_dead15G_4;
                let x_7119 : i32 = GLF_dead15H_4;
                let x_7121 : i32 = GLF_dead15I_4;
                let x_7123 : i32 = GLF_dead15J_4;
                let x_7126 : i32 = GLF_dead15A_4;
                let x_7127 : i32 = GLF_dead15B_4;
                let x_7130 : i32 = GLF_dead15D_4;
                let x_7133 : i32 = GLF_dead15E_4;
                let x_7135 : i32 = GLF_dead15G_4;
                let x_7137 : i32 = GLF_dead15H_4;
                let x_7139 : i32 = GLF_dead15I_4;
                let x_7141 : i32 = GLF_dead15J_4;
                let x_7145 : i32 = GLF_dead15A_4;
                let x_7146 : i32 = GLF_dead15C_4;
                let x_7149 : i32 = GLF_dead15D_4;
                let x_7152 : i32 = GLF_dead15E_4;
                let x_7154 : i32 = GLF_dead15F_4;
                let x_7156 : i32 = GLF_dead15G_4;
                let x_7158 : i32 = GLF_dead15H_4;
                let x_7160 : i32 = GLF_dead15I_4;
                let x_7162 : i32 = GLF_dead15J_4;
                let x_7166 : i32 = GLF_dead15A_4;
                let x_7168 : i32 = GLF_dead15C_4;
                let x_7170 : i32 = GLF_dead15D_4;
                let x_7173 : i32 = GLF_dead15E_4;
                let x_7175 : i32 = GLF_dead15F_4;
                let x_7177 : i32 = GLF_dead15G_4;
                let x_7179 : i32 = GLF_dead15H_4;
                let x_7181 : i32 = GLF_dead15I_4;
                let x_7183 : i32 = GLF_dead15J_4;
                let x_7187 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7187 & (((((((((((~(x_7105) | x_7107) | ~(x_7109)) | x_7112) | ~(x_7114)) | x_7117) | x_7119) | x_7121) | ~(x_7123)) & (((((((x_7126 | ~(x_7127)) | ~(x_7130)) | x_7133) | x_7135) | x_7137) | x_7139) | ~(x_7141))) & ((((((((x_7145 | ~(x_7146)) | ~(x_7149)) | x_7152) | x_7154) | x_7156) | x_7158) | x_7160) | ~(x_7162))) & ((((((((~(x_7166) | x_7168) | ~(x_7170)) | x_7173) | x_7175) | x_7177) | x_7179) | x_7181) | ~(x_7183))));
                let x_7189 : i32 = GLF_dead15A_4;
                let x_7191 : i32 = GLF_dead15B_4;
                let x_7194 : i32 = GLF_dead15C_4;
                let x_7196 : i32 = GLF_dead15D_4;
                let x_7199 : i32 = GLF_dead15E_4;
                let x_7202 : i32 = GLF_dead15F_4;
                let x_7205 : i32 = GLF_dead15G_4;
                let x_7208 : i32 = GLF_dead15H_4;
                let x_7211 : i32 = GLF_dead15I_4;
                let x_7214 : i32 = GLF_dead15J_4;
                let x_7216 : i32 = GLF_dead15A_4;
                let x_7217 : i32 = GLF_dead15B_4;
                let x_7220 : i32 = GLF_dead15C_4;
                let x_7222 : i32 = GLF_dead15D_4;
                let x_7224 : i32 = GLF_dead15E_4;
                let x_7227 : i32 = GLF_dead15F_4;
                let x_7230 : i32 = GLF_dead15G_4;
                let x_7233 : i32 = GLF_dead15H_4;
                let x_7236 : i32 = GLF_dead15I_4;
                let x_7239 : i32 = GLF_dead15J_4;
                let x_7242 : i32 = GLF_dead15A_4;
                let x_7244 : i32 = GLF_dead15B_4;
                let x_7246 : i32 = GLF_dead15C_4;
                let x_7248 : i32 = GLF_dead15D_4;
                let x_7250 : i32 = GLF_dead15E_4;
                let x_7253 : i32 = GLF_dead15G_4;
                let x_7256 : i32 = GLF_dead15H_4;
                let x_7259 : i32 = GLF_dead15I_4;
                let x_7262 : i32 = GLF_dead15J_4;
                let x_7265 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7265 & (((((((((((~(x_7189) | ~(x_7191)) | x_7194) | ~(x_7196)) | ~(x_7199)) | ~(x_7202)) | ~(x_7205)) | ~(x_7208)) | ~(x_7211)) | x_7214) & (((((((((x_7216 | ~(x_7217)) | x_7220) | x_7222) | ~(x_7224)) | ~(x_7227)) | ~(x_7230)) | ~(x_7233)) | ~(x_7236)) | x_7239)) & ((((((((~(x_7242) | x_7244) | x_7246) | x_7248) | ~(x_7250)) | ~(x_7253)) | ~(x_7256)) | ~(x_7259)) | x_7262)));
                let x_7267 : i32 = GLF_dead15C_4;
                let x_7269 : i32 = GLF_dead15D_4;
                let x_7272 : i32 = GLF_dead15E_4;
                let x_7274 : i32 = GLF_dead15F_4;
                let x_7277 : i32 = GLF_dead15G_4;
                let x_7280 : i32 = GLF_dead15H_4;
                let x_7283 : i32 = GLF_dead15I_4;
                let x_7286 : i32 = GLF_dead15J_4;
                let x_7288 : i32 = GLF_dead15A_4;
                let x_7290 : i32 = GLF_dead15C_4;
                let x_7293 : i32 = GLF_dead15D_4;
                let x_7296 : i32 = GLF_dead15E_4;
                let x_7298 : i32 = GLF_dead15G_4;
                let x_7301 : i32 = GLF_dead15H_4;
                let x_7304 : i32 = GLF_dead15I_4;
                let x_7307 : i32 = GLF_dead15J_4;
                let x_7310 : i32 = GLF_dead15B_4;
                let x_7311 : i32 = GLF_dead15D_4;
                let x_7314 : i32 = GLF_dead15E_4;
                let x_7316 : i32 = GLF_dead15F_4;
                let x_7319 : i32 = GLF_dead15H_4;
                let x_7322 : i32 = GLF_dead15I_4;
                let x_7325 : i32 = GLF_dead15J_4;
                let x_7328 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7328 & (((((((((~(x_7267) | ~(x_7269)) | x_7272) | ~(x_7274)) | ~(x_7277)) | ~(x_7280)) | ~(x_7283)) | x_7286) & (((((((~(x_7288) | ~(x_7290)) | ~(x_7293)) | x_7296) | ~(x_7298)) | ~(x_7301)) | ~(x_7304)) | x_7307)) & ((((((x_7310 | ~(x_7311)) | x_7314) | ~(x_7316)) | ~(x_7319)) | ~(x_7322)) | x_7325)));
                let x_7330 : i32 = GLF_dead15A_4;
                let x_7331 : i32 = GLF_dead15B_4;
                let x_7333 : i32 = GLF_dead15C_4;
                let x_7335 : i32 = GLF_dead15D_4;
                let x_7338 : i32 = GLF_dead15E_4;
                let x_7340 : i32 = GLF_dead15G_4;
                let x_7343 : i32 = GLF_dead15H_4;
                let x_7346 : i32 = GLF_dead15I_4;
                let x_7349 : i32 = GLF_dead15J_4;
                let x_7351 : i32 = GLF_dead15B_4;
                let x_7352 : i32 = GLF_dead15C_4;
                let x_7354 : i32 = GLF_dead15D_4;
                let x_7356 : i32 = GLF_dead15E_4;
                let x_7359 : i32 = GLF_dead15F_4;
                let x_7361 : i32 = GLF_dead15G_4;
                let x_7364 : i32 = GLF_dead15H_4;
                let x_7367 : i32 = GLF_dead15I_4;
                let x_7370 : i32 = GLF_dead15J_4;
                let x_7373 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7373 & (((((((((x_7330 | x_7331) | x_7333) | ~(x_7335)) | x_7338) | ~(x_7340)) | ~(x_7343)) | ~(x_7346)) | x_7349) & ((((((((x_7351 | x_7352) | x_7354) | ~(x_7356)) | x_7359) | ~(x_7361)) | ~(x_7364)) | ~(x_7367)) | x_7370)));
                let x_7375 : i32 = GLF_dead15A_4;
                let x_7376 : i32 = GLF_dead15C_4;
                let x_7379 : i32 = GLF_dead15D_4;
                let x_7381 : i32 = GLF_dead15E_4;
                let x_7383 : i32 = GLF_dead15F_4;
                let x_7385 : i32 = GLF_dead15G_4;
                let x_7388 : i32 = GLF_dead15H_4;
                let x_7391 : i32 = GLF_dead15I_4;
                let x_7394 : i32 = GLF_dead15J_4;
                let x_7396 : i32 = GLF_dead15B_4;
                let x_7397 : i32 = GLF_dead15C_4;
                let x_7400 : i32 = GLF_dead15D_4;
                let x_7402 : i32 = GLF_dead15E_4;
                let x_7404 : i32 = GLF_dead15F_4;
                let x_7406 : i32 = GLF_dead15G_4;
                let x_7409 : i32 = GLF_dead15H_4;
                let x_7412 : i32 = GLF_dead15J_4;
                let x_7415 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7415 & (((((((((x_7375 | ~(x_7376)) | x_7379) | x_7381) | x_7383) | ~(x_7385)) | ~(x_7388)) | ~(x_7391)) | x_7394) & (((((((x_7396 | ~(x_7397)) | x_7400) | x_7402) | x_7404) | ~(x_7406)) | ~(x_7409)) | x_7412)));
                let x_7417 : i32 = GLF_dead15A_4;
                let x_7419 : i32 = GLF_dead15B_4;
                let x_7422 : i32 = GLF_dead15C_4;
                let x_7424 : i32 = GLF_dead15D_4;
                let x_7426 : i32 = GLF_dead15E_4;
                let x_7428 : i32 = GLF_dead15F_4;
                let x_7430 : i32 = GLF_dead15G_4;
                let x_7433 : i32 = GLF_dead15H_4;
                let x_7436 : i32 = GLF_dead15I_4;
                let x_7439 : i32 = GLF_dead15J_4;
                let x_7441 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7441 & (((((((((~(x_7417) | ~(x_7419)) | x_7422) | x_7424) | x_7426) | x_7428) | ~(x_7430)) | ~(x_7433)) | ~(x_7436)) | x_7439));
                let x_7443 : i32 = GLF_dead15A_4;
                let x_7444 : i32 = GLF_dead15B_4;
                let x_7446 : i32 = GLF_dead15C_4;
                let x_7449 : i32 = GLF_dead15D_4;
                let x_7452 : i32 = GLF_dead15E_4;
                let x_7454 : i32 = GLF_dead15G_4;
                let x_7456 : i32 = GLF_dead15H_4;
                let x_7459 : i32 = GLF_dead15I_4;
                let x_7462 : i32 = GLF_dead15J_4;
                let x_7464 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7464 & ((((((((x_7443 | x_7444) | ~(x_7446)) | ~(x_7449)) | x_7452) | x_7454) | ~(x_7456)) | ~(x_7459)) | x_7462));
                let x_7466 : i32 = GLF_dead15B_4;
                let x_7468 : i32 = GLF_dead15D_4;
                let x_7470 : i32 = GLF_dead15E_4;
                let x_7472 : i32 = GLF_dead15F_4;
                let x_7475 : i32 = GLF_dead15G_4;
                let x_7477 : i32 = GLF_dead15H_4;
                let x_7480 : i32 = GLF_dead15I_4;
                let x_7483 : i32 = GLF_dead15J_4;
                let x_7485 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7485 & (((((((~(x_7466) | x_7468) | x_7470) | ~(x_7472)) | x_7475) | ~(x_7477)) | ~(x_7480)) | x_7483));
                let x_7487 : i32 = GLF_dead15B_4;
                let x_7489 : i32 = GLF_dead15C_4;
                let x_7491 : i32 = GLF_dead15D_4;
                let x_7494 : i32 = GLF_dead15E_4;
                let x_7496 : i32 = GLF_dead15F_4;
                let x_7498 : i32 = GLF_dead15G_4;
                let x_7500 : i32 = GLF_dead15H_4;
                let x_7503 : i32 = GLF_dead15I_4;
                let x_7506 : i32 = GLF_dead15J_4;
                let x_7508 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7508 & ((((((((~(x_7487) | x_7489) | ~(x_7491)) | x_7494) | x_7496) | x_7498) | ~(x_7500)) | ~(x_7503)) | x_7506));
                let x_7510 : i32 = GLF_dead15A_4;
                let x_7512 : i32 = GLF_dead15B_4;
                let x_7515 : i32 = GLF_dead15C_4;
                let x_7518 : i32 = GLF_dead15D_4;
                let x_7520 : i32 = GLF_dead15E_4;
                let x_7522 : i32 = GLF_dead15F_4;
                let x_7524 : i32 = GLF_dead15G_4;
                let x_7526 : i32 = GLF_dead15I_4;
                let x_7529 : i32 = GLF_dead15J_4;
                let x_7531 : i32 = GLF_dead15B_4;
                let x_7533 : i32 = GLF_dead15C_4;
                let x_7536 : i32 = GLF_dead15D_4;
                let x_7538 : i32 = GLF_dead15E_4;
                let x_7540 : i32 = GLF_dead15F_4;
                let x_7543 : i32 = GLF_dead15G_4;
                let x_7546 : i32 = GLF_dead15H_4;
                let x_7548 : i32 = GLF_dead15I_4;
                let x_7551 : i32 = GLF_dead15J_4;
                let x_7554 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7554 & (((((((((~(x_7510) | ~(x_7512)) | ~(x_7515)) | x_7518) | x_7520) | x_7522) | x_7524) | ~(x_7526)) | x_7529) & ((((((((~(x_7531) | ~(x_7533)) | x_7536) | x_7538) | ~(x_7540)) | ~(x_7543)) | x_7546) | ~(x_7548)) | x_7551)));
                let x_7556 : i32 = GLF_dead15A_4;
                let x_7558 : i32 = GLF_dead15B_4;
                let x_7560 : i32 = GLF_dead15C_4;
                let x_7562 : i32 = GLF_dead15D_4;
                let x_7564 : i32 = GLF_dead15E_4;
                let x_7566 : i32 = GLF_dead15H_4;
                let x_7568 : i32 = GLF_dead15I_4;
                let x_7571 : i32 = GLF_dead15J_4;
                let x_7573 : i32 = GLF_dead15B_4;
                let x_7574 : i32 = GLF_dead15C_4;
                let x_7576 : i32 = GLF_dead15D_4;
                let x_7578 : i32 = GLF_dead15E_4;
                let x_7580 : i32 = GLF_dead15F_4;
                let x_7582 : i32 = GLF_dead15G_4;
                let x_7585 : i32 = GLF_dead15H_4;
                let x_7587 : i32 = GLF_dead15I_4;
                let x_7590 : i32 = GLF_dead15J_4;
                let x_7593 : i32 = GLF_dead15A_4;
                let x_7594 : i32 = GLF_dead15B_4;
                let x_7596 : i32 = GLF_dead15C_4;
                let x_7598 : i32 = GLF_dead15D_4;
                let x_7601 : i32 = GLF_dead15E_4;
                let x_7603 : i32 = GLF_dead15F_4;
                let x_7605 : i32 = GLF_dead15G_4;
                let x_7607 : i32 = GLF_dead15H_4;
                let x_7609 : i32 = GLF_dead15I_4;
                let x_7612 : i32 = GLF_dead15J_4;
                let x_7615 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7615 & (((((((((~(x_7556) | x_7558) | x_7560) | x_7562) | x_7564) | x_7566) | ~(x_7568)) | x_7571) & ((((((((x_7573 | x_7574) | x_7576) | x_7578) | x_7580) | ~(x_7582)) | x_7585) | ~(x_7587)) | x_7590)) & (((((((((x_7593 | x_7594) | x_7596) | ~(x_7598)) | x_7601) | x_7603) | x_7605) | x_7607) | ~(x_7609)) | x_7612)));
                let x_7617 : i32 = GLF_dead15A_4;
                let x_7618 : i32 = GLF_dead15B_4;
                let x_7621 : i32 = GLF_dead15C_4;
                let x_7623 : i32 = GLF_dead15D_4;
                let x_7625 : i32 = GLF_dead15E_4;
                let x_7627 : i32 = GLF_dead15F_4;
                let x_7629 : i32 = GLF_dead15G_4;
                let x_7631 : i32 = GLF_dead15H_4;
                let x_7633 : i32 = GLF_dead15I_4;
                let x_7636 : i32 = GLF_dead15J_4;
                let x_7638 : i32 = GLF_dead15B_4;
                let x_7640 : i32 = GLF_dead15D_4;
                let x_7642 : i32 = GLF_dead15E_4;
                let x_7644 : i32 = GLF_dead15F_4;
                let x_7647 : i32 = GLF_dead15G_4;
                let x_7650 : i32 = GLF_dead15H_4;
                let x_7653 : i32 = GLF_dead15I_4;
                let x_7655 : i32 = GLF_dead15J_4;
                let x_7658 : i32 = GLF_dead15A_4;
                let x_7660 : i32 = GLF_dead15B_4;
                let x_7663 : i32 = GLF_dead15C_4;
                let x_7665 : i32 = GLF_dead15E_4;
                let x_7668 : i32 = GLF_dead15G_4;
                let x_7671 : i32 = GLF_dead15H_4;
                let x_7674 : i32 = GLF_dead15I_4;
                let x_7676 : i32 = GLF_dead15J_4;
                let x_7680 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7680 & (((((((((((x_7617 | ~(x_7618)) | x_7621) | x_7623) | x_7625) | x_7627) | x_7629) | x_7631) | ~(x_7633)) | x_7636) & (((((((~(x_7638) | x_7640) | x_7642) | ~(x_7644)) | ~(x_7647)) | ~(x_7650)) | x_7653) | x_7655)) & (((((((~(x_7658) | ~(x_7660)) | x_7663) | ~(x_7665)) | ~(x_7668)) | ~(x_7671)) | x_7674) | ~(x_7676))));
                let x_7682 : i32 = GLF_dead15A_4;
                let x_7684 : i32 = GLF_dead15D_4;
                let x_7687 : i32 = GLF_dead15E_4;
                let x_7690 : i32 = GLF_dead15F_4;
                let x_7693 : i32 = GLF_dead15G_4;
                let x_7695 : i32 = GLF_dead15H_4;
                let x_7698 : i32 = GLF_dead15I_4;
                let x_7700 : i32 = GLF_dead15J_4;
                let x_7703 : i32 = GLF_dead15A_4;
                let x_7704 : i32 = GLF_dead15B_4;
                let x_7706 : i32 = GLF_dead15E_4;
                let x_7709 : i32 = GLF_dead15F_4;
                let x_7712 : i32 = GLF_dead15G_4;
                let x_7715 : i32 = GLF_dead15H_4;
                let x_7717 : i32 = GLF_dead15I_4;
                let x_7719 : i32 = GLF_dead15J_4;
                let x_7723 : i32 = GLF_dead15B_4;
                let x_7725 : i32 = GLF_dead15C_4;
                let x_7727 : i32 = GLF_dead15D_4;
                let x_7729 : i32 = GLF_dead15E_4;
                let x_7732 : i32 = GLF_dead15F_4;
                let x_7734 : i32 = GLF_dead15G_4;
                let x_7737 : i32 = GLF_dead15H_4;
                let x_7739 : i32 = GLF_dead15I_4;
                let x_7741 : i32 = GLF_dead15J_4;
                let x_7745 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7745 & (((((((((~(x_7682) | ~(x_7684)) | ~(x_7687)) | ~(x_7690)) | x_7693) | ~(x_7695)) | x_7698) | ~(x_7700)) & (((((((x_7703 | x_7704) | ~(x_7706)) | ~(x_7709)) | ~(x_7712)) | x_7715) | x_7717) | ~(x_7719))) & ((((((((~(x_7723) | x_7725) | x_7727) | ~(x_7729)) | x_7732) | ~(x_7734)) | x_7737) | x_7739) | ~(x_7741))));
                let x_7747 : i32 = GLF_dead15B_4;
                let x_7749 : i32 = GLF_dead15C_4;
                let x_7752 : i32 = GLF_dead15D_4;
                let x_7755 : i32 = GLF_dead15E_4;
                let x_7757 : i32 = GLF_dead15F_4;
                let x_7759 : i32 = GLF_dead15G_4;
                let x_7762 : i32 = GLF_dead15H_4;
                let x_7764 : i32 = GLF_dead15I_4;
                let x_7766 : i32 = GLF_dead15J_4;
                let x_7769 : i32 = GLF_dead15A_4;
                let x_7771 : i32 = GLF_dead15B_4;
                let x_7774 : i32 = GLF_dead15C_4;
                let x_7776 : i32 = GLF_dead15D_4;
                let x_7779 : i32 = GLF_dead15G_4;
                let x_7781 : i32 = GLF_dead15H_4;
                let x_7783 : i32 = GLF_dead15I_4;
                let x_7785 : i32 = GLF_dead15J_4;
                let x_7789 : i32 = GLF_dead15C_4;
                let x_7791 : i32 = GLF_dead15D_4;
                let x_7793 : i32 = GLF_dead15E_4;
                let x_7796 : i32 = GLF_dead15F_4;
                let x_7799 : i32 = GLF_dead15G_4;
                let x_7801 : i32 = GLF_dead15H_4;
                let x_7803 : i32 = GLF_dead15I_4;
                let x_7805 : i32 = GLF_dead15J_4;
                let x_7809 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7809 & ((((((((((~(x_7747) | ~(x_7749)) | ~(x_7752)) | x_7755) | x_7757) | ~(x_7759)) | x_7762) | x_7764) | ~(x_7766)) & (((((((~(x_7769) | ~(x_7771)) | x_7774) | ~(x_7776)) | x_7779) | x_7781) | x_7783) | ~(x_7785))) & (((((((~(x_7789) | x_7791) | ~(x_7793)) | ~(x_7796)) | x_7799) | x_7801) | x_7803) | ~(x_7805))));
                let x_7811 : i32 = GLF_dead15A_4;
                let x_7813 : i32 = GLF_dead15B_4;
                let x_7815 : i32 = GLF_dead15C_4;
                let x_7817 : i32 = GLF_dead15E_4;
                let x_7819 : i32 = GLF_dead15F_4;
                let x_7821 : i32 = GLF_dead15G_4;
                let x_7823 : i32 = GLF_dead15H_4;
                let x_7826 : i32 = GLF_dead15I_4;
                let x_7829 : i32 = GLF_dead15J_4;
                let x_7831 : i32 = GLF_dead15A_4;
                let x_7833 : i32 = GLF_dead15B_4;
                let x_7835 : i32 = GLF_dead15D_4;
                let x_7837 : i32 = GLF_dead15E_4;
                let x_7839 : i32 = GLF_dead15G_4;
                let x_7842 : i32 = GLF_dead15H_4;
                let x_7844 : i32 = GLF_dead15I_4;
                let x_7847 : i32 = GLF_dead15J_4;
                let x_7850 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7850 & (((((((((~(x_7811) | x_7813) | x_7815) | x_7817) | x_7819) | x_7821) | ~(x_7823)) | ~(x_7826)) | x_7829) & (((((((~(x_7831) | x_7833) | x_7835) | x_7837) | ~(x_7839)) | x_7842) | ~(x_7844)) | x_7847)));
                let x_7852 : i32 = GLF_dead15A_4;
                let x_7853 : i32 = GLF_dead15B_4;
                let x_7855 : i32 = GLF_dead15C_4;
                let x_7858 : i32 = GLF_dead15D_4;
                let x_7861 : i32 = GLF_dead15E_4;
                let x_7864 : i32 = GLF_dead15F_4;
                let x_7867 : i32 = GLF_dead15H_4;
                let x_7870 : i32 = GLF_dead15I_4;
                let x_7872 : i32 = GLF_dead15J_4;
                let x_7875 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7875 & ((((((((x_7852 | x_7853) | ~(x_7855)) | ~(x_7858)) | ~(x_7861)) | ~(x_7864)) | ~(x_7867)) | x_7870) | ~(x_7872)));
                let x_7877 : i32 = GLF_dead15A_4;
                let x_7879 : i32 = GLF_dead15C_4;
                let x_7882 : i32 = GLF_dead15E_4;
                let x_7885 : i32 = GLF_dead15F_4;
                let x_7888 : i32 = GLF_dead15G_4;
                let x_7890 : i32 = GLF_dead15H_4;
                let x_7893 : i32 = GLF_dead15I_4;
                let x_7895 : i32 = GLF_dead15J_4;
                let x_7898 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7898 & (((((((~(x_7877) | ~(x_7879)) | ~(x_7882)) | ~(x_7885)) | x_7888) | ~(x_7890)) | x_7893) | ~(x_7895)));
                let x_7900 : i32 = GLF_dead15A_4;
                let x_7901 : i32 = GLF_dead15B_4;
                let x_7904 : i32 = GLF_dead15C_4;
                let x_7907 : i32 = GLF_dead15D_4;
                let x_7909 : i32 = GLF_dead15E_4;
                let x_7912 : i32 = GLF_dead15F_4;
                let x_7915 : i32 = GLF_dead15H_4;
                let x_7918 : i32 = GLF_dead15I_4;
                let x_7920 : i32 = GLF_dead15J_4;
                let x_7923 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7923 & ((((((((x_7900 | ~(x_7901)) | ~(x_7904)) | x_7907) | ~(x_7909)) | ~(x_7912)) | ~(x_7915)) | x_7918) | ~(x_7920)));
                let x_7925 : i32 = GLF_dead15B_4;
                let x_7926 : i32 = GLF_dead15C_4;
                let x_7929 : i32 = GLF_dead15D_4;
                let x_7931 : i32 = GLF_dead15E_4;
                let x_7934 : i32 = GLF_dead15F_4;
                let x_7937 : i32 = GLF_dead15G_4;
                let x_7940 : i32 = GLF_dead15H_4;
                let x_7943 : i32 = GLF_dead15I_4;
                let x_7945 : i32 = GLF_dead15J_4;
                let x_7948 : i32 = GLF_dead15A_4;
                let x_7950 : i32 = GLF_dead15B_4;
                let x_7953 : i32 = GLF_dead15C_4;
                let x_7956 : i32 = GLF_dead15D_4;
                let x_7958 : i32 = GLF_dead15E_4;
                let x_7961 : i32 = GLF_dead15F_4;
                let x_7963 : i32 = GLF_dead15H_4;
                let x_7966 : i32 = GLF_dead15I_4;
                let x_7968 : i32 = GLF_dead15J_4;
                let x_7972 : i32 = GLF_dead15B_4;
                let x_7974 : i32 = GLF_dead15C_4;
                let x_7977 : i32 = GLF_dead15D_4;
                let x_7979 : i32 = GLF_dead15E_4;
                let x_7982 : i32 = GLF_dead15F_4;
                let x_7984 : i32 = GLF_dead15G_4;
                let x_7987 : i32 = GLF_dead15H_4;
                let x_7990 : i32 = GLF_dead15I_4;
                let x_7992 : i32 = GLF_dead15J_4;
                let x_7996 : i32 = GLF_dead15res_4;
                GLF_dead15res_4 = (x_7996 & ((((((((((x_7925 | ~(x_7926)) | x_7929) | ~(x_7931)) | ~(x_7934)) | ~(x_7937)) | ~(x_7940)) | x_7943) | ~(x_7945)) & ((((((((~(x_7948) | ~(x_7950)) | ~(x_7953)) | x_7956) | ~(x_7958)) | x_7961) | ~(x_7963)) | x_7966) | ~(x_7968))) & ((((((((~(x_7972) | ~(x_7974)) | x_7977) | ~(x_7979)) | x_7982) | ~(x_7984)) | ~(x_7987)) | x_7990) | ~(x_7992))));
                let x_7998 : i32 = GLF_dead15res_4;
                let x_8000 : f32 = select(1.0, 0.0, (x_7998 == 0));
                let x_8001 : vec3<f32> = vec3<f32>(x_8000, x_8000, x_8000);
                GLF_dead15_GLF_color = vec4<f32>(x_8001.x, x_8001.y, x_8001.z, 1.0);
              }
              let x_8007 : vec4<f32> = x_GLF_color;
              x_GLF_outVarBackup_GLF_color_9 = x_8007;
              x_GLF_color = vec4<f32>(2.299999952, -4.800000191, 5444.688964844, -4.099999905);
              let x_8013 : f32 = gl_FragCoord.y;
              if ((x_8013 >= 0.0)) {
                let x_8017 : vec4<f32> = x_GLF_outVarBackup_GLF_color_9;
                x_GLF_color = x_8017;
              }
              let x_8018 : u32 = donor_replacementGLF_dead8matrix_number;
              switch(x_8018) {
                case 8u: {
                  let x_8307 : i32 = count;
                  let x_8309 : i32 = GLF_dead8r;
                  let x_8312 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m44[clamp(x_8307, 0, 3)][clamp(x_8309, 0, 3)] = x_8312;
                  if (false) {
                    break;
                  }
                }
                case 7u: {
                  let x_8289 : i32 = count;
                  let x_8291 : i32 = GLF_dead8r;
                  let x_8294 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m43[clamp(x_8289, 0, 3)][clamp(x_8291, 0, 2)] = x_8294;
                  let x_8297 : vec4<f32> = x_GLF_color;
                  x_GLF_outVarBackup_GLF_color_12 = x_8297;
                  x_GLF_color = vec4<f32>(-522.257995605, -7.5, -78.900001526, 5137.658203125);
                  if (true) {
                    let x_8305 : vec4<f32> = x_GLF_outVarBackup_GLF_color_12;
                    x_GLF_color = x_8305;
                  }
                }
                case 6u: {
                  let x_8087 : f32 = gl_FragCoord.x;
                  if ((x_8087 < 0.0)) {
                    let x_8093 : f32 = x_655.GLF_dead8one;
                    let x_8094 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8096 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8097 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8100 : f32 = x_655.GLF_dead8one;
                    let x_8101 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8104 : f32 = x_655.GLF_dead8one;
                    let x_8106 : f32 = x_655.GLF_dead8one;
                    let x_8108 : f32 = x_655.GLF_dead8one;
                    let x_8110 : f32 = x_655.GLF_dead8one;
                    let x_8113 : f32 = x_655.GLF_dead8one;
                    let x_8114 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8115 : vec4<f32> = GLF_dead8_GLF_color;
                    let x_8122 : f32 = x_655.GLF_dead8one;
                    let x_8125 : f32 = x_655.GLF_dead8one;
                    let x_8126 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8128 : f32 = x_655.GLF_dead8one;
                    let x_8129 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8132 : f32 = x_655.GLF_dead8one;
                    let x_8133 : vec4<f32> = GLF_dead8_GLF_color;
                    let x_8136 : f32 = x_655.GLF_dead8one;
                    let x_8137 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8138 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8140 : f32 = x_655.GLF_dead8one;
                    let x_8142 : f32 = x_655.GLF_dead8one;
                    let x_8144 : f32 = x_655.GLF_dead8one;
                    let x_8146 : f32 = x_655.GLF_dead8one;
                    let x_8148 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8149 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8151 : f32 = x_655.GLF_dead8one;
                    let x_8152 : vec4<f32> = GLF_dead8_GLF_color;
                    let x_8154 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8156 : f32 = x_655.GLF_dead8one;
                    let x_8157 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8160 : f32 = x_655.GLF_dead8one;
                    let x_8161 : f32 = donor_replacementGLF_dead0odd_number;
                    let x_8163 : f32 = x_655.GLF_dead8one;
                    donor_replacementGLF_dead12A = array<f32, 50u>(x_8093, x_8094, 8.800000191, -6.099999905, x_8096, x_8097, 4.699999809, x_8100, fwidthFine(x_8101), x_8104, x_8106, x_8108, -2.599999905, x_8110, 55.790000916, x_8113, x_8114, distance(x_8115, vec4<f32>(5.0, 9.300000191, 9.0, 6.699999809)), round(x_8122), x_8125, x_8126, x_8128, fwidthFine(x_8129), 8.800000191, x_8132, -6.099999905, distance(x_8133, vec4<f32>(5.0, 9.300000191, 9.0, 6.699999809)), x_8136, x_8137, x_8138, 55.790000916, x_8140, x_8142, x_8144, 4.699999809, -2.599999905, round(x_8146), x_8148, x_8149, x_8151, distance(x_8152, vec4<f32>(5.0, 9.300000191, 9.0, 6.699999809)), x_8154, x_8156, fwidthFine(x_8157), -6.099999905, x_8160, 55.790000916, -2.599999905, x_8161, x_8163);
                    let x_8165 : i32 = count;
                    let x_8166 : i32 = clamp(x_8165, 0, 49);
                    let x_8167 : i32 = count;
                    let x_8171 : f32 = donor_replacementGLF_dead12A[clamp((x_8167 - 1), 0, 49)];
                    let x_8173 : f32 = donor_replacementGLF_dead12A[x_8166];
                    donor_replacementGLF_dead12A[x_8166] = (x_8173 + x_8171);
                  }
                  let x_8177 : vec4<f32> = x_GLF_color;
                  x_GLF_outVarBackup_GLF_color_11 = x_8177;
                  x_GLF_color = vec4<f32>(-9.600000381, 362.744995117, -30.049999237, 89.209999084);
                  let x_8184 : f32 = gl_FragCoord.x;
                  if ((x_8184 >= 0.0)) {
                    let x_8188 : vec4<f32> = x_GLF_outVarBackup_GLF_color_11;
                    x_GLF_color = x_8188;
                    let x_8190 : f32 = gl_FragCoord.y;
                    if ((x_8190 < 0.0)) {
                      let x_8197 : f32 = x_655.GLF_dead8one;
                      let x_8199 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8200 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8202 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8205 : f32 = x_655.GLF_dead8one;
                      let x_8209 : f32 = x_655.GLF_dead8one;
                      let x_8210 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8211 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8212 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8213 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8214 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8216 : f32 = x_655.GLF_dead8one;
                      let x_8217 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8220 : f32 = x_655.GLF_dead8one;
                      let x_8221 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8223 : f32 = x_655.GLF_dead8one;
                      let x_8225 : f32 = x_655.GLF_dead8one;
                      let x_8226 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8227 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8229 : f32 = x_655.GLF_dead8one;
                      let x_8230 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8232 : f32 = x_655.GLF_dead8one;
                      let x_8233 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8234 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8236 : f32 = x_655.GLF_dead8one;
                      let x_8238 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8240 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8241 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8243 : f32 = x_655.GLF_dead8one;
                      let x_8245 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8246 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8247 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8248 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8249 : f32 = donor_replacementGLF_dead0odd_number;
                      let x_8251 : f32 = x_655.GLF_dead8one;
                      donor_replacementGLF_dead12A_1 = array<f32, 50u>(-5.199999809, dpdxCoarse(x_8197), x_8199, x_8200, -33.569999695, x_8202, 2.258317947, x_8205, -2.700000048, 8.199999809, x_8209, x_8210, x_8211, x_8212, x_8213, x_8214, 0.5, x_8216, acos(x_8217), x_8220, x_8221, x_8223, -5.199999809, x_8225, x_8226, x_8227, -33.569999695, 0.5, 8.199999809, x_8229, x_8230, x_8232, 2.258317947, -2.700000048, x_8233, x_8234, dpdxCoarse(x_8236), acos(x_8238), x_8240, x_8241, dpdxCoarse(x_8243), x_8245, 2.258317947, x_8246, x_8247, x_8248, -5.199999809, x_8249, -2.700000048, x_8251);
                      let x_8254 : vec2<f32> = GLF_dead8gl_PointCoord;
                      donor_replacementGLF_dead12c = tanh(tanh(x_8254));
                      donor_replacementGLF_dead12col = vec3<f32>(76.449996948, -964.934020996, -5.900000095);
                      let x_8262 : f32 = donor_replacementGLF_dead12c.y;
                      let x_8267 : f32 = x_8265.GLF_dead12resolution.x;
                      let x_8269 : f32 = donor_replacementGLF_dead12A_1[39];
                      let x_8271 : f32 = x_8265.GLF_dead12resolution.x;
                      donor_replacementGLF_dead12col = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_8262, x_8262, x_8262) + vec3<f32>(x_8267, ((x_8269 / x_8271) + 50.0), 22.0))));
                    }
                  }
                  let x_8281 : i32 = count;
                  let x_8283 : i32 = GLF_dead8r;
                  let x_8286 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m42[clamp(x_8281, 0, 3)][clamp(x_8283, 0, 1)] = x_8286;
                }
                case 5u: {
                  let x_8078 : i32 = count;
                  let x_8080 : i32 = GLF_dead8r;
                  let x_8083 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m34[clamp(x_8078, 0, 2)][clamp(x_8080, 0, 3)] = x_8083;
                }
                case 4u: {
                  let x_8070 : i32 = count;
                  let x_8072 : i32 = GLF_dead8r;
                  let x_8075 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m33[clamp(x_8070, 0, 2)][clamp(x_8072, 0, 2)] = x_8075;
                }
                case 3u: {
                  let x_8062 : i32 = count;
                  let x_8064 : i32 = GLF_dead8r;
                  let x_8067 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m32[clamp(x_8062, 0, 2)][clamp(x_8064, 0, 1)] = x_8067;
                }
                case 2u: {
                  let x_8054 : i32 = count;
                  let x_8056 : i32 = GLF_dead8r;
                  let x_8059 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m24[clamp(x_8054, 0, 1)][clamp(x_8056, 0, 3)] = x_8059;
                }
                case 1u: {
                  let x_8038 : vec4<f32> = x_GLF_color;
                  x_GLF_outVarBackup_GLF_color_10 = x_8038;
                  x_GLF_color = vec4<f32>(7230.742675781, 4.5, 5540.299316406, -2.299999952);
                  if (true) {
                    let x_8045 : vec4<f32> = x_GLF_outVarBackup_GLF_color_10;
                    x_GLF_color = x_8045;
                  }
                  let x_8046 : i32 = count;
                  let x_8048 : i32 = GLF_dead8r;
                  let x_8051 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m23[clamp(x_8046, 0, 1)][clamp(x_8048, 0, 2)] = x_8051;
                }
                case 0u: {
                  let x_8029 : i32 = count;
                  let x_8031 : i32 = GLF_dead8r;
                  let x_8034 : f32 = x_655.GLF_dead8one;
                  GLF_dead8m22[clamp(x_8029, 0, 1)][clamp(x_8031, 0, 1)] = x_8034;
                }
                default: {
                }
              }

              continuing {
                let x_8319 : i32 = GLF_dead8r;
                GLF_dead8r = (x_8319 + 1);
              }
            }
          }
          x_GLF_color = vec4<f32>(-3844.772460938, 1.299999952, 9.199999809, -8.399999619);
          if (true) {
            let x_8327 : vec4<f32> = x_GLF_outVarBackup_GLF_color_7;
            x_GLF_color = x_8327;
          }
          if (false) {
            let x_8332 : vec4<f32> = GLF_dead3_GLF_color;
            let x_8333 : vec4<f32> = GLF_dead8_GLF_color;
            let x_8341 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8343 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8347 : f32 = x_655.GLF_dead8one;
            let x_8350 : f32 = x_655.GLF_dead8one;
            let x_8353 : f32 = GLF_dead5gl_FragCoord.y;
            let x_8357 : f32 = x_655.GLF_dead8one;
            let x_8361 : f32 = x_655.GLF_dead8one;
            let x_8363 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8365 : f32 = x_655.GLF_dead8one;
            let x_8366 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8368 : f32 = x_655.GLF_dead8one;
            let x_8369 : vec4<f32> = GLF_dead3_GLF_color;
            let x_8370 : vec4<f32> = GLF_dead8_GLF_color;
            let x_8374 : f32 = x_655.GLF_dead8one;
            let x_8376 : f32 = x_655.GLF_dead8one;
            let x_8379 : f32 = x_655.GLF_dead8one;
            let x_8380 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8382 : f32 = x_655.GLF_dead8one;
            let x_8383 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8385 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8387 : f32 = x_655.GLF_dead8one;
            let x_8389 : f32 = GLF_dead5gl_FragCoord.y;
            let x_8391 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8393 : f32 = x_655.GLF_dead8one;
            let x_8395 : f32 = x_655.GLF_dead8one;
            let x_8397 : f32 = x_655.GLF_dead8one;
            let x_8398 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8400 : f32 = GLF_dead5gl_FragCoord.y;
            let x_8402 : f32 = x_655.GLF_dead8one;
            let x_8404 : f32 = x_655.GLF_dead8one;
            let x_8407 : f32 = x_655.GLF_dead8one;
            let x_8408 : vec4<f32> = GLF_dead3_GLF_color;
            let x_8409 : vec4<f32> = GLF_dead8_GLF_color;
            donor_replacementGLF_dead12A_2 = array<f32, 50u>(-1775.395507812, dot(max(x_8332, x_8333), vec4<f32>(1.100000024, 314.585998535, -58.299999237, -3.599999905)), (x_8341 * 57.295780182), x_8343, 137.67199707, 65.120002747, x_8347, -8.5, x_8350, 4890.063476562, x_8353, 834.661987305, 1.318116069, x_8357, bitcast<f32>(68148u), floor(x_8361), x_8363, x_8365, x_8366, x_8368, dot(max(x_8369, x_8370), vec4<f32>(1.100000024, 314.585998535, -58.299999237, -3.599999905)), x_8374, 4890.063476562, floor(x_8376), x_8379, 65.120002747, x_8380, x_8382, (x_8383 * 57.295780182), 834.661987305, x_8385, x_8387, x_8389, bitcast<f32>(68148u), -1775.395507812, -8.5, x_8391, 137.67199707, 1.318116069, x_8393, x_8395, x_8397, -1775.395507812, x_8398, x_8400, x_8402, floor(x_8404), 65.120002747, x_8407, dot(max(x_8408, x_8409), vec4<f32>(1.100000024, 314.585998535, -58.299999237, -3.599999905)));
            let x_8413 : i32 = *(v);
            let x_8416 : i32 = *(v);
            if (((4 * (x_8413 / 4)) == x_8416)) {
              let x_8420 : i32 = *(v);
              let x_8423 : i32 = *(v);
              donor_replacementGLF_dead12A_2[clamp((x_8420 / 4), 0, 49)] = f32(x_8423);
            }
          }
          let x_8428 : i32 = count;
          let x_8430 : i32 = count;
          donor_replacementGLF_dead6currentNode = GLF_dead6BST(x_8428, 923, -(x_8430));
          if (false) {
            let x_8436 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8438 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8439 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8440 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8441 : f32 = donor_replacementGLF_dead0odd_number;
            let x_8445 : f32 = donor_replacementGLF_dead0odd_number;
            donor_replacementGLF_dead8sums_1 = array<f32, 9u>(x_8436, 71.870002747, x_8438, 0.0, x_8439, x_8440, x_8441, ldexp(51.720001221, 69740), x_8445);
            GLF_dead8c = 0;
            loop {
              let x_8453 : i32 = GLF_dead8c;
              let x_8454 : i32 = *(v);
              if ((x_8453 < x_8454)) {
              } else {
                break;
              }
              GLF_dead8r_1 = 0;
              loop {
                let x_8462 : i32 = GLF_dead8r_1;
                let x_8463 : i32 = *(v);
                if ((x_8462 < x_8463)) {
                } else {
                  break;
                }
                let x_8465 : i32 = count;
                switch(x_8465) {
                  case 8: {
                    let x_9839 : i32 = count;
                    let x_9840 : i32 = clamp(x_9839, 0, 8);
                    let x_9841 : i32 = GLF_dead8c;
                    let x_9843 : i32 = GLF_dead8r_1;
                    let x_9846 : f32 = GLF_dead8m44[clamp(x_9841, 0, 3)][clamp(x_9843, 0, 3)];
                    let x_9848 : f32 = donor_replacementGLF_dead8sums_1[x_9840];
                    donor_replacementGLF_dead8sums_1[x_9840] = (x_9848 + x_9846);
                  }
                  case 7: {
                    let x_9826 : i32 = count;
                    let x_9827 : i32 = clamp(x_9826, 0, 8);
                    let x_9828 : i32 = GLF_dead8c;
                    let x_9830 : i32 = GLF_dead8r_1;
                    let x_9833 : f32 = GLF_dead8m43[clamp(x_9828, 0, 3)][clamp(x_9830, 0, 2)];
                    let x_9835 : f32 = donor_replacementGLF_dead8sums_1[x_9827];
                    donor_replacementGLF_dead8sums_1[x_9827] = (x_9835 + x_9833);
                  }
                  case 6: {
                    let x_9813 : i32 = count;
                    let x_9814 : i32 = clamp(x_9813, 0, 8);
                    let x_9815 : i32 = GLF_dead8c;
                    let x_9817 : i32 = GLF_dead8r_1;
                    let x_9820 : f32 = GLF_dead8m42[clamp(x_9815, 0, 3)][clamp(x_9817, 0, 1)];
                    let x_9822 : f32 = donor_replacementGLF_dead8sums_1[x_9814];
                    donor_replacementGLF_dead8sums_1[x_9814] = (x_9822 + x_9820);
                  }
                  case 5: {
                    let x_8564 : i32 = count;
                    let x_8565 : i32 = clamp(x_8564, 0, 8);
                    let x_8566 : i32 = GLF_dead8c;
                    let x_8568 : i32 = GLF_dead8r_1;
                    let x_8571 : f32 = GLF_dead8m34[clamp(x_8566, 0, 2)][clamp(x_8568, 0, 3)];
                    let x_8573 : f32 = donor_replacementGLF_dead8sums_1[x_8565];
                    donor_replacementGLF_dead8sums_1[x_8565] = (x_8573 + x_8571);
                  }
                  case 4: {
                    let x_8551 : i32 = count;
                    let x_8552 : i32 = clamp(x_8551, 0, 8);
                    let x_8553 : i32 = GLF_dead8c;
                    let x_8555 : i32 = GLF_dead8r_1;
                    let x_8558 : f32 = GLF_dead8m33[clamp(x_8553, 0, 2)][clamp(x_8555, 0, 2)];
                    let x_8560 : f32 = donor_replacementGLF_dead8sums_1[x_8552];
                    donor_replacementGLF_dead8sums_1[x_8552] = (x_8560 + x_8558);
                  }
                  case 3: {
                    let x_8538 : i32 = count;
                    let x_8539 : i32 = clamp(x_8538, 0, 8);
                    let x_8540 : i32 = GLF_dead8c;
                    let x_8542 : i32 = GLF_dead8r_1;
                    let x_8545 : f32 = GLF_dead8m32[clamp(x_8540, 0, 2)][clamp(x_8542, 0, 1)];
                    let x_8547 : f32 = donor_replacementGLF_dead8sums_1[x_8539];
                    donor_replacementGLF_dead8sums_1[x_8539] = (x_8547 + x_8545);
                  }
                  case 2: {
                    let x_8525 : i32 = count;
                    let x_8526 : i32 = clamp(x_8525, 0, 8);
                    let x_8527 : i32 = GLF_dead8c;
                    let x_8529 : i32 = GLF_dead8r_1;
                    let x_8532 : f32 = GLF_dead8m24[clamp(x_8527, 0, 1)][clamp(x_8529, 0, 3)];
                    let x_8534 : f32 = donor_replacementGLF_dead8sums_1[x_8526];
                    donor_replacementGLF_dead8sums_1[x_8526] = (x_8534 + x_8532);
                  }
                  case 1: {
                    let x_8489 : i32 = count;
                    let x_8490 : i32 = clamp(x_8489, 0, 8);
                    let x_8491 : i32 = GLF_dead8c;
                    let x_8493 : i32 = GLF_dead8r_1;
                    let x_8496 : f32 = GLF_dead8m23[clamp(x_8491, 0, 1)][clamp(x_8493, 0, 2)];
                    let x_8498 : f32 = donor_replacementGLF_dead8sums_1[x_8490];
                    donor_replacementGLF_dead8sums_1[x_8490] = (x_8498 + x_8496);
                  }
                  case 0: {
                    let x_8476 : i32 = count;
                    let x_8477 : i32 = clamp(x_8476, 0, 8);
                    let x_8478 : i32 = GLF_dead8c;
                    let x_8480 : i32 = GLF_dead8r_1;
                    let x_8483 : f32 = GLF_dead8m22[clamp(x_8478, 0, 1)][clamp(x_8480, 0, 1)];
                    let x_8485 : f32 = donor_replacementGLF_dead8sums_1[x_8477];
                    donor_replacementGLF_dead8sums_1[x_8477] = (x_8485 + x_8483);
                  }
                  default: {
                  }
                }

                continuing {
                  let x_9853 : i32 = GLF_dead8r_1;
                  GLF_dead8r_1 = (x_9853 + 1);
                }
              }
              let x_9856 : vec4<f32> = x_GLF_color;
              x_GLF_outVarBackup_GLF_color_14 = x_9856;
              x_GLF_color = vec4<f32>(698.523010254, -5175.1171875, -7168.448242188, -56.450000763);
              if (true) {
                let x_9864 : vec4<f32> = x_GLF_outVarBackup_GLF_color_14;
                x_GLF_color = x_9864;
              }

              continuing {
                let x_9865 : i32 = GLF_dead8c;
                GLF_dead8c = (x_9865 + 1);
              }
            }
          }
          donor_replacementGLF_dead6index = -20553;
          let x_9869 : i32 = donor_replacementGLF_dead6index;
          let x_9873 : GLF_dead6BST = GLF_dead6tree[clamp(x_9869, 0, 9)];
          donor_replacementGLF_dead6currentNode = x_9873;
          let x_9875 : i32 = donor_replacementGLF_dead6currentNode.data;
          let x_9876 : i32 = *(v);
          if ((x_9875 == x_9876)) {
            let x_9880 : i32 = *(v);
            return x_9880;
          }
          let x_9882 : i32 = *(v);
          let x_9884 : i32 = donor_replacementGLF_dead6currentNode.data;
          if ((x_9882 > x_9884)) {
            let x_9890 : i32 = donor_replacementGLF_dead6currentNode.rightIndex;
            x_9886 = x_9890;
          } else {
            let x_9893 : i32 = donor_replacementGLF_dead6currentNode.leftIndex;
            x_9886 = x_9893;
          }
          let x_9894 : i32 = x_9886;
          donor_replacementGLF_dead6index = x_9894;
        }
        let x_9895 : i32 = *(v);
        *(v) = (x_9895 + 1);
        if (false) {
          GLF_dead3_GLF_color = vec4<f32>(0.0, 1.0, 0.0, 1.0);
        }
      }
    }
    let x_9899 : i32 = *(v);
    if (((x_9899 & 1) == 1)) {
      let x_9904 : i32 = *(v);
      *(v) = ((3 * x_9904) + 1);
    } else {
      let x_9908 : i32 = *(v);
      *(v) = (x_9908 / 2);
      let x_9911 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_15 = x_9911;
      x_GLF_color = (vec4<f32>(-40.0, -5.0, -55.0, -579.0) - (vec4<f32>(-1.299999952, -19.489999771, 6354.989257812, 4.900000095) * floor((vec4<f32>(-40.0, -5.0, -55.0, -579.0) / vec4<f32>(-1.299999952, -19.489999771, 6354.989257812, 4.900000095)))));
      if (true) {
        let x_9925 : vec4<f32> = x_GLF_outVarBackup_GLF_color_15;
        x_GLF_color = x_9925;
      }
      let x_9927 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_16 = x_9927;
      x_GLF_color = vec4<f32>(-4.5, 9529.732421875, -417.101989746, -455.437011719);
      if (false) {
        let x_9936 : vec4<f32> = GLF_dead15gl_FragCoord;
        GLF_dead15icoord_6 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_9936.x, x_9936.y)));
        let x_9942 : i32 = GLF_dead15icoord_6.x;
        GLF_dead15A_6 = select(-1, 0, ((x_9942 & 1) != 0));
        let x_9948 : i32 = GLF_dead15icoord_6.x;
        GLF_dead15B_6 = select(-1, 0, ((x_9948 & 2) != 0));
        let x_9954 : i32 = GLF_dead15icoord_6.x;
        GLF_dead15C_6 = select(-1, 0, ((x_9954 & 4) != 0));
        let x_9960 : i32 = GLF_dead15icoord_6.x;
        GLF_dead15D_6 = select(-1, 0, ((x_9960 & 8) != 0));
        let x_9966 : i32 = GLF_dead15icoord_6.x;
        GLF_dead15E_6 = select(-1, 0, ((x_9966 & 16) != 0));
        let x_9972 : i32 = GLF_dead15icoord_6.y;
        GLF_dead15F_6 = select(-1, 0, ((x_9972 & 1) != 0));
        let x_9978 : i32 = GLF_dead15icoord_6.y;
        GLF_dead15G_6 = select(-1, 0, ((x_9978 & 2) != 0));
        let x_9984 : i32 = GLF_dead15icoord_6.y;
        GLF_dead15H_6 = select(-1, 0, ((x_9984 & 4) != 0));
        let x_9990 : i32 = GLF_dead15icoord_6.y;
        GLF_dead15I_6 = select(-1, 0, ((x_9990 & 8) != 0));
        let x_9996 : i32 = GLF_dead15icoord_6.y;
        GLF_dead15J_6 = select(-1, 0, ((x_9996 & 16) != 0));
        let x_10001 : i32 = GLF_dead15A_6;
        let x_10002 : i32 = GLF_dead15C_6;
        let x_10005 : i32 = GLF_dead15D_6;
        let x_10008 : i32 = GLF_dead15E_6;
        let x_10011 : i32 = GLF_dead15F_6;
        let x_10013 : i32 = GLF_dead15G_6;
        let x_10015 : i32 = GLF_dead15H_6;
        let x_10017 : i32 = GLF_dead15I_6;
        let x_10020 : i32 = GLF_dead15J_6;
        let x_10023 : i32 = GLF_dead15B_6;
        let x_10024 : i32 = GLF_dead15C_6;
        let x_10027 : i32 = GLF_dead15D_6;
        let x_10030 : i32 = GLF_dead15E_6;
        let x_10033 : i32 = GLF_dead15F_6;
        let x_10035 : i32 = GLF_dead15G_6;
        let x_10037 : i32 = GLF_dead15H_6;
        let x_10039 : i32 = GLF_dead15I_6;
        let x_10042 : i32 = GLF_dead15J_6;
        let x_10046 : i32 = GLF_dead15A_6;
        let x_10048 : i32 = GLF_dead15C_6;
        let x_10050 : i32 = GLF_dead15D_6;
        let x_10053 : i32 = GLF_dead15E_6;
        let x_10056 : i32 = GLF_dead15F_6;
        let x_10058 : i32 = GLF_dead15H_6;
        let x_10061 : i32 = GLF_dead15I_6;
        let x_10063 : i32 = GLF_dead15J_6;
        let x_10067 : i32 = GLF_dead15A_6;
        let x_10068 : i32 = GLF_dead15B_6;
        let x_10071 : i32 = GLF_dead15D_6;
        let x_10074 : i32 = GLF_dead15E_6;
        let x_10077 : i32 = GLF_dead15G_6;
        let x_10079 : i32 = GLF_dead15H_6;
        let x_10082 : i32 = GLF_dead15I_6;
        let x_10084 : i32 = GLF_dead15J_6;
        GLF_dead15res_6 = (((((((((((x_10001 | ~(x_10002)) | ~(x_10005)) | ~(x_10008)) | x_10011) | x_10013) | x_10015) | ~(x_10017)) | ~(x_10020)) & ((((((((x_10023 | ~(x_10024)) | ~(x_10027)) | ~(x_10030)) | x_10033) | x_10035) | x_10037) | ~(x_10039)) | ~(x_10042))) & (((((((~(x_10046) | x_10048) | ~(x_10050)) | ~(x_10053)) | x_10056) | ~(x_10058)) | x_10061) | ~(x_10063))) & (((((((x_10067 | ~(x_10068)) | ~(x_10071)) | ~(x_10074)) | x_10077) | ~(x_10079)) | x_10082) | ~(x_10084)));
        let x_10088 : i32 = GLF_dead15A_6;
        let x_10089 : i32 = GLF_dead15B_6;
        let x_10091 : i32 = GLF_dead15C_6;
        let x_10094 : i32 = GLF_dead15D_6;
        let x_10096 : i32 = GLF_dead15E_6;
        let x_10099 : i32 = GLF_dead15F_6;
        let x_10101 : i32 = GLF_dead15G_6;
        let x_10103 : i32 = GLF_dead15H_6;
        let x_10106 : i32 = GLF_dead15I_6;
        let x_10108 : i32 = GLF_dead15J_6;
        let x_10111 : i32 = GLF_dead15B_6;
        let x_10112 : i32 = GLF_dead15C_6;
        let x_10115 : i32 = GLF_dead15D_6;
        let x_10118 : i32 = GLF_dead15E_6;
        let x_10121 : i32 = GLF_dead15F_6;
        let x_10124 : i32 = GLF_dead15G_6;
        let x_10127 : i32 = GLF_dead15H_6;
        let x_10129 : i32 = GLF_dead15I_6;
        let x_10131 : i32 = GLF_dead15J_6;
        let x_10135 : i32 = GLF_dead15A_6;
        let x_10136 : i32 = GLF_dead15C_6;
        let x_10138 : i32 = GLF_dead15D_6;
        let x_10141 : i32 = GLF_dead15E_6;
        let x_10144 : i32 = GLF_dead15G_6;
        let x_10147 : i32 = GLF_dead15H_6;
        let x_10149 : i32 = GLF_dead15I_6;
        let x_10151 : i32 = GLF_dead15J_6;
        let x_10155 : i32 = GLF_dead15A_6;
        let x_10156 : i32 = GLF_dead15C_6;
        let x_10158 : i32 = GLF_dead15D_6;
        let x_10161 : i32 = GLF_dead15E_6;
        let x_10164 : i32 = GLF_dead15F_6;
        let x_10167 : i32 = GLF_dead15H_6;
        let x_10169 : i32 = GLF_dead15I_6;
        let x_10171 : i32 = GLF_dead15J_6;
        let x_10175 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10175 & ((((((((((((x_10088 | x_10089) | ~(x_10091)) | x_10094) | ~(x_10096)) | x_10099) | x_10101) | ~(x_10103)) | x_10106) | ~(x_10108)) & ((((((((x_10111 | ~(x_10112)) | ~(x_10115)) | ~(x_10118)) | ~(x_10121)) | ~(x_10124)) | x_10127) | x_10129) | ~(x_10131))) & (((((((x_10135 | x_10136) | ~(x_10138)) | ~(x_10141)) | ~(x_10144)) | x_10147) | x_10149) | ~(x_10151))) & (((((((x_10155 | x_10156) | ~(x_10158)) | ~(x_10161)) | ~(x_10164)) | x_10167) | x_10169) | ~(x_10171))));
        let x_10177 : i32 = GLF_dead15A_6;
        let x_10178 : i32 = GLF_dead15B_6;
        let x_10180 : i32 = GLF_dead15C_6;
        let x_10183 : i32 = GLF_dead15D_6;
        let x_10185 : i32 = GLF_dead15E_6;
        let x_10188 : i32 = GLF_dead15G_6;
        let x_10191 : i32 = GLF_dead15H_6;
        let x_10193 : i32 = GLF_dead15I_6;
        let x_10195 : i32 = GLF_dead15J_6;
        let x_10198 : i32 = GLF_dead15A_6;
        let x_10200 : i32 = GLF_dead15C_6;
        let x_10202 : i32 = GLF_dead15D_6;
        let x_10204 : i32 = GLF_dead15E_6;
        let x_10207 : i32 = GLF_dead15G_6;
        let x_10210 : i32 = GLF_dead15H_6;
        let x_10212 : i32 = GLF_dead15I_6;
        let x_10214 : i32 = GLF_dead15J_6;
        let x_10218 : i32 = GLF_dead15A_6;
        let x_10220 : i32 = GLF_dead15B_6;
        let x_10223 : i32 = GLF_dead15C_6;
        let x_10226 : i32 = GLF_dead15D_6;
        let x_10229 : i32 = GLF_dead15E_6;
        let x_10231 : i32 = GLF_dead15G_6;
        let x_10234 : i32 = GLF_dead15H_6;
        let x_10236 : i32 = GLF_dead15I_6;
        let x_10238 : i32 = GLF_dead15J_6;
        let x_10242 : i32 = GLF_dead15A_6;
        let x_10243 : i32 = GLF_dead15B_6;
        let x_10246 : i32 = GLF_dead15D_6;
        let x_10248 : i32 = GLF_dead15E_6;
        let x_10251 : i32 = GLF_dead15G_6;
        let x_10253 : i32 = GLF_dead15H_6;
        let x_10255 : i32 = GLF_dead15I_6;
        let x_10257 : i32 = GLF_dead15J_6;
        let x_10261 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10261 & (((((((((((x_10177 | x_10178) | ~(x_10180)) | x_10183) | ~(x_10185)) | ~(x_10188)) | x_10191) | x_10193) | ~(x_10195)) & (((((((~(x_10198) | x_10200) | x_10202) | ~(x_10204)) | ~(x_10207)) | x_10210) | x_10212) | ~(x_10214))) & ((((((((~(x_10218) | ~(x_10220)) | ~(x_10223)) | ~(x_10226)) | x_10229) | ~(x_10231)) | x_10234) | x_10236) | ~(x_10238))) & (((((((x_10242 | ~(x_10243)) | x_10246) | ~(x_10248)) | x_10251) | x_10253) | x_10255) | ~(x_10257))));
        let x_10263 : i32 = GLF_dead15A_6;
        let x_10265 : i32 = GLF_dead15B_6;
        let x_10267 : i32 = GLF_dead15C_6;
        let x_10270 : i32 = GLF_dead15D_6;
        let x_10272 : i32 = GLF_dead15E_6;
        let x_10275 : i32 = GLF_dead15G_6;
        let x_10277 : i32 = GLF_dead15H_6;
        let x_10279 : i32 = GLF_dead15I_6;
        let x_10281 : i32 = GLF_dead15J_6;
        let x_10284 : i32 = GLF_dead15A_6;
        let x_10285 : i32 = GLF_dead15B_6;
        let x_10288 : i32 = GLF_dead15D_6;
        let x_10291 : i32 = GLF_dead15E_6;
        let x_10293 : i32 = GLF_dead15G_6;
        let x_10295 : i32 = GLF_dead15H_6;
        let x_10297 : i32 = GLF_dead15I_6;
        let x_10299 : i32 = GLF_dead15J_6;
        let x_10303 : i32 = GLF_dead15A_6;
        let x_10304 : i32 = GLF_dead15C_6;
        let x_10307 : i32 = GLF_dead15D_6;
        let x_10310 : i32 = GLF_dead15E_6;
        let x_10312 : i32 = GLF_dead15F_6;
        let x_10314 : i32 = GLF_dead15G_6;
        let x_10316 : i32 = GLF_dead15H_6;
        let x_10318 : i32 = GLF_dead15I_6;
        let x_10320 : i32 = GLF_dead15J_6;
        let x_10324 : i32 = GLF_dead15A_6;
        let x_10326 : i32 = GLF_dead15C_6;
        let x_10328 : i32 = GLF_dead15D_6;
        let x_10331 : i32 = GLF_dead15E_6;
        let x_10333 : i32 = GLF_dead15F_6;
        let x_10335 : i32 = GLF_dead15G_6;
        let x_10337 : i32 = GLF_dead15H_6;
        let x_10339 : i32 = GLF_dead15I_6;
        let x_10341 : i32 = GLF_dead15J_6;
        let x_10345 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10345 & (((((((((((~(x_10263) | x_10265) | ~(x_10267)) | x_10270) | ~(x_10272)) | x_10275) | x_10277) | x_10279) | ~(x_10281)) & (((((((x_10284 | ~(x_10285)) | ~(x_10288)) | x_10291) | x_10293) | x_10295) | x_10297) | ~(x_10299))) & ((((((((x_10303 | ~(x_10304)) | ~(x_10307)) | x_10310) | x_10312) | x_10314) | x_10316) | x_10318) | ~(x_10320))) & ((((((((~(x_10324) | x_10326) | ~(x_10328)) | x_10331) | x_10333) | x_10335) | x_10337) | x_10339) | ~(x_10341))));
        let x_10347 : i32 = GLF_dead15A_6;
        let x_10349 : i32 = GLF_dead15B_6;
        let x_10352 : i32 = GLF_dead15C_6;
        let x_10354 : i32 = GLF_dead15D_6;
        let x_10357 : i32 = GLF_dead15E_6;
        let x_10360 : i32 = GLF_dead15F_6;
        let x_10363 : i32 = GLF_dead15G_6;
        let x_10366 : i32 = GLF_dead15H_6;
        let x_10369 : i32 = GLF_dead15I_6;
        let x_10372 : i32 = GLF_dead15J_6;
        let x_10374 : i32 = GLF_dead15A_6;
        let x_10375 : i32 = GLF_dead15B_6;
        let x_10378 : i32 = GLF_dead15C_6;
        let x_10380 : i32 = GLF_dead15D_6;
        let x_10382 : i32 = GLF_dead15E_6;
        let x_10385 : i32 = GLF_dead15F_6;
        let x_10388 : i32 = GLF_dead15G_6;
        let x_10391 : i32 = GLF_dead15H_6;
        let x_10394 : i32 = GLF_dead15I_6;
        let x_10397 : i32 = GLF_dead15J_6;
        let x_10400 : i32 = GLF_dead15A_6;
        let x_10402 : i32 = GLF_dead15B_6;
        let x_10404 : i32 = GLF_dead15C_6;
        let x_10406 : i32 = GLF_dead15D_6;
        let x_10408 : i32 = GLF_dead15E_6;
        let x_10411 : i32 = GLF_dead15G_6;
        let x_10414 : i32 = GLF_dead15H_6;
        let x_10417 : i32 = GLF_dead15I_6;
        let x_10420 : i32 = GLF_dead15J_6;
        let x_10423 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10423 & (((((((((((~(x_10347) | ~(x_10349)) | x_10352) | ~(x_10354)) | ~(x_10357)) | ~(x_10360)) | ~(x_10363)) | ~(x_10366)) | ~(x_10369)) | x_10372) & (((((((((x_10374 | ~(x_10375)) | x_10378) | x_10380) | ~(x_10382)) | ~(x_10385)) | ~(x_10388)) | ~(x_10391)) | ~(x_10394)) | x_10397)) & ((((((((~(x_10400) | x_10402) | x_10404) | x_10406) | ~(x_10408)) | ~(x_10411)) | ~(x_10414)) | ~(x_10417)) | x_10420)));
        let x_10425 : i32 = GLF_dead15C_6;
        let x_10427 : i32 = GLF_dead15D_6;
        let x_10430 : i32 = GLF_dead15E_6;
        let x_10432 : i32 = GLF_dead15F_6;
        let x_10435 : i32 = GLF_dead15G_6;
        let x_10438 : i32 = GLF_dead15H_6;
        let x_10441 : i32 = GLF_dead15I_6;
        let x_10444 : i32 = GLF_dead15J_6;
        let x_10446 : i32 = GLF_dead15A_6;
        let x_10448 : i32 = GLF_dead15C_6;
        let x_10451 : i32 = GLF_dead15D_6;
        let x_10454 : i32 = GLF_dead15E_6;
        let x_10456 : i32 = GLF_dead15G_6;
        let x_10459 : i32 = GLF_dead15H_6;
        let x_10462 : i32 = GLF_dead15I_6;
        let x_10465 : i32 = GLF_dead15J_6;
        let x_10468 : i32 = GLF_dead15B_6;
        let x_10469 : i32 = GLF_dead15D_6;
        let x_10472 : i32 = GLF_dead15E_6;
        let x_10474 : i32 = GLF_dead15F_6;
        let x_10477 : i32 = GLF_dead15H_6;
        let x_10480 : i32 = GLF_dead15I_6;
        let x_10483 : i32 = GLF_dead15J_6;
        let x_10486 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10486 & (((((((((~(x_10425) | ~(x_10427)) | x_10430) | ~(x_10432)) | ~(x_10435)) | ~(x_10438)) | ~(x_10441)) | x_10444) & (((((((~(x_10446) | ~(x_10448)) | ~(x_10451)) | x_10454) | ~(x_10456)) | ~(x_10459)) | ~(x_10462)) | x_10465)) & ((((((x_10468 | ~(x_10469)) | x_10472) | ~(x_10474)) | ~(x_10477)) | ~(x_10480)) | x_10483)));
        let x_10488 : i32 = GLF_dead15A_6;
        let x_10489 : i32 = GLF_dead15B_6;
        let x_10491 : i32 = GLF_dead15C_6;
        let x_10493 : i32 = GLF_dead15D_6;
        let x_10496 : i32 = GLF_dead15E_6;
        let x_10498 : i32 = GLF_dead15G_6;
        let x_10501 : i32 = GLF_dead15H_6;
        let x_10504 : i32 = GLF_dead15I_6;
        let x_10507 : i32 = GLF_dead15J_6;
        let x_10509 : i32 = GLF_dead15B_6;
        let x_10510 : i32 = GLF_dead15C_6;
        let x_10512 : i32 = GLF_dead15D_6;
        let x_10514 : i32 = GLF_dead15E_6;
        let x_10517 : i32 = GLF_dead15F_6;
        let x_10519 : i32 = GLF_dead15G_6;
        let x_10522 : i32 = GLF_dead15H_6;
        let x_10525 : i32 = GLF_dead15I_6;
        let x_10528 : i32 = GLF_dead15J_6;
        let x_10531 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10531 & (((((((((x_10488 | x_10489) | x_10491) | ~(x_10493)) | x_10496) | ~(x_10498)) | ~(x_10501)) | ~(x_10504)) | x_10507) & ((((((((x_10509 | x_10510) | x_10512) | ~(x_10514)) | x_10517) | ~(x_10519)) | ~(x_10522)) | ~(x_10525)) | x_10528)));
        let x_10533 : i32 = GLF_dead15A_6;
        let x_10534 : i32 = GLF_dead15C_6;
        let x_10537 : i32 = GLF_dead15D_6;
        let x_10539 : i32 = GLF_dead15E_6;
        let x_10541 : i32 = GLF_dead15F_6;
        let x_10543 : i32 = GLF_dead15G_6;
        let x_10546 : i32 = GLF_dead15H_6;
        let x_10549 : i32 = GLF_dead15I_6;
        let x_10552 : i32 = GLF_dead15J_6;
        let x_10554 : i32 = GLF_dead15B_6;
        let x_10555 : i32 = GLF_dead15C_6;
        let x_10558 : i32 = GLF_dead15D_6;
        let x_10560 : i32 = GLF_dead15E_6;
        let x_10562 : i32 = GLF_dead15F_6;
        let x_10564 : i32 = GLF_dead15G_6;
        let x_10567 : i32 = GLF_dead15H_6;
        let x_10570 : i32 = GLF_dead15J_6;
        let x_10573 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10573 & (((((((((x_10533 | ~(x_10534)) | x_10537) | x_10539) | x_10541) | ~(x_10543)) | ~(x_10546)) | ~(x_10549)) | x_10552) & (((((((x_10554 | ~(x_10555)) | x_10558) | x_10560) | x_10562) | ~(x_10564)) | ~(x_10567)) | x_10570)));
        let x_10575 : i32 = GLF_dead15A_6;
        let x_10577 : i32 = GLF_dead15B_6;
        let x_10580 : i32 = GLF_dead15C_6;
        let x_10582 : i32 = GLF_dead15D_6;
        let x_10584 : i32 = GLF_dead15E_6;
        let x_10586 : i32 = GLF_dead15F_6;
        let x_10588 : i32 = GLF_dead15G_6;
        let x_10591 : i32 = GLF_dead15H_6;
        let x_10594 : i32 = GLF_dead15I_6;
        let x_10597 : i32 = GLF_dead15J_6;
        let x_10599 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10599 & (((((((((~(x_10575) | ~(x_10577)) | x_10580) | x_10582) | x_10584) | x_10586) | ~(x_10588)) | ~(x_10591)) | ~(x_10594)) | x_10597));
        let x_10601 : i32 = GLF_dead15A_6;
        let x_10602 : i32 = GLF_dead15B_6;
        let x_10604 : i32 = GLF_dead15C_6;
        let x_10607 : i32 = GLF_dead15D_6;
        let x_10610 : i32 = GLF_dead15E_6;
        let x_10612 : i32 = GLF_dead15G_6;
        let x_10614 : i32 = GLF_dead15H_6;
        let x_10617 : i32 = GLF_dead15I_6;
        let x_10620 : i32 = GLF_dead15J_6;
        let x_10622 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10622 & ((((((((x_10601 | x_10602) | ~(x_10604)) | ~(x_10607)) | x_10610) | x_10612) | ~(x_10614)) | ~(x_10617)) | x_10620));
        let x_10624 : i32 = GLF_dead15B_6;
        let x_10626 : i32 = GLF_dead15D_6;
        let x_10628 : i32 = GLF_dead15E_6;
        let x_10630 : i32 = GLF_dead15F_6;
        let x_10633 : i32 = GLF_dead15G_6;
        let x_10635 : i32 = GLF_dead15H_6;
        let x_10638 : i32 = GLF_dead15I_6;
        let x_10641 : i32 = GLF_dead15J_6;
        let x_10643 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10643 & (((((((~(x_10624) | x_10626) | x_10628) | ~(x_10630)) | x_10633) | ~(x_10635)) | ~(x_10638)) | x_10641));
        let x_10645 : i32 = GLF_dead15B_6;
        let x_10647 : i32 = GLF_dead15C_6;
        let x_10649 : i32 = GLF_dead15D_6;
        let x_10652 : i32 = GLF_dead15E_6;
        let x_10654 : i32 = GLF_dead15F_6;
        let x_10656 : i32 = GLF_dead15G_6;
        let x_10658 : i32 = GLF_dead15H_6;
        let x_10661 : i32 = GLF_dead15I_6;
        let x_10664 : i32 = GLF_dead15J_6;
        let x_10666 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10666 & ((((((((~(x_10645) | x_10647) | ~(x_10649)) | x_10652) | x_10654) | x_10656) | ~(x_10658)) | ~(x_10661)) | x_10664));
        let x_10668 : i32 = GLF_dead15A_6;
        let x_10670 : i32 = GLF_dead15B_6;
        let x_10673 : i32 = GLF_dead15C_6;
        let x_10676 : i32 = GLF_dead15D_6;
        let x_10678 : i32 = GLF_dead15E_6;
        let x_10680 : i32 = GLF_dead15F_6;
        let x_10682 : i32 = GLF_dead15G_6;
        let x_10684 : i32 = GLF_dead15I_6;
        let x_10687 : i32 = GLF_dead15J_6;
        let x_10689 : i32 = GLF_dead15B_6;
        let x_10691 : i32 = GLF_dead15C_6;
        let x_10694 : i32 = GLF_dead15D_6;
        let x_10696 : i32 = GLF_dead15E_6;
        let x_10698 : i32 = GLF_dead15F_6;
        let x_10701 : i32 = GLF_dead15G_6;
        let x_10704 : i32 = GLF_dead15H_6;
        let x_10706 : i32 = GLF_dead15I_6;
        let x_10709 : i32 = GLF_dead15J_6;
        let x_10712 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10712 & (((((((((~(x_10668) | ~(x_10670)) | ~(x_10673)) | x_10676) | x_10678) | x_10680) | x_10682) | ~(x_10684)) | x_10687) & ((((((((~(x_10689) | ~(x_10691)) | x_10694) | x_10696) | ~(x_10698)) | ~(x_10701)) | x_10704) | ~(x_10706)) | x_10709)));
        let x_10714 : i32 = GLF_dead15A_6;
        let x_10716 : i32 = GLF_dead15B_6;
        let x_10718 : i32 = GLF_dead15C_6;
        let x_10720 : i32 = GLF_dead15D_6;
        let x_10722 : i32 = GLF_dead15E_6;
        let x_10724 : i32 = GLF_dead15H_6;
        let x_10726 : i32 = GLF_dead15I_6;
        let x_10729 : i32 = GLF_dead15J_6;
        let x_10731 : i32 = GLF_dead15B_6;
        let x_10732 : i32 = GLF_dead15C_6;
        let x_10734 : i32 = GLF_dead15D_6;
        let x_10736 : i32 = GLF_dead15E_6;
        let x_10738 : i32 = GLF_dead15F_6;
        let x_10740 : i32 = GLF_dead15G_6;
        let x_10743 : i32 = GLF_dead15H_6;
        let x_10745 : i32 = GLF_dead15I_6;
        let x_10748 : i32 = GLF_dead15J_6;
        let x_10751 : i32 = GLF_dead15A_6;
        let x_10752 : i32 = GLF_dead15B_6;
        let x_10754 : i32 = GLF_dead15C_6;
        let x_10756 : i32 = GLF_dead15D_6;
        let x_10759 : i32 = GLF_dead15E_6;
        let x_10761 : i32 = GLF_dead15F_6;
        let x_10763 : i32 = GLF_dead15G_6;
        let x_10765 : i32 = GLF_dead15H_6;
        let x_10767 : i32 = GLF_dead15I_6;
        let x_10770 : i32 = GLF_dead15J_6;
        let x_10773 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10773 & (((((((((~(x_10714) | x_10716) | x_10718) | x_10720) | x_10722) | x_10724) | ~(x_10726)) | x_10729) & ((((((((x_10731 | x_10732) | x_10734) | x_10736) | x_10738) | ~(x_10740)) | x_10743) | ~(x_10745)) | x_10748)) & (((((((((x_10751 | x_10752) | x_10754) | ~(x_10756)) | x_10759) | x_10761) | x_10763) | x_10765) | ~(x_10767)) | x_10770)));
        let x_10775 : i32 = GLF_dead15A_6;
        let x_10776 : i32 = GLF_dead15B_6;
        let x_10779 : i32 = GLF_dead15C_6;
        let x_10781 : i32 = GLF_dead15D_6;
        let x_10783 : i32 = GLF_dead15E_6;
        let x_10785 : i32 = GLF_dead15F_6;
        let x_10787 : i32 = GLF_dead15G_6;
        let x_10789 : i32 = GLF_dead15H_6;
        let x_10791 : i32 = GLF_dead15I_6;
        let x_10794 : i32 = GLF_dead15J_6;
        let x_10796 : i32 = GLF_dead15B_6;
        let x_10798 : i32 = GLF_dead15D_6;
        let x_10800 : i32 = GLF_dead15E_6;
        let x_10802 : i32 = GLF_dead15F_6;
        let x_10805 : i32 = GLF_dead15G_6;
        let x_10808 : i32 = GLF_dead15H_6;
        let x_10811 : i32 = GLF_dead15I_6;
        let x_10813 : i32 = GLF_dead15J_6;
        let x_10816 : i32 = GLF_dead15A_6;
        let x_10818 : i32 = GLF_dead15B_6;
        let x_10821 : i32 = GLF_dead15C_6;
        let x_10823 : i32 = GLF_dead15E_6;
        let x_10826 : i32 = GLF_dead15G_6;
        let x_10829 : i32 = GLF_dead15H_6;
        let x_10832 : i32 = GLF_dead15I_6;
        let x_10834 : i32 = GLF_dead15J_6;
        let x_10838 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10838 & (((((((((((x_10775 | ~(x_10776)) | x_10779) | x_10781) | x_10783) | x_10785) | x_10787) | x_10789) | ~(x_10791)) | x_10794) & (((((((~(x_10796) | x_10798) | x_10800) | ~(x_10802)) | ~(x_10805)) | ~(x_10808)) | x_10811) | x_10813)) & (((((((~(x_10816) | ~(x_10818)) | x_10821) | ~(x_10823)) | ~(x_10826)) | ~(x_10829)) | x_10832) | ~(x_10834))));
        let x_10840 : i32 = GLF_dead15A_6;
        let x_10842 : i32 = GLF_dead15D_6;
        let x_10845 : i32 = GLF_dead15E_6;
        let x_10848 : i32 = GLF_dead15F_6;
        let x_10851 : i32 = GLF_dead15G_6;
        let x_10853 : i32 = GLF_dead15H_6;
        let x_10856 : i32 = GLF_dead15I_6;
        let x_10858 : i32 = GLF_dead15J_6;
        let x_10861 : i32 = GLF_dead15A_6;
        let x_10862 : i32 = GLF_dead15B_6;
        let x_10864 : i32 = GLF_dead15E_6;
        let x_10867 : i32 = GLF_dead15F_6;
        let x_10870 : i32 = GLF_dead15G_6;
        let x_10873 : i32 = GLF_dead15H_6;
        let x_10875 : i32 = GLF_dead15I_6;
        let x_10877 : i32 = GLF_dead15J_6;
        let x_10881 : i32 = GLF_dead15B_6;
        let x_10883 : i32 = GLF_dead15C_6;
        let x_10885 : i32 = GLF_dead15D_6;
        let x_10887 : i32 = GLF_dead15E_6;
        let x_10890 : i32 = GLF_dead15F_6;
        let x_10892 : i32 = GLF_dead15G_6;
        let x_10895 : i32 = GLF_dead15H_6;
        let x_10897 : i32 = GLF_dead15I_6;
        let x_10899 : i32 = GLF_dead15J_6;
        let x_10903 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10903 & (((((((((~(x_10840) | ~(x_10842)) | ~(x_10845)) | ~(x_10848)) | x_10851) | ~(x_10853)) | x_10856) | ~(x_10858)) & (((((((x_10861 | x_10862) | ~(x_10864)) | ~(x_10867)) | ~(x_10870)) | x_10873) | x_10875) | ~(x_10877))) & ((((((((~(x_10881) | x_10883) | x_10885) | ~(x_10887)) | x_10890) | ~(x_10892)) | x_10895) | x_10897) | ~(x_10899))));
        let x_10905 : i32 = GLF_dead15B_6;
        let x_10907 : i32 = GLF_dead15C_6;
        let x_10910 : i32 = GLF_dead15D_6;
        let x_10913 : i32 = GLF_dead15E_6;
        let x_10915 : i32 = GLF_dead15F_6;
        let x_10917 : i32 = GLF_dead15G_6;
        let x_10920 : i32 = GLF_dead15H_6;
        let x_10922 : i32 = GLF_dead15I_6;
        let x_10924 : i32 = GLF_dead15J_6;
        let x_10927 : i32 = GLF_dead15A_6;
        let x_10929 : i32 = GLF_dead15B_6;
        let x_10932 : i32 = GLF_dead15C_6;
        let x_10934 : i32 = GLF_dead15D_6;
        let x_10937 : i32 = GLF_dead15G_6;
        let x_10939 : i32 = GLF_dead15H_6;
        let x_10941 : i32 = GLF_dead15I_6;
        let x_10943 : i32 = GLF_dead15J_6;
        let x_10947 : i32 = GLF_dead15C_6;
        let x_10949 : i32 = GLF_dead15D_6;
        let x_10951 : i32 = GLF_dead15E_6;
        let x_10954 : i32 = GLF_dead15F_6;
        let x_10957 : i32 = GLF_dead15G_6;
        let x_10959 : i32 = GLF_dead15H_6;
        let x_10961 : i32 = GLF_dead15I_6;
        let x_10963 : i32 = GLF_dead15J_6;
        let x_10967 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_10967 & ((((((((((~(x_10905) | ~(x_10907)) | ~(x_10910)) | x_10913) | x_10915) | ~(x_10917)) | x_10920) | x_10922) | ~(x_10924)) & (((((((~(x_10927) | ~(x_10929)) | x_10932) | ~(x_10934)) | x_10937) | x_10939) | x_10941) | ~(x_10943))) & (((((((~(x_10947) | x_10949) | ~(x_10951)) | ~(x_10954)) | x_10957) | x_10959) | x_10961) | ~(x_10963))));
        let x_10969 : i32 = GLF_dead15A_6;
        let x_10971 : i32 = GLF_dead15B_6;
        let x_10973 : i32 = GLF_dead15C_6;
        let x_10975 : i32 = GLF_dead15E_6;
        let x_10977 : i32 = GLF_dead15F_6;
        let x_10979 : i32 = GLF_dead15G_6;
        let x_10981 : i32 = GLF_dead15H_6;
        let x_10984 : i32 = GLF_dead15I_6;
        let x_10987 : i32 = GLF_dead15J_6;
        let x_10989 : i32 = GLF_dead15A_6;
        let x_10991 : i32 = GLF_dead15B_6;
        let x_10993 : i32 = GLF_dead15D_6;
        let x_10995 : i32 = GLF_dead15E_6;
        let x_10997 : i32 = GLF_dead15G_6;
        let x_11000 : i32 = GLF_dead15H_6;
        let x_11002 : i32 = GLF_dead15I_6;
        let x_11005 : i32 = GLF_dead15J_6;
        let x_11008 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_11008 & (((((((((~(x_10969) | x_10971) | x_10973) | x_10975) | x_10977) | x_10979) | ~(x_10981)) | ~(x_10984)) | x_10987) & (((((((~(x_10989) | x_10991) | x_10993) | x_10995) | ~(x_10997)) | x_11000) | ~(x_11002)) | x_11005)));
        let x_11010 : i32 = GLF_dead15A_6;
        let x_11011 : i32 = GLF_dead15B_6;
        let x_11013 : i32 = GLF_dead15C_6;
        let x_11016 : i32 = GLF_dead15D_6;
        let x_11019 : i32 = GLF_dead15E_6;
        let x_11022 : i32 = GLF_dead15F_6;
        let x_11025 : i32 = GLF_dead15H_6;
        let x_11028 : i32 = GLF_dead15I_6;
        let x_11030 : i32 = GLF_dead15J_6;
        let x_11033 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_11033 & ((((((((x_11010 | x_11011) | ~(x_11013)) | ~(x_11016)) | ~(x_11019)) | ~(x_11022)) | ~(x_11025)) | x_11028) | ~(x_11030)));
        let x_11035 : i32 = GLF_dead15A_6;
        let x_11037 : i32 = GLF_dead15C_6;
        let x_11040 : i32 = GLF_dead15E_6;
        let x_11043 : i32 = GLF_dead15F_6;
        let x_11046 : i32 = GLF_dead15G_6;
        let x_11048 : i32 = GLF_dead15H_6;
        let x_11051 : i32 = GLF_dead15I_6;
        let x_11053 : i32 = GLF_dead15J_6;
        let x_11056 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_11056 & (((((((~(x_11035) | ~(x_11037)) | ~(x_11040)) | ~(x_11043)) | x_11046) | ~(x_11048)) | x_11051) | ~(x_11053)));
        let x_11058 : i32 = GLF_dead15A_6;
        let x_11059 : i32 = GLF_dead15B_6;
        let x_11062 : i32 = GLF_dead15C_6;
        let x_11065 : i32 = GLF_dead15D_6;
        let x_11067 : i32 = GLF_dead15E_6;
        let x_11070 : i32 = GLF_dead15F_6;
        let x_11073 : i32 = GLF_dead15H_6;
        let x_11076 : i32 = GLF_dead15I_6;
        let x_11078 : i32 = GLF_dead15J_6;
        let x_11081 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_11081 & ((((((((x_11058 | ~(x_11059)) | ~(x_11062)) | x_11065) | ~(x_11067)) | ~(x_11070)) | ~(x_11073)) | x_11076) | ~(x_11078)));
        let x_11083 : i32 = GLF_dead15B_6;
        let x_11084 : i32 = GLF_dead15C_6;
        let x_11087 : i32 = GLF_dead15D_6;
        let x_11089 : i32 = GLF_dead15E_6;
        let x_11092 : i32 = GLF_dead15F_6;
        let x_11095 : i32 = GLF_dead15G_6;
        let x_11098 : i32 = GLF_dead15H_6;
        let x_11101 : i32 = GLF_dead15I_6;
        let x_11103 : i32 = GLF_dead15J_6;
        let x_11106 : i32 = GLF_dead15A_6;
        let x_11108 : i32 = GLF_dead15B_6;
        let x_11111 : i32 = GLF_dead15C_6;
        let x_11114 : i32 = GLF_dead15D_6;
        let x_11116 : i32 = GLF_dead15E_6;
        let x_11119 : i32 = GLF_dead15F_6;
        let x_11121 : i32 = GLF_dead15H_6;
        let x_11124 : i32 = GLF_dead15I_6;
        let x_11126 : i32 = GLF_dead15J_6;
        let x_11130 : i32 = GLF_dead15B_6;
        let x_11132 : i32 = GLF_dead15C_6;
        let x_11135 : i32 = GLF_dead15D_6;
        let x_11137 : i32 = GLF_dead15E_6;
        let x_11140 : i32 = GLF_dead15F_6;
        let x_11142 : i32 = GLF_dead15G_6;
        let x_11145 : i32 = GLF_dead15H_6;
        let x_11148 : i32 = GLF_dead15I_6;
        let x_11150 : i32 = GLF_dead15J_6;
        let x_11154 : i32 = GLF_dead15res_6;
        GLF_dead15res_6 = (x_11154 & ((((((((((x_11083 | ~(x_11084)) | x_11087) | ~(x_11089)) | ~(x_11092)) | ~(x_11095)) | ~(x_11098)) | x_11101) | ~(x_11103)) & ((((((((~(x_11106) | ~(x_11108)) | ~(x_11111)) | x_11114) | ~(x_11116)) | x_11119) | ~(x_11121)) | x_11124) | ~(x_11126))) & ((((((((~(x_11130) | ~(x_11132)) | x_11135) | ~(x_11137)) | x_11140) | ~(x_11142)) | ~(x_11145)) | x_11148) | ~(x_11150))));
        let x_11156 : i32 = GLF_dead15res_6;
        let x_11158 : f32 = select(1.0, 0.0, (x_11156 == 0));
        let x_11159 : vec3<f32> = vec3<f32>(x_11158, x_11158, x_11158);
        GLF_dead15_GLF_color = vec4<f32>(x_11159.x, x_11159.y, x_11159.z, 1.0);
      }
      let x_11165 : f32 = gl_FragCoord.x;
      if ((x_11165 >= 0.0)) {
        if (false) {
          let x_11171 : i32 = count;
          GLF_dead11data[clamp(x_11171, 0, 9)] = 4;
          break;
        }
        let x_11335 : vec4<f32> = x_GLF_color;
        x_GLF_outVarBackup_GLF_color_17 = x_11335;
        if (false) {
          let x_11344 : vec2<f32> = x_525.injectionSwitch;
          donor_replacementGLF_dead14c_2 = clamp(vec3<f32>(10.68999958, -84.040000916, -6378.3046875), vec3<f32>(x_11344.x, x_11344.y, -9.0), vec3<f32>(-9.0, 1189.0, -4.0));
          let x_11351 : i32 = GLF_dead9MATRIX_N;
          let x_11354 : f32 = donor_replacementGLF_dead14c_2[clamp(x_11351, 0, 2)];
          if ((x_11354 >= 1.0)) {
            let x_11358 : i32 = GLF_dead9MATRIX_N;
            let x_11360 : i32 = GLF_dead9MATRIX_N;
            let x_11363 : f32 = donor_replacementGLF_dead14c_2[clamp(x_11360, 0, 2)];
            let x_11364 : i32 = GLF_dead9MATRIX_N;
            let x_11367 : f32 = donor_replacementGLF_dead14c_2[clamp(x_11364, 0, 2)];
            donor_replacementGLF_dead14c_2[clamp(x_11358, 0, 2)] = (x_11363 * x_11367);
          }
        }
        x_GLF_color = vec4<f32>(98.0, -94.0, 13.0, 1.0);
        if (true) {
          let x_11376 : vec4<f32> = x_GLF_outVarBackup_GLF_color_17;
          x_GLF_color = x_11376;
        }
        let x_11377 : vec4<f32> = x_GLF_outVarBackup_GLF_color_16;
        x_GLF_color = x_11377;
      }
    }
    if (false) {
      let x_11380 : i32 = *(v);
      let x_11383 : i32 = *(v);
      let x_11387 : i32 = *(v);
      let x_11391 : vec3<f32> = vec3<f32>((f32(x_11380) / 50.0), (f32(x_11383) / 120.0), (f32(x_11387) / 140.0));
      let x_11393 : f32 = x_525.injectionSwitch.x;
      let x_11395 : f32 = x_525.injectionSwitch.y;
      if ((x_11393 > x_11395)) {
        let x_11401 : f32 = x_655.GLF_dead8one;
        let x_11404 : f32 = x_655.GLF_dead8one;
        let x_11407 : f32 = x_655.GLF_dead8one;
        let x_11409 : f32 = x_655.GLF_dead8one;
        let x_11412 : vec2<f32> = x_525.injectionSwitch;
        let x_11416 : f32 = dot(x_11412, vec2<f32>(8.600000381, 40.049999237));
        let x_11418 : f32 = x_655.GLF_dead8one;
        let x_11420 : f32 = x_655.GLF_dead8one;
        let x_11423 : f32 = x_655.GLF_dead8one;
        let x_11424 : f32 = (x_11423 - 4.5);
        let x_11426 : vec2<f32> = x_3482.GLF_dead8resolution;
        let x_11428 : vec2<f32> = GLF_dead8gl_PointCoord;
        let x_11429 : f32 = dot(acos(x_11426), x_11428);
        if (false) {
          let x_11434 : f32 = x_655.GLF_dead8one;
          x_11430 = x_11434;
        } else {
          let x_11437 : f32 = x_655.GLF_dead8one;
          x_11430 = x_11437;
        }
        let x_11438 : f32 = x_11430;
        let x_11440 : f32 = x_655.GLF_dead8one;
        let x_11444 : f32 = x_655.GLF_dead8one;
        let x_11447 : vec2<f32> = x_3482.GLF_dead8resolution;
        let x_11449 : vec2<f32> = GLF_dead8gl_PointCoord;
        let x_11450 : f32 = dot(acos(x_11447), x_11449);
        let x_11452 : f32 = x_655.GLF_dead8one;
        let x_11454 : f32 = x_655.GLF_dead8one;
        let x_11455 : f32 = (x_11454 - 4.5);
        if (false) {
          let x_11460 : f32 = x_655.GLF_dead8one;
          x_11456 = x_11460;
        } else {
          let x_11463 : f32 = x_655.GLF_dead8one;
          x_11456 = x_11463;
        }
        let x_11464 : f32 = x_11456;
        let x_11466 : f32 = x_655.GLF_dead8one;
        let x_11468 : vec2<f32> = x_525.injectionSwitch;
        let x_11469 : f32 = dot(x_11468, vec2<f32>(8.600000381, 40.049999237));
        let x_11471 : f32 = x_655.GLF_dead8one;
        let x_11473 : f32 = x_655.GLF_dead8one;
        let x_11475 : f32 = x_655.GLF_dead8one;
        let x_11477 : f32 = x_655.GLF_dead8one;
        let x_11479 : f32 = x_655.GLF_dead8one;
        let x_11481 : f32 = x_655.GLF_dead8one;
        let x_11483 : f32 = x_655.GLF_dead8one;
        if (false) {
          let x_11488 : f32 = x_655.GLF_dead8one;
          x_11484 = x_11488;
        } else {
          let x_11491 : f32 = x_655.GLF_dead8one;
          x_11484 = x_11491;
        }
        let x_11492 : f32 = x_11484;
        let x_11494 : f32 = x_655.GLF_dead8one;
        let x_11497 : f32 = x_655.GLF_dead8one;
        let x_11499 : vec2<f32> = x_3482.GLF_dead8resolution;
        let x_11501 : vec2<f32> = GLF_dead8gl_PointCoord;
        let x_11504 : f32 = x_655.GLF_dead8one;
        let x_11506 : vec2<f32> = x_525.injectionSwitch;
        donor_replacementGLF_dead12A_4 = array<f32, 50u>(x_11401, 7841.44921875, x_11404, 1904.38684082, x_11407, x_11409, 83.319999695, x_11416, x_11418, x_11420, -524.127990723, x_11424, x_11429, x_11438, x_11440, -5.599999905, -157.595001221, x_11444, 15.619999886, x_11450, x_11452, 83.319999695, x_11455, x_11464, 15.619999886, 7841.44921875, x_11466, -5.599999905, x_11469, 1904.38684082, -524.127990723, x_11471, x_11473, x_11475, x_11477, x_11479, x_11481, -157.595001221, x_11483, x_11492, (x_11494 - 4.5), -5.599999905, x_11497, dot(acos(x_11499), x_11501), 7841.44921875, x_11504, dot(x_11506, vec2<f32>(8.600000381, 40.049999237)), 1904.38684082, -157.595001221, -524.127990723);
        donor_replacementGLF_dead12c_2 = vec2<f32>(0.800000012, 5.400000095);
        donor_replacementGLF_dead12col_2 = vec3<f32>(6.199999809, 4379.931640625, 7.400000095);
        let x_11517 : f32 = donor_replacementGLF_dead12c_2.y;
        let x_11519 : f32 = x_8265.GLF_dead12resolution.x;
        let x_11521 : f32 = donor_replacementGLF_dead12A_4[4];
        let x_11523 : f32 = x_8265.GLF_dead12resolution.x;
        donor_replacementGLF_dead12col_2 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_11517, x_11517, x_11517) + vec3<f32>(x_11519, ((x_11521 / x_11523) + 50.0), 22.0))));
      }
    }
    let x_11533 : vec4<f32> = x_GLF_color;
    x_GLF_outVarBackup_GLF_color_18 = x_11533;
    x_GLF_color = vec4<f32>(-0.829085648, -3.127534389, -2.174874783, 0.012222524);
    if (true) {
      if (false) {
        donor_replacementGLF_dead8sums_2 = array<f32, 9u>(0.0, 481.875, 6198.641601562, -6.0, -7.800000191, 6.699999809, -9.399999619, 1.100000024, 8679.416992188);
        GLF_dead8rows = 2;
        loop {
          let x_11556 : i32 = GLF_dead8rows;
          if ((x_11556 <= 4)) {
          } else {
            break;
          }
          let x_11558 : i32 = count;
          donor_replacementGLF_dead8sums_2[clamp(x_11558, 0, 8)] = 0.0;
          if (false) {
            break;
          }
          GLF_dead8c_1 = 0;
          loop {
            let x_11570 : i32 = GLF_dead8c_1;
            let x_11571 : i32 = count;
            if ((x_11570 < x_11571)) {
            } else {
              break;
            }
            GLF_dead8r_2 = 0;
            loop {
              let x_11579 : i32 = GLF_dead8r_2;
              let x_11580 : i32 = GLF_dead8rows;
              if ((x_11579 < x_11580)) {
              } else {
                break;
              }
              let x_11582 : i32 = count;
              switch(x_11582) {
                case 8: {
                  let x_13263 : i32 = count;
                  let x_13264 : i32 = clamp(x_13263, 0, 8);
                  let x_13265 : i32 = GLF_dead8c_1;
                  let x_13267 : i32 = GLF_dead8r_2;
                  let x_13270 : f32 = GLF_dead8m44[clamp(x_13265, 0, 3)][clamp(x_13267, 0, 3)];
                  let x_13272 : f32 = donor_replacementGLF_dead8sums_2[x_13264];
                  donor_replacementGLF_dead8sums_2[x_13264] = (x_13272 + x_13270);
                }
                case 7: {
                  if (false) {
                    let x_11789 : f32 = GLF_dead8gl_PointCoord.x;
                    donor_replacementGLF_dead14i = i32(x_11789);
                    let x_11793 : f32 = x_655.GLF_dead8one;
                    donor_replacementGLF_dead14result_2 = x_11793;
                    donor_replacementGLF_dead14thirty_two = 0x1.8p+128;
                    let x_11795 : i32 = donor_replacementGLF_dead14i;
                    let x_11797 : f32 = donor_replacementGLF_dead14thirty_two;
                    if (((f32(x_11795) - (round(x_11797) * floor((f32(x_11795) / round(x_11797))))) <= 0.01)) {
                      let x_11803 : f32 = donor_replacementGLF_dead14result_2;
                      donor_replacementGLF_dead14result_2 = (x_11803 + 100.0);
                    }
                  }
                  if (false) {
                    let x_11809 : f32 = x_655.GLF_dead8one;
                    let x_11811 : f32 = x_655.GLF_dead8one;
                    let x_11815 : f32 = x_655.GLF_dead8one;
                    let x_11819 : f32 = x_655.GLF_dead8one;
                    let x_11822 : f32 = x_655.GLF_dead8one;
                    let x_11824 : f32 = x_655.GLF_dead8one;
                    let x_11827 : f32 = x_655.GLF_dead8one;
                    let x_11829 : f32 = x_655.GLF_dead8one;
                    let x_11831 : vec2<f32> = GLF_dead8gl_PointCoord;
                    let x_11833 : vec2<f32> = x_525.injectionSwitch;
                    let x_11837 : f32 = x_655.GLF_dead8one;
                    let x_11839 : f32 = x_655.GLF_dead8one;
                    let x_11841 : f32 = x_655.GLF_dead8one;
                    let x_11843 : f32 = x_655.GLF_dead8one;
                    let x_11845 : f32 = x_655.GLF_dead8one;
                    let x_11848 : f32 = x_655.GLF_dead8one;
                    let x_11850 : f32 = x_655.GLF_dead8one;
                    let x_11853 : f32 = x_655.GLF_dead8one;
                    let x_11854 : vec2<f32> = GLF_dead8gl_PointCoord;
                    let x_11856 : vec2<f32> = x_525.injectionSwitch;
                    let x_11859 : f32 = x_655.GLF_dead8one;
                    let x_11861 : f32 = x_655.GLF_dead8one;
                    let x_11863 : f32 = x_655.GLF_dead8one;
                    let x_11865 : f32 = x_655.GLF_dead8one;
                    let x_11867 : f32 = x_655.GLF_dead8one;
                    let x_11869 : f32 = x_655.GLF_dead8one;
                    let x_11871 : f32 = x_655.GLF_dead8one;
                    let x_11873 : f32 = x_655.GLF_dead8one;
                    let x_11875 : f32 = x_655.GLF_dead8one;
                    let x_11877 : f32 = x_655.GLF_dead8one;
                    let x_11880 : f32 = x_655.GLF_dead8one;
                    let x_11882 : f32 = x_655.GLF_dead8one;
                    donor_replacementGLF_dead13A_3 = array<f32, 50u>(x_11809, 0.0, dpdxFine(x_11811), -510.993988037, x_11815, -2684.958007812, -717.081970215, -5.599999905, x_11819, 68.959999084, min(x_11822, x_11824), -8.399999619, x_11827, x_11829, -2443.531494141, distance(x_11831, x_11833), -989.581970215, x_11837, x_11839, x_11841, -2443.531494141, min(x_11843, x_11845), x_11848, dpdxFine(x_11850), x_11853, -2684.958007812, distance(x_11854, x_11856), -5.599999905, x_11859, x_11861, x_11863, -717.081970215, 68.959999084, x_11865, 0.0, x_11867, x_11869, -989.581970215, -8.399999619, -510.993988037, 0.0, x_11871, x_11873, x_11875, -717.081970215, -8.399999619, dpdxFine(x_11877), x_11880, -2443.531494141, x_11882);
                    let x_11885 : f32 = donor_replacementGLF_dead13A_3[0];
                    let x_11887 : f32 = x_728.GLF_dead13resolution.x;
                    let x_11890 : f32 = donor_replacementGLF_dead13A_3[4];
                    let x_11892 : f32 = x_728.GLF_dead13resolution.y;
                    GLF_dead13_GLF_color = vec4<f32>((x_11885 / x_11887), (x_11890 / x_11892), 1.0, 1.0);
                  }
                  let x_11896 : vec4<f32> = x_GLF_color;
                  x_GLF_outVarBackup_GLF_color_21 = x_11896;
                  if (false) {
                    let x_11900 : vec4<f32> = GLF_dead5gl_FragCoord;
                    donor_replacementGLF_dead14c_3 = vec3<f32>(x_11900.w, x_11900.z, x_11900.y);
                    let x_11902 : i32 = *(v);
                    let x_11904 : i32 = *(v);
                    let x_11907 : f32 = donor_replacementGLF_dead14c_3[clamp(x_11904, 0, 2)];
                    let x_11908 : i32 = *(v);
                    let x_11911 : f32 = donor_replacementGLF_dead14c_3[clamp(x_11908, 0, 2)];
                    donor_replacementGLF_dead14c_3[clamp(x_11902, 0, 2)] = (x_11907 * x_11911);
                  }
                  x_GLF_color = vec4<f32>(-210.384994507, 36.729999542, 3.299999952, 5.199999809);
                  if (true) {
                    let x_11921 : f32 = gl_FragCoord.x;
                    if ((x_11921 < 0.0)) {
                      let x_11926 : vec4<f32> = GLF_dead15gl_FragCoord;
                      GLF_dead15icoord_7 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_11926.x, x_11926.y)));
                      let x_11932 : i32 = GLF_dead15icoord_7.x;
                      GLF_dead15A_7 = select(-1, 0, ((x_11932 & 1) != 0));
                      let x_11938 : i32 = GLF_dead15icoord_7.x;
                      GLF_dead15B_7 = select(-1, 0, ((x_11938 & 2) != 0));
                      let x_11944 : i32 = GLF_dead15icoord_7.x;
                      GLF_dead15C_7 = select(-1, 0, ((x_11944 & 4) != 0));
                      let x_11950 : i32 = GLF_dead15icoord_7.x;
                      GLF_dead15D_7 = select(-1, 0, ((x_11950 & 8) != 0));
                      let x_11956 : i32 = GLF_dead15icoord_7.x;
                      GLF_dead15E_7 = select(-1, 0, ((x_11956 & 16) != 0));
                      let x_11962 : i32 = GLF_dead15icoord_7.y;
                      GLF_dead15F_7 = select(-1, 0, ((x_11962 & 1) != 0));
                      let x_11968 : i32 = GLF_dead15icoord_7.y;
                      GLF_dead15G_7 = select(-1, 0, ((x_11968 & 2) != 0));
                      let x_11974 : i32 = GLF_dead15icoord_7.y;
                      GLF_dead15H_7 = select(-1, 0, ((x_11974 & 4) != 0));
                      let x_11980 : i32 = GLF_dead15icoord_7.y;
                      GLF_dead15I_7 = select(-1, 0, ((x_11980 & 8) != 0));
                      let x_11986 : i32 = GLF_dead15icoord_7.y;
                      GLF_dead15J_7 = select(-1, 0, ((x_11986 & 16) != 0));
                      let x_11991 : i32 = GLF_dead15A_7;
                      let x_11992 : i32 = GLF_dead15C_7;
                      let x_11995 : i32 = GLF_dead15D_7;
                      let x_11998 : i32 = GLF_dead15E_7;
                      let x_12001 : i32 = GLF_dead15F_7;
                      let x_12003 : i32 = GLF_dead15G_7;
                      let x_12005 : i32 = GLF_dead15H_7;
                      let x_12007 : i32 = GLF_dead15I_7;
                      let x_12010 : i32 = GLF_dead15J_7;
                      let x_12013 : i32 = GLF_dead15B_7;
                      let x_12014 : i32 = GLF_dead15C_7;
                      let x_12017 : i32 = GLF_dead15D_7;
                      let x_12020 : i32 = GLF_dead15E_7;
                      let x_12023 : i32 = GLF_dead15F_7;
                      let x_12025 : i32 = GLF_dead15G_7;
                      let x_12027 : i32 = GLF_dead15H_7;
                      let x_12029 : i32 = GLF_dead15I_7;
                      let x_12032 : i32 = GLF_dead15J_7;
                      let x_12036 : i32 = GLF_dead15A_7;
                      let x_12038 : i32 = GLF_dead15C_7;
                      let x_12040 : i32 = GLF_dead15D_7;
                      let x_12043 : i32 = GLF_dead15E_7;
                      let x_12046 : i32 = GLF_dead15F_7;
                      let x_12048 : i32 = GLF_dead15H_7;
                      let x_12051 : i32 = GLF_dead15I_7;
                      let x_12053 : i32 = GLF_dead15J_7;
                      let x_12057 : i32 = GLF_dead15A_7;
                      let x_12058 : i32 = GLF_dead15B_7;
                      let x_12061 : i32 = GLF_dead15D_7;
                      let x_12064 : i32 = GLF_dead15E_7;
                      let x_12067 : i32 = GLF_dead15G_7;
                      let x_12069 : i32 = GLF_dead15H_7;
                      let x_12072 : i32 = GLF_dead15I_7;
                      let x_12074 : i32 = GLF_dead15J_7;
                      GLF_dead15res_7 = (((((((((((x_11991 | ~(x_11992)) | ~(x_11995)) | ~(x_11998)) | x_12001) | x_12003) | x_12005) | ~(x_12007)) | ~(x_12010)) & ((((((((x_12013 | ~(x_12014)) | ~(x_12017)) | ~(x_12020)) | x_12023) | x_12025) | x_12027) | ~(x_12029)) | ~(x_12032))) & (((((((~(x_12036) | x_12038) | ~(x_12040)) | ~(x_12043)) | x_12046) | ~(x_12048)) | x_12051) | ~(x_12053))) & (((((((x_12057 | ~(x_12058)) | ~(x_12061)) | ~(x_12064)) | x_12067) | ~(x_12069)) | x_12072) | ~(x_12074)));
                      let x_12078 : i32 = GLF_dead15A_7;
                      let x_12079 : i32 = GLF_dead15B_7;
                      let x_12081 : i32 = GLF_dead15C_7;
                      let x_12084 : i32 = GLF_dead15D_7;
                      let x_12086 : i32 = GLF_dead15E_7;
                      let x_12089 : i32 = GLF_dead15F_7;
                      let x_12091 : i32 = GLF_dead15G_7;
                      let x_12093 : i32 = GLF_dead15H_7;
                      let x_12096 : i32 = GLF_dead15I_7;
                      let x_12098 : i32 = GLF_dead15J_7;
                      let x_12101 : i32 = GLF_dead15B_7;
                      let x_12102 : i32 = GLF_dead15C_7;
                      let x_12105 : i32 = GLF_dead15D_7;
                      let x_12108 : i32 = GLF_dead15E_7;
                      let x_12111 : i32 = GLF_dead15F_7;
                      let x_12114 : i32 = GLF_dead15G_7;
                      let x_12117 : i32 = GLF_dead15H_7;
                      let x_12119 : i32 = GLF_dead15I_7;
                      let x_12121 : i32 = GLF_dead15J_7;
                      let x_12125 : i32 = GLF_dead15A_7;
                      let x_12126 : i32 = GLF_dead15C_7;
                      let x_12128 : i32 = GLF_dead15D_7;
                      let x_12131 : i32 = GLF_dead15E_7;
                      let x_12134 : i32 = GLF_dead15G_7;
                      let x_12137 : i32 = GLF_dead15H_7;
                      let x_12139 : i32 = GLF_dead15I_7;
                      let x_12141 : i32 = GLF_dead15J_7;
                      let x_12145 : i32 = GLF_dead15A_7;
                      let x_12146 : i32 = GLF_dead15C_7;
                      let x_12148 : i32 = GLF_dead15D_7;
                      let x_12151 : i32 = GLF_dead15E_7;
                      let x_12154 : i32 = GLF_dead15F_7;
                      let x_12157 : i32 = GLF_dead15H_7;
                      let x_12159 : i32 = GLF_dead15I_7;
                      let x_12161 : i32 = GLF_dead15J_7;
                      let x_12165 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12165 & ((((((((((((x_12078 | x_12079) | ~(x_12081)) | x_12084) | ~(x_12086)) | x_12089) | x_12091) | ~(x_12093)) | x_12096) | ~(x_12098)) & ((((((((x_12101 | ~(x_12102)) | ~(x_12105)) | ~(x_12108)) | ~(x_12111)) | ~(x_12114)) | x_12117) | x_12119) | ~(x_12121))) & (((((((x_12125 | x_12126) | ~(x_12128)) | ~(x_12131)) | ~(x_12134)) | x_12137) | x_12139) | ~(x_12141))) & (((((((x_12145 | x_12146) | ~(x_12148)) | ~(x_12151)) | ~(x_12154)) | x_12157) | x_12159) | ~(x_12161))));
                      let x_12167 : i32 = GLF_dead15A_7;
                      let x_12168 : i32 = GLF_dead15B_7;
                      let x_12170 : i32 = GLF_dead15C_7;
                      let x_12173 : i32 = GLF_dead15D_7;
                      let x_12175 : i32 = GLF_dead15E_7;
                      let x_12178 : i32 = GLF_dead15G_7;
                      let x_12181 : i32 = GLF_dead15H_7;
                      let x_12183 : i32 = GLF_dead15I_7;
                      let x_12185 : i32 = GLF_dead15J_7;
                      let x_12188 : i32 = GLF_dead15A_7;
                      let x_12190 : i32 = GLF_dead15C_7;
                      let x_12192 : i32 = GLF_dead15D_7;
                      let x_12194 : i32 = GLF_dead15E_7;
                      let x_12197 : i32 = GLF_dead15G_7;
                      let x_12200 : i32 = GLF_dead15H_7;
                      let x_12202 : i32 = GLF_dead15I_7;
                      let x_12204 : i32 = GLF_dead15J_7;
                      let x_12208 : i32 = GLF_dead15A_7;
                      let x_12210 : i32 = GLF_dead15B_7;
                      let x_12213 : i32 = GLF_dead15C_7;
                      let x_12216 : i32 = GLF_dead15D_7;
                      let x_12219 : i32 = GLF_dead15E_7;
                      let x_12221 : i32 = GLF_dead15G_7;
                      let x_12224 : i32 = GLF_dead15H_7;
                      let x_12226 : i32 = GLF_dead15I_7;
                      let x_12228 : i32 = GLF_dead15J_7;
                      let x_12232 : i32 = GLF_dead15A_7;
                      let x_12233 : i32 = GLF_dead15B_7;
                      let x_12236 : i32 = GLF_dead15D_7;
                      let x_12238 : i32 = GLF_dead15E_7;
                      let x_12241 : i32 = GLF_dead15G_7;
                      let x_12243 : i32 = GLF_dead15H_7;
                      let x_12245 : i32 = GLF_dead15I_7;
                      let x_12247 : i32 = GLF_dead15J_7;
                      let x_12251 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12251 & (((((((((((x_12167 | x_12168) | ~(x_12170)) | x_12173) | ~(x_12175)) | ~(x_12178)) | x_12181) | x_12183) | ~(x_12185)) & (((((((~(x_12188) | x_12190) | x_12192) | ~(x_12194)) | ~(x_12197)) | x_12200) | x_12202) | ~(x_12204))) & ((((((((~(x_12208) | ~(x_12210)) | ~(x_12213)) | ~(x_12216)) | x_12219) | ~(x_12221)) | x_12224) | x_12226) | ~(x_12228))) & (((((((x_12232 | ~(x_12233)) | x_12236) | ~(x_12238)) | x_12241) | x_12243) | x_12245) | ~(x_12247))));
                      let x_12253 : i32 = GLF_dead15A_7;
                      let x_12255 : i32 = GLF_dead15B_7;
                      let x_12257 : i32 = GLF_dead15C_7;
                      let x_12260 : i32 = GLF_dead15D_7;
                      let x_12262 : i32 = GLF_dead15E_7;
                      let x_12265 : i32 = GLF_dead15G_7;
                      let x_12267 : i32 = GLF_dead15H_7;
                      let x_12269 : i32 = GLF_dead15I_7;
                      let x_12271 : i32 = GLF_dead15J_7;
                      let x_12274 : i32 = GLF_dead15A_7;
                      let x_12275 : i32 = GLF_dead15B_7;
                      let x_12278 : i32 = GLF_dead15D_7;
                      let x_12281 : i32 = GLF_dead15E_7;
                      let x_12283 : i32 = GLF_dead15G_7;
                      let x_12285 : i32 = GLF_dead15H_7;
                      let x_12287 : i32 = GLF_dead15I_7;
                      let x_12289 : i32 = GLF_dead15J_7;
                      let x_12293 : i32 = GLF_dead15A_7;
                      let x_12294 : i32 = GLF_dead15C_7;
                      let x_12297 : i32 = GLF_dead15D_7;
                      let x_12300 : i32 = GLF_dead15E_7;
                      let x_12302 : i32 = GLF_dead15F_7;
                      let x_12304 : i32 = GLF_dead15G_7;
                      let x_12306 : i32 = GLF_dead15H_7;
                      let x_12308 : i32 = GLF_dead15I_7;
                      let x_12310 : i32 = GLF_dead15J_7;
                      let x_12314 : i32 = GLF_dead15A_7;
                      let x_12316 : i32 = GLF_dead15C_7;
                      let x_12318 : i32 = GLF_dead15D_7;
                      let x_12321 : i32 = GLF_dead15E_7;
                      let x_12323 : i32 = GLF_dead15F_7;
                      let x_12325 : i32 = GLF_dead15G_7;
                      let x_12327 : i32 = GLF_dead15H_7;
                      let x_12329 : i32 = GLF_dead15I_7;
                      let x_12331 : i32 = GLF_dead15J_7;
                      let x_12335 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12335 & (((((((((((~(x_12253) | x_12255) | ~(x_12257)) | x_12260) | ~(x_12262)) | x_12265) | x_12267) | x_12269) | ~(x_12271)) & (((((((x_12274 | ~(x_12275)) | ~(x_12278)) | x_12281) | x_12283) | x_12285) | x_12287) | ~(x_12289))) & ((((((((x_12293 | ~(x_12294)) | ~(x_12297)) | x_12300) | x_12302) | x_12304) | x_12306) | x_12308) | ~(x_12310))) & ((((((((~(x_12314) | x_12316) | ~(x_12318)) | x_12321) | x_12323) | x_12325) | x_12327) | x_12329) | ~(x_12331))));
                      let x_12337 : i32 = GLF_dead15A_7;
                      let x_12339 : i32 = GLF_dead15B_7;
                      let x_12342 : i32 = GLF_dead15C_7;
                      let x_12344 : i32 = GLF_dead15D_7;
                      let x_12347 : i32 = GLF_dead15E_7;
                      let x_12350 : i32 = GLF_dead15F_7;
                      let x_12353 : i32 = GLF_dead15G_7;
                      let x_12356 : i32 = GLF_dead15H_7;
                      let x_12359 : i32 = GLF_dead15I_7;
                      let x_12362 : i32 = GLF_dead15J_7;
                      let x_12364 : i32 = GLF_dead15A_7;
                      let x_12365 : i32 = GLF_dead15B_7;
                      let x_12368 : i32 = GLF_dead15C_7;
                      let x_12370 : i32 = GLF_dead15D_7;
                      let x_12372 : i32 = GLF_dead15E_7;
                      let x_12375 : i32 = GLF_dead15F_7;
                      let x_12378 : i32 = GLF_dead15G_7;
                      let x_12381 : i32 = GLF_dead15H_7;
                      let x_12384 : i32 = GLF_dead15I_7;
                      let x_12387 : i32 = GLF_dead15J_7;
                      let x_12390 : i32 = GLF_dead15A_7;
                      let x_12392 : i32 = GLF_dead15B_7;
                      let x_12394 : i32 = GLF_dead15C_7;
                      let x_12396 : i32 = GLF_dead15D_7;
                      let x_12398 : i32 = GLF_dead15E_7;
                      let x_12401 : i32 = GLF_dead15G_7;
                      let x_12404 : i32 = GLF_dead15H_7;
                      let x_12407 : i32 = GLF_dead15I_7;
                      let x_12410 : i32 = GLF_dead15J_7;
                      let x_12413 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12413 & (((((((((((~(x_12337) | ~(x_12339)) | x_12342) | ~(x_12344)) | ~(x_12347)) | ~(x_12350)) | ~(x_12353)) | ~(x_12356)) | ~(x_12359)) | x_12362) & (((((((((x_12364 | ~(x_12365)) | x_12368) | x_12370) | ~(x_12372)) | ~(x_12375)) | ~(x_12378)) | ~(x_12381)) | ~(x_12384)) | x_12387)) & ((((((((~(x_12390) | x_12392) | x_12394) | x_12396) | ~(x_12398)) | ~(x_12401)) | ~(x_12404)) | ~(x_12407)) | x_12410)));
                      let x_12415 : i32 = GLF_dead15C_7;
                      let x_12417 : i32 = GLF_dead15D_7;
                      let x_12420 : i32 = GLF_dead15E_7;
                      let x_12422 : i32 = GLF_dead15F_7;
                      let x_12425 : i32 = GLF_dead15G_7;
                      let x_12428 : i32 = GLF_dead15H_7;
                      let x_12431 : i32 = GLF_dead15I_7;
                      let x_12434 : i32 = GLF_dead15J_7;
                      let x_12436 : i32 = GLF_dead15A_7;
                      let x_12438 : i32 = GLF_dead15C_7;
                      let x_12441 : i32 = GLF_dead15D_7;
                      let x_12444 : i32 = GLF_dead15E_7;
                      let x_12446 : i32 = GLF_dead15G_7;
                      let x_12449 : i32 = GLF_dead15H_7;
                      let x_12452 : i32 = GLF_dead15I_7;
                      let x_12455 : i32 = GLF_dead15J_7;
                      let x_12458 : i32 = GLF_dead15B_7;
                      let x_12459 : i32 = GLF_dead15D_7;
                      let x_12462 : i32 = GLF_dead15E_7;
                      let x_12464 : i32 = GLF_dead15F_7;
                      let x_12467 : i32 = GLF_dead15H_7;
                      let x_12470 : i32 = GLF_dead15I_7;
                      let x_12473 : i32 = GLF_dead15J_7;
                      let x_12476 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12476 & (((((((((~(x_12415) | ~(x_12417)) | x_12420) | ~(x_12422)) | ~(x_12425)) | ~(x_12428)) | ~(x_12431)) | x_12434) & (((((((~(x_12436) | ~(x_12438)) | ~(x_12441)) | x_12444) | ~(x_12446)) | ~(x_12449)) | ~(x_12452)) | x_12455)) & ((((((x_12458 | ~(x_12459)) | x_12462) | ~(x_12464)) | ~(x_12467)) | ~(x_12470)) | x_12473)));
                      let x_12478 : i32 = GLF_dead15A_7;
                      let x_12479 : i32 = GLF_dead15B_7;
                      let x_12481 : i32 = GLF_dead15C_7;
                      let x_12483 : i32 = GLF_dead15D_7;
                      let x_12486 : i32 = GLF_dead15E_7;
                      let x_12488 : i32 = GLF_dead15G_7;
                      let x_12491 : i32 = GLF_dead15H_7;
                      let x_12494 : i32 = GLF_dead15I_7;
                      let x_12497 : i32 = GLF_dead15J_7;
                      let x_12499 : i32 = GLF_dead15B_7;
                      let x_12500 : i32 = GLF_dead15C_7;
                      let x_12502 : i32 = GLF_dead15D_7;
                      let x_12504 : i32 = GLF_dead15E_7;
                      let x_12507 : i32 = GLF_dead15F_7;
                      let x_12509 : i32 = GLF_dead15G_7;
                      let x_12512 : i32 = GLF_dead15H_7;
                      let x_12515 : i32 = GLF_dead15I_7;
                      let x_12518 : i32 = GLF_dead15J_7;
                      let x_12521 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12521 & (((((((((x_12478 | x_12479) | x_12481) | ~(x_12483)) | x_12486) | ~(x_12488)) | ~(x_12491)) | ~(x_12494)) | x_12497) & ((((((((x_12499 | x_12500) | x_12502) | ~(x_12504)) | x_12507) | ~(x_12509)) | ~(x_12512)) | ~(x_12515)) | x_12518)));
                      let x_12523 : i32 = GLF_dead15A_7;
                      let x_12524 : i32 = GLF_dead15C_7;
                      let x_12527 : i32 = GLF_dead15D_7;
                      let x_12529 : i32 = GLF_dead15E_7;
                      let x_12531 : i32 = GLF_dead15F_7;
                      let x_12533 : i32 = GLF_dead15G_7;
                      let x_12536 : i32 = GLF_dead15H_7;
                      let x_12539 : i32 = GLF_dead15I_7;
                      let x_12542 : i32 = GLF_dead15J_7;
                      let x_12544 : i32 = GLF_dead15B_7;
                      let x_12545 : i32 = GLF_dead15C_7;
                      let x_12548 : i32 = GLF_dead15D_7;
                      let x_12550 : i32 = GLF_dead15E_7;
                      let x_12552 : i32 = GLF_dead15F_7;
                      let x_12554 : i32 = GLF_dead15G_7;
                      let x_12557 : i32 = GLF_dead15H_7;
                      let x_12560 : i32 = GLF_dead15J_7;
                      let x_12563 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12563 & (((((((((x_12523 | ~(x_12524)) | x_12527) | x_12529) | x_12531) | ~(x_12533)) | ~(x_12536)) | ~(x_12539)) | x_12542) & (((((((x_12544 | ~(x_12545)) | x_12548) | x_12550) | x_12552) | ~(x_12554)) | ~(x_12557)) | x_12560)));
                      let x_12565 : i32 = GLF_dead15A_7;
                      let x_12567 : i32 = GLF_dead15B_7;
                      let x_12570 : i32 = GLF_dead15C_7;
                      let x_12572 : i32 = GLF_dead15D_7;
                      let x_12574 : i32 = GLF_dead15E_7;
                      let x_12576 : i32 = GLF_dead15F_7;
                      let x_12578 : i32 = GLF_dead15G_7;
                      let x_12581 : i32 = GLF_dead15H_7;
                      let x_12584 : i32 = GLF_dead15I_7;
                      let x_12587 : i32 = GLF_dead15J_7;
                      let x_12589 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12589 & (((((((((~(x_12565) | ~(x_12567)) | x_12570) | x_12572) | x_12574) | x_12576) | ~(x_12578)) | ~(x_12581)) | ~(x_12584)) | x_12587));
                      let x_12591 : i32 = GLF_dead15A_7;
                      let x_12592 : i32 = GLF_dead15B_7;
                      let x_12594 : i32 = GLF_dead15C_7;
                      let x_12597 : i32 = GLF_dead15D_7;
                      let x_12600 : i32 = GLF_dead15E_7;
                      let x_12602 : i32 = GLF_dead15G_7;
                      let x_12604 : i32 = GLF_dead15H_7;
                      let x_12607 : i32 = GLF_dead15I_7;
                      let x_12610 : i32 = GLF_dead15J_7;
                      let x_12612 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12612 & ((((((((x_12591 | x_12592) | ~(x_12594)) | ~(x_12597)) | x_12600) | x_12602) | ~(x_12604)) | ~(x_12607)) | x_12610));
                      let x_12614 : i32 = GLF_dead15B_7;
                      let x_12616 : i32 = GLF_dead15D_7;
                      let x_12618 : i32 = GLF_dead15E_7;
                      let x_12620 : i32 = GLF_dead15F_7;
                      let x_12623 : i32 = GLF_dead15G_7;
                      let x_12625 : i32 = GLF_dead15H_7;
                      let x_12628 : i32 = GLF_dead15I_7;
                      let x_12631 : i32 = GLF_dead15J_7;
                      let x_12633 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12633 & (((((((~(x_12614) | x_12616) | x_12618) | ~(x_12620)) | x_12623) | ~(x_12625)) | ~(x_12628)) | x_12631));
                      let x_12635 : i32 = GLF_dead15B_7;
                      let x_12637 : i32 = GLF_dead15C_7;
                      let x_12639 : i32 = GLF_dead15D_7;
                      let x_12642 : i32 = GLF_dead15E_7;
                      let x_12644 : i32 = GLF_dead15F_7;
                      let x_12646 : i32 = GLF_dead15G_7;
                      let x_12648 : i32 = GLF_dead15H_7;
                      let x_12651 : i32 = GLF_dead15I_7;
                      let x_12654 : i32 = GLF_dead15J_7;
                      let x_12656 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12656 & ((((((((~(x_12635) | x_12637) | ~(x_12639)) | x_12642) | x_12644) | x_12646) | ~(x_12648)) | ~(x_12651)) | x_12654));
                      let x_12658 : i32 = GLF_dead15A_7;
                      let x_12660 : i32 = GLF_dead15B_7;
                      let x_12663 : i32 = GLF_dead15C_7;
                      let x_12666 : i32 = GLF_dead15D_7;
                      let x_12668 : i32 = GLF_dead15E_7;
                      let x_12670 : i32 = GLF_dead15F_7;
                      let x_12672 : i32 = GLF_dead15G_7;
                      let x_12674 : i32 = GLF_dead15I_7;
                      let x_12677 : i32 = GLF_dead15J_7;
                      let x_12679 : i32 = GLF_dead15B_7;
                      let x_12681 : i32 = GLF_dead15C_7;
                      let x_12684 : i32 = GLF_dead15D_7;
                      let x_12686 : i32 = GLF_dead15E_7;
                      let x_12688 : i32 = GLF_dead15F_7;
                      let x_12691 : i32 = GLF_dead15G_7;
                      let x_12694 : i32 = GLF_dead15H_7;
                      let x_12696 : i32 = GLF_dead15I_7;
                      let x_12699 : i32 = GLF_dead15J_7;
                      let x_12702 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12702 & (((((((((~(x_12658) | ~(x_12660)) | ~(x_12663)) | x_12666) | x_12668) | x_12670) | x_12672) | ~(x_12674)) | x_12677) & ((((((((~(x_12679) | ~(x_12681)) | x_12684) | x_12686) | ~(x_12688)) | ~(x_12691)) | x_12694) | ~(x_12696)) | x_12699)));
                      let x_12704 : i32 = GLF_dead15A_7;
                      let x_12706 : i32 = GLF_dead15B_7;
                      let x_12708 : i32 = GLF_dead15C_7;
                      let x_12710 : i32 = GLF_dead15D_7;
                      let x_12712 : i32 = GLF_dead15E_7;
                      let x_12714 : i32 = GLF_dead15H_7;
                      let x_12716 : i32 = GLF_dead15I_7;
                      let x_12719 : i32 = GLF_dead15J_7;
                      let x_12721 : i32 = GLF_dead15B_7;
                      let x_12722 : i32 = GLF_dead15C_7;
                      let x_12724 : i32 = GLF_dead15D_7;
                      let x_12726 : i32 = GLF_dead15E_7;
                      let x_12728 : i32 = GLF_dead15F_7;
                      let x_12730 : i32 = GLF_dead15G_7;
                      let x_12733 : i32 = GLF_dead15H_7;
                      let x_12735 : i32 = GLF_dead15I_7;
                      let x_12738 : i32 = GLF_dead15J_7;
                      let x_12741 : i32 = GLF_dead15A_7;
                      let x_12742 : i32 = GLF_dead15B_7;
                      let x_12744 : i32 = GLF_dead15C_7;
                      let x_12746 : i32 = GLF_dead15D_7;
                      let x_12749 : i32 = GLF_dead15E_7;
                      let x_12751 : i32 = GLF_dead15F_7;
                      let x_12753 : i32 = GLF_dead15G_7;
                      let x_12755 : i32 = GLF_dead15H_7;
                      let x_12757 : i32 = GLF_dead15I_7;
                      let x_12760 : i32 = GLF_dead15J_7;
                      let x_12763 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12763 & (((((((((~(x_12704) | x_12706) | x_12708) | x_12710) | x_12712) | x_12714) | ~(x_12716)) | x_12719) & ((((((((x_12721 | x_12722) | x_12724) | x_12726) | x_12728) | ~(x_12730)) | x_12733) | ~(x_12735)) | x_12738)) & (((((((((x_12741 | x_12742) | x_12744) | ~(x_12746)) | x_12749) | x_12751) | x_12753) | x_12755) | ~(x_12757)) | x_12760)));
                      let x_12765 : i32 = GLF_dead15A_7;
                      let x_12766 : i32 = GLF_dead15B_7;
                      let x_12769 : i32 = GLF_dead15C_7;
                      let x_12771 : i32 = GLF_dead15D_7;
                      let x_12773 : i32 = GLF_dead15E_7;
                      let x_12775 : i32 = GLF_dead15F_7;
                      let x_12777 : i32 = GLF_dead15G_7;
                      let x_12779 : i32 = GLF_dead15H_7;
                      let x_12781 : i32 = GLF_dead15I_7;
                      let x_12784 : i32 = GLF_dead15J_7;
                      let x_12786 : i32 = GLF_dead15B_7;
                      let x_12788 : i32 = GLF_dead15D_7;
                      let x_12790 : i32 = GLF_dead15E_7;
                      let x_12792 : i32 = GLF_dead15F_7;
                      let x_12795 : i32 = GLF_dead15G_7;
                      let x_12798 : i32 = GLF_dead15H_7;
                      let x_12801 : i32 = GLF_dead15I_7;
                      let x_12803 : i32 = GLF_dead15J_7;
                      let x_12806 : i32 = GLF_dead15A_7;
                      let x_12808 : i32 = GLF_dead15B_7;
                      let x_12811 : i32 = GLF_dead15C_7;
                      let x_12813 : i32 = GLF_dead15E_7;
                      let x_12816 : i32 = GLF_dead15G_7;
                      let x_12819 : i32 = GLF_dead15H_7;
                      let x_12822 : i32 = GLF_dead15I_7;
                      let x_12824 : i32 = GLF_dead15J_7;
                      let x_12828 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12828 & (((((((((((x_12765 | ~(x_12766)) | x_12769) | x_12771) | x_12773) | x_12775) | x_12777) | x_12779) | ~(x_12781)) | x_12784) & (((((((~(x_12786) | x_12788) | x_12790) | ~(x_12792)) | ~(x_12795)) | ~(x_12798)) | x_12801) | x_12803)) & (((((((~(x_12806) | ~(x_12808)) | x_12811) | ~(x_12813)) | ~(x_12816)) | ~(x_12819)) | x_12822) | ~(x_12824))));
                      let x_12830 : i32 = GLF_dead15A_7;
                      let x_12832 : i32 = GLF_dead15D_7;
                      let x_12835 : i32 = GLF_dead15E_7;
                      let x_12838 : i32 = GLF_dead15F_7;
                      let x_12841 : i32 = GLF_dead15G_7;
                      let x_12843 : i32 = GLF_dead15H_7;
                      let x_12846 : i32 = GLF_dead15I_7;
                      let x_12848 : i32 = GLF_dead15J_7;
                      let x_12851 : i32 = GLF_dead15A_7;
                      let x_12852 : i32 = GLF_dead15B_7;
                      let x_12854 : i32 = GLF_dead15E_7;
                      let x_12857 : i32 = GLF_dead15F_7;
                      let x_12860 : i32 = GLF_dead15G_7;
                      let x_12863 : i32 = GLF_dead15H_7;
                      let x_12865 : i32 = GLF_dead15I_7;
                      let x_12867 : i32 = GLF_dead15J_7;
                      let x_12871 : i32 = GLF_dead15B_7;
                      let x_12873 : i32 = GLF_dead15C_7;
                      let x_12875 : i32 = GLF_dead15D_7;
                      let x_12877 : i32 = GLF_dead15E_7;
                      let x_12880 : i32 = GLF_dead15F_7;
                      let x_12882 : i32 = GLF_dead15G_7;
                      let x_12885 : i32 = GLF_dead15H_7;
                      let x_12887 : i32 = GLF_dead15I_7;
                      let x_12889 : i32 = GLF_dead15J_7;
                      let x_12893 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12893 & (((((((((~(x_12830) | ~(x_12832)) | ~(x_12835)) | ~(x_12838)) | x_12841) | ~(x_12843)) | x_12846) | ~(x_12848)) & (((((((x_12851 | x_12852) | ~(x_12854)) | ~(x_12857)) | ~(x_12860)) | x_12863) | x_12865) | ~(x_12867))) & ((((((((~(x_12871) | x_12873) | x_12875) | ~(x_12877)) | x_12880) | ~(x_12882)) | x_12885) | x_12887) | ~(x_12889))));
                      let x_12895 : i32 = GLF_dead15B_7;
                      let x_12897 : i32 = GLF_dead15C_7;
                      let x_12900 : i32 = GLF_dead15D_7;
                      let x_12903 : i32 = GLF_dead15E_7;
                      let x_12905 : i32 = GLF_dead15F_7;
                      let x_12907 : i32 = GLF_dead15G_7;
                      let x_12910 : i32 = GLF_dead15H_7;
                      let x_12912 : i32 = GLF_dead15I_7;
                      let x_12914 : i32 = GLF_dead15J_7;
                      let x_12917 : i32 = GLF_dead15A_7;
                      let x_12919 : i32 = GLF_dead15B_7;
                      let x_12922 : i32 = GLF_dead15C_7;
                      let x_12924 : i32 = GLF_dead15D_7;
                      let x_12927 : i32 = GLF_dead15G_7;
                      let x_12929 : i32 = GLF_dead15H_7;
                      let x_12931 : i32 = GLF_dead15I_7;
                      let x_12933 : i32 = GLF_dead15J_7;
                      let x_12937 : i32 = GLF_dead15C_7;
                      let x_12939 : i32 = GLF_dead15D_7;
                      let x_12941 : i32 = GLF_dead15E_7;
                      let x_12944 : i32 = GLF_dead15F_7;
                      let x_12947 : i32 = GLF_dead15G_7;
                      let x_12949 : i32 = GLF_dead15H_7;
                      let x_12951 : i32 = GLF_dead15I_7;
                      let x_12953 : i32 = GLF_dead15J_7;
                      let x_12957 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12957 & ((((((((((~(x_12895) | ~(x_12897)) | ~(x_12900)) | x_12903) | x_12905) | ~(x_12907)) | x_12910) | x_12912) | ~(x_12914)) & (((((((~(x_12917) | ~(x_12919)) | x_12922) | ~(x_12924)) | x_12927) | x_12929) | x_12931) | ~(x_12933))) & (((((((~(x_12937) | x_12939) | ~(x_12941)) | ~(x_12944)) | x_12947) | x_12949) | x_12951) | ~(x_12953))));
                      let x_12959 : i32 = GLF_dead15A_7;
                      let x_12961 : i32 = GLF_dead15B_7;
                      let x_12963 : i32 = GLF_dead15C_7;
                      let x_12965 : i32 = GLF_dead15E_7;
                      let x_12967 : i32 = GLF_dead15F_7;
                      let x_12969 : i32 = GLF_dead15G_7;
                      let x_12971 : i32 = GLF_dead15H_7;
                      let x_12974 : i32 = GLF_dead15I_7;
                      let x_12977 : i32 = GLF_dead15J_7;
                      let x_12979 : i32 = GLF_dead15A_7;
                      let x_12981 : i32 = GLF_dead15B_7;
                      let x_12983 : i32 = GLF_dead15D_7;
                      let x_12985 : i32 = GLF_dead15E_7;
                      let x_12987 : i32 = GLF_dead15G_7;
                      let x_12990 : i32 = GLF_dead15H_7;
                      let x_12992 : i32 = GLF_dead15I_7;
                      let x_12995 : i32 = GLF_dead15J_7;
                      let x_12998 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_12998 & (((((((((~(x_12959) | x_12961) | x_12963) | x_12965) | x_12967) | x_12969) | ~(x_12971)) | ~(x_12974)) | x_12977) & (((((((~(x_12979) | x_12981) | x_12983) | x_12985) | ~(x_12987)) | x_12990) | ~(x_12992)) | x_12995)));
                      let x_13000 : i32 = GLF_dead15A_7;
                      let x_13001 : i32 = GLF_dead15B_7;
                      let x_13003 : i32 = GLF_dead15C_7;
                      let x_13006 : i32 = GLF_dead15D_7;
                      let x_13009 : i32 = GLF_dead15E_7;
                      let x_13012 : i32 = GLF_dead15F_7;
                      let x_13015 : i32 = GLF_dead15H_7;
                      let x_13018 : i32 = GLF_dead15I_7;
                      let x_13020 : i32 = GLF_dead15J_7;
                      let x_13023 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_13023 & ((((((((x_13000 | x_13001) | ~(x_13003)) | ~(x_13006)) | ~(x_13009)) | ~(x_13012)) | ~(x_13015)) | x_13018) | ~(x_13020)));
                      let x_13025 : i32 = GLF_dead15A_7;
                      let x_13027 : i32 = GLF_dead15C_7;
                      let x_13030 : i32 = GLF_dead15E_7;
                      let x_13033 : i32 = GLF_dead15F_7;
                      let x_13036 : i32 = GLF_dead15G_7;
                      let x_13038 : i32 = GLF_dead15H_7;
                      let x_13041 : i32 = GLF_dead15I_7;
                      let x_13043 : i32 = GLF_dead15J_7;
                      let x_13046 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_13046 & (((((((~(x_13025) | ~(x_13027)) | ~(x_13030)) | ~(x_13033)) | x_13036) | ~(x_13038)) | x_13041) | ~(x_13043)));
                      let x_13048 : i32 = GLF_dead15A_7;
                      let x_13049 : i32 = GLF_dead15B_7;
                      let x_13052 : i32 = GLF_dead15C_7;
                      let x_13055 : i32 = GLF_dead15D_7;
                      let x_13057 : i32 = GLF_dead15E_7;
                      let x_13060 : i32 = GLF_dead15F_7;
                      let x_13063 : i32 = GLF_dead15H_7;
                      let x_13066 : i32 = GLF_dead15I_7;
                      let x_13068 : i32 = GLF_dead15J_7;
                      let x_13071 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_13071 & ((((((((x_13048 | ~(x_13049)) | ~(x_13052)) | x_13055) | ~(x_13057)) | ~(x_13060)) | ~(x_13063)) | x_13066) | ~(x_13068)));
                      let x_13073 : i32 = GLF_dead15B_7;
                      let x_13074 : i32 = GLF_dead15C_7;
                      let x_13077 : i32 = GLF_dead15D_7;
                      let x_13079 : i32 = GLF_dead15E_7;
                      let x_13082 : i32 = GLF_dead15F_7;
                      let x_13085 : i32 = GLF_dead15G_7;
                      let x_13088 : i32 = GLF_dead15H_7;
                      let x_13091 : i32 = GLF_dead15I_7;
                      let x_13093 : i32 = GLF_dead15J_7;
                      let x_13096 : i32 = GLF_dead15A_7;
                      let x_13098 : i32 = GLF_dead15B_7;
                      let x_13101 : i32 = GLF_dead15C_7;
                      let x_13104 : i32 = GLF_dead15D_7;
                      let x_13106 : i32 = GLF_dead15E_7;
                      let x_13109 : i32 = GLF_dead15F_7;
                      let x_13111 : i32 = GLF_dead15H_7;
                      let x_13114 : i32 = GLF_dead15I_7;
                      let x_13116 : i32 = GLF_dead15J_7;
                      let x_13120 : i32 = GLF_dead15B_7;
                      let x_13122 : i32 = GLF_dead15C_7;
                      let x_13125 : i32 = GLF_dead15D_7;
                      let x_13127 : i32 = GLF_dead15E_7;
                      let x_13130 : i32 = GLF_dead15F_7;
                      let x_13132 : i32 = GLF_dead15G_7;
                      let x_13135 : i32 = GLF_dead15H_7;
                      let x_13138 : i32 = GLF_dead15I_7;
                      let x_13140 : i32 = GLF_dead15J_7;
                      let x_13144 : i32 = GLF_dead15res_7;
                      GLF_dead15res_7 = (x_13144 & ((((((((((x_13073 | ~(x_13074)) | x_13077) | ~(x_13079)) | ~(x_13082)) | ~(x_13085)) | ~(x_13088)) | x_13091) | ~(x_13093)) & ((((((((~(x_13096) | ~(x_13098)) | ~(x_13101)) | x_13104) | ~(x_13106)) | x_13109) | ~(x_13111)) | x_13114) | ~(x_13116))) & ((((((((~(x_13120) | ~(x_13122)) | x_13125) | ~(x_13127)) | x_13130) | ~(x_13132)) | ~(x_13135)) | x_13138) | ~(x_13140))));
                      let x_13146 : i32 = GLF_dead15res_7;
                      let x_13148 : f32 = select(1.0, 0.0, (x_13146 == 0));
                      let x_13149 : vec3<f32> = vec3<f32>(x_13148, x_13148, x_13148);
                      GLF_dead15_GLF_color = vec4<f32>(x_13149.x, x_13149.y, x_13149.z, 1.0);
                    }
                    let x_13154 : vec4<f32> = x_GLF_outVarBackup_GLF_color_21;
                    x_GLF_color = x_13154;
                    if (false) {
                      let x_13162 : f32 = x_655.GLF_dead8one;
                      let x_13166 : f32 = x_655.GLF_dead8one;
                      let x_13170 : f32 = x_655.GLF_dead8one;
                      let x_13173 : f32 = x_655.GLF_dead8one;
                      let x_13175 : f32 = x_655.GLF_dead8one;
                      let x_13179 : f32 = x_655.GLF_dead8one;
                      let x_13182 : f32 = x_655.GLF_dead8one;
                      let x_13185 : f32 = x_655.GLF_dead8one;
                      let x_13187 : f32 = x_655.GLF_dead8one;
                      let x_13190 : f32 = x_655.GLF_dead8one;
                      let x_13192 : f32 = x_655.GLF_dead8one;
                      let x_13194 : f32 = x_655.GLF_dead8one;
                      let x_13196 : f32 = x_655.GLF_dead8one;
                      let x_13198 : f32 = x_655.GLF_dead8one;
                      let x_13200 : f32 = x_655.GLF_dead8one;
                      let x_13202 : f32 = x_655.GLF_dead8one;
                      let x_13205 : f32 = x_655.GLF_dead8one;
                      let x_13209 : f32 = x_655.GLF_dead8one;
                      let x_13211 : f32 = x_655.GLF_dead8one;
                      let x_13213 : f32 = x_655.GLF_dead8one;
                      let x_13215 : f32 = x_655.GLF_dead8one;
                      let x_13217 : f32 = x_655.GLF_dead8one;
                      let x_13221 : f32 = x_655.GLF_dead8one;
                      donor_replacementGLF_dead12A_5 = array<f32, 50u>(-7229.423339844, -0.800000012, cos(refract(vec2<f32>(-5.0, 0.0), vec2<f32>(-695.763977051, 0.0), x_13162).x), x_13166, 5.599999905, 46.88999939, dpdyFine(x_13170), x_13173, x_13175, -2.400000095, -5197.224609375, -1.0, x_13179, 568.385009766, x_13182, 37.86000061, x_13185, x_13187, 244.24899292, x_13190, 5.599999905, x_13192, 568.385009766, x_13194, x_13196, x_13198, x_13200, dpdyFine(x_13202), -2.400000095, -1.0, -0.800000012, cos(refract(vec2<f32>(-5.0, 0.0), vec2<f32>(-695.763977051, 0.0), x_13205).x), x_13209, 37.86000061, -5197.224609375, -7229.423339844, 244.24899292, 46.88999939, 244.24899292, -7229.423339844, x_13211, x_13213, x_13215, -0.800000012, -5197.224609375, 5.599999905, 37.86000061, -2.400000095, cos(refract(vec2<f32>(-5.0, 0.0), vec2<f32>(-695.763977051, 0.0), x_13217).x), x_13221);
                      let x_13228 : vec2<f32> = x_13226.resolution;
                      donor_replacementGLF_dead12c_3 = sqrt(x_13228);
                      donor_replacementGLF_dead12col_3 = vec3<f32>(0.200000003, -3357.543457031, -8.300000191);
                      let x_13235 : f32 = donor_replacementGLF_dead12c_3.y;
                      let x_13237 : f32 = x_8265.GLF_dead12resolution.x;
                      let x_13239 : f32 = donor_replacementGLF_dead12A_5[39];
                      let x_13241 : f32 = x_8265.GLF_dead12resolution.x;
                      donor_replacementGLF_dead12col_3 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_13235, x_13235, x_13235) + vec3<f32>(x_13237, ((x_13239 / x_13241) + 50.0), 22.0))));
                    }
                  }
                  let x_13250 : i32 = count;
                  let x_13251 : i32 = clamp(x_13250, 0, 8);
                  let x_13252 : i32 = GLF_dead8c_1;
                  let x_13254 : i32 = GLF_dead8r_2;
                  let x_13257 : f32 = GLF_dead8m43[clamp(x_13252, 0, 3)][clamp(x_13254, 0, 2)];
                  let x_13259 : f32 = donor_replacementGLF_dead8sums_2[x_13251];
                  donor_replacementGLF_dead8sums_2[x_13251] = (x_13259 + x_13257);
                }
                case 6: {
                  let x_11714 : i32 = count;
                  let x_11715 : i32 = clamp(x_11714, 0, 8);
                  let x_11716 : i32 = GLF_dead8c_1;
                  let x_11718 : i32 = GLF_dead8r_2;
                  let x_11721 : f32 = GLF_dead8m42[clamp(x_11716, 0, 3)][clamp(x_11718, 0, 1)];
                  let x_11723 : f32 = donor_replacementGLF_dead8sums_2[x_11715];
                  donor_replacementGLF_dead8sums_2[x_11715] = (x_11723 + x_11721);
                  if (false) {
                    donor_replacementGLF_dead12m_1 = vec3<f32>(-9.899999619, -4.800000191, 4.5);
                    let x_11732 : vec2<f32> = GLF_dead8gl_PointCoord;
                    donor_replacementGLF_dead12n = x_11732;
                    GLF_dead12i = -1;
                    loop {
                      let x_11739 : i32 = GLF_dead12i;
                      let x_11741 : f32 = x_326.GLF_dead12injectionSwitch.y;
                      if ((x_11739 <= i32(x_11741))) {
                      } else {
                        break;
                      }
                      let x_11745 : i32 = GLF_dead9MATRIX_N;
                      let x_11747 : i32 = GLF_dead12i;
                      GLF_dead12g_1 = vec2<f32>(f32(x_11745), f32(x_11747));
                      let x_11751 : vec2<f32> = donor_replacementGLF_dead12n;
                      let x_11752 : vec2<f32> = GLF_dead12g_1;
                      GLF_dead12o_1 = mix(x_11751, x_11752, vec2<f32>(0.200000003, 0.200000003));
                      let x_11756 : f32 = x_326.GLF_dead12injectionSwitch.x;
                      let x_11758 : f32 = donor_replacementGLF_dead12m_1.x;
                      if ((x_11756 < x_11758)) {
                        GLF_dead12k_1 = 1;
                        loop {
                          let x_11768 : i32 = GLF_dead12k_1;
                          if ((x_11768 >= 0)) {
                          } else {
                            break;
                          }
                          let x_11770 : vec2<f32> = GLF_dead12o_1;
                          let x_11771 : vec2<f32> = GLF_dead12o_1;
                          GLF_dead12o_1 = (x_11770 + x_11771);
                          let x_11773 : i32 = GLF_dead12k_1;
                          GLF_dead12k_1 = (x_11773 - 1);
                        }
                        let x_11776 : f32 = x_326.GLF_dead12injectionSwitch.x;
                        let x_11777 : vec2<f32> = GLF_dead12o_1;
                        let x_11778 : vec2<f32> = cos(x_11777);
                        donor_replacementGLF_dead12m_1 = vec3<f32>(x_11776, x_11778.x, x_11778.y);
                      }

                      continuing {
                        let x_11782 : i32 = GLF_dead12i;
                        GLF_dead12i = (x_11782 + 1);
                      }
                    }
                  }
                }
                case 5: {
                  let x_11701 : i32 = count;
                  let x_11702 : i32 = clamp(x_11701, 0, 8);
                  let x_11703 : i32 = GLF_dead8c_1;
                  let x_11705 : i32 = GLF_dead8r_2;
                  let x_11708 : f32 = GLF_dead8m34[clamp(x_11703, 0, 2)][clamp(x_11705, 0, 3)];
                  let x_11710 : f32 = donor_replacementGLF_dead8sums_2[x_11702];
                  donor_replacementGLF_dead8sums_2[x_11702] = (x_11710 + x_11708);
                }
                case 4: {
                  let x_11678 : i32 = count;
                  let x_11679 : i32 = clamp(x_11678, 0, 8);
                  let x_11680 : i32 = GLF_dead8c_1;
                  let x_11682 : i32 = GLF_dead8r_2;
                  let x_11685 : f32 = GLF_dead8m33[clamp(x_11680, 0, 2)][clamp(x_11682, 0, 2)];
                  let x_11687 : f32 = donor_replacementGLF_dead8sums_2[x_11679];
                  donor_replacementGLF_dead8sums_2[x_11679] = (x_11687 + x_11685);
                }
                case 3: {
                  let x_11665 : i32 = count;
                  let x_11666 : i32 = clamp(x_11665, 0, 8);
                  let x_11667 : i32 = GLF_dead8c_1;
                  let x_11669 : i32 = GLF_dead8r_2;
                  let x_11672 : f32 = GLF_dead8m32[clamp(x_11667, 0, 2)][clamp(x_11669, 0, 1)];
                  let x_11674 : f32 = donor_replacementGLF_dead8sums_2[x_11666];
                  donor_replacementGLF_dead8sums_2[x_11666] = (x_11674 + x_11672);
                }
                case 2: {
                  let x_11619 : i32 = count;
                  let x_11620 : i32 = clamp(x_11619, 0, 8);
                  let x_11621 : i32 = GLF_dead8c_1;
                  let x_11623 : i32 = GLF_dead8r_2;
                  let x_11626 : f32 = GLF_dead8m24[clamp(x_11621, 0, 1)][clamp(x_11623, 0, 3)];
                  let x_11628 : f32 = donor_replacementGLF_dead8sums_2[x_11620];
                  donor_replacementGLF_dead8sums_2[x_11620] = (x_11628 + x_11626);
                }
                case 1: {
                  let x_11606 : i32 = count;
                  let x_11607 : i32 = clamp(x_11606, 0, 8);
                  let x_11608 : i32 = GLF_dead8c_1;
                  let x_11610 : i32 = GLF_dead8r_2;
                  let x_11613 : f32 = GLF_dead8m23[clamp(x_11608, 0, 1)][clamp(x_11610, 0, 2)];
                  let x_11615 : f32 = donor_replacementGLF_dead8sums_2[x_11607];
                  donor_replacementGLF_dead8sums_2[x_11607] = (x_11615 + x_11613);
                }
                case 0: {
                  let x_11593 : i32 = count;
                  let x_11594 : i32 = clamp(x_11593, 0, 8);
                  let x_11595 : i32 = GLF_dead8c_1;
                  let x_11597 : i32 = GLF_dead8r_2;
                  let x_11600 : f32 = GLF_dead8m22[clamp(x_11595, 0, 1)][clamp(x_11597, 0, 1)];
                  let x_11602 : f32 = donor_replacementGLF_dead8sums_2[x_11594];
                  donor_replacementGLF_dead8sums_2[x_11594] = (x_11602 + x_11600);
                }
                default: {
                }
              }

              continuing {
                let x_13277 : i32 = GLF_dead8r_2;
                GLF_dead8r_2 = (x_13277 + 1);
              }
            }

            continuing {
              let x_13279 : i32 = GLF_dead8c_1;
              GLF_dead8c_1 = (x_13279 + 1);
            }
          }
          let x_13281 : i32 = count;
          let x_13282 : i32 = clamp(x_13281, 0, 8);
          let x_13284 : f32 = donor_replacementGLF_dead8sums_2[x_13282];
          donor_replacementGLF_dead8sums_2[x_13282] = (x_13284 / 16.0);
          let x_13287 : i32 = count;
          count = (x_13287 + 1);

          continuing {
            let x_13289 : i32 = GLF_dead8rows;
            GLF_dead8rows = (x_13289 + 1);
          }
        }
      }
      let x_13292 : f32 = x_525.injectionSwitch.x;
      let x_13294 : f32 = x_525.injectionSwitch.y;
      if ((x_13292 > x_13294)) {
        let x_13299 : vec4<f32> = GLF_dead15gl_FragCoord;
        GLF_dead15icoord_8 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_13299.x, x_13299.y)));
        let x_13305 : i32 = GLF_dead15icoord_8.x;
        GLF_dead15A_8 = select(-1, 0, ((x_13305 & 1) != 0));
        let x_13311 : i32 = GLF_dead15icoord_8.x;
        GLF_dead15B_8 = select(-1, 0, ((x_13311 & 2) != 0));
        let x_13317 : i32 = GLF_dead15icoord_8.x;
        GLF_dead15C_8 = select(-1, 0, ((x_13317 & 4) != 0));
        let x_13323 : i32 = GLF_dead15icoord_8.x;
        GLF_dead15D_8 = select(-1, 0, ((x_13323 & 8) != 0));
        let x_13329 : i32 = GLF_dead15icoord_8.x;
        GLF_dead15E_8 = select(-1, 0, ((x_13329 & 16) != 0));
        let x_13335 : i32 = GLF_dead15icoord_8.y;
        GLF_dead15F_8 = select(-1, 0, ((x_13335 & 1) != 0));
        let x_13341 : i32 = GLF_dead15icoord_8.y;
        GLF_dead15G_8 = select(-1, 0, ((x_13341 & 2) != 0));
        let x_13347 : i32 = GLF_dead15icoord_8.y;
        GLF_dead15H_8 = select(-1, 0, ((x_13347 & 4) != 0));
        let x_13353 : i32 = GLF_dead15icoord_8.y;
        GLF_dead15I_8 = select(-1, 0, ((x_13353 & 8) != 0));
        let x_13359 : i32 = GLF_dead15icoord_8.y;
        GLF_dead15J_8 = select(-1, 0, ((x_13359 & 16) != 0));
        let x_13364 : i32 = GLF_dead15A_8;
        let x_13365 : i32 = GLF_dead15C_8;
        let x_13368 : i32 = GLF_dead15D_8;
        let x_13371 : i32 = GLF_dead15E_8;
        let x_13374 : i32 = GLF_dead15F_8;
        let x_13376 : i32 = GLF_dead15G_8;
        let x_13378 : i32 = GLF_dead15H_8;
        let x_13380 : i32 = GLF_dead15I_8;
        let x_13383 : i32 = GLF_dead15J_8;
        let x_13386 : i32 = GLF_dead15B_8;
        let x_13387 : i32 = GLF_dead15C_8;
        let x_13390 : i32 = GLF_dead15D_8;
        let x_13393 : i32 = GLF_dead15E_8;
        let x_13396 : i32 = GLF_dead15F_8;
        let x_13398 : i32 = GLF_dead15G_8;
        let x_13400 : i32 = GLF_dead15H_8;
        let x_13402 : i32 = GLF_dead15I_8;
        let x_13405 : i32 = GLF_dead15J_8;
        let x_13409 : i32 = GLF_dead15A_8;
        let x_13411 : i32 = GLF_dead15C_8;
        let x_13413 : i32 = GLF_dead15D_8;
        let x_13416 : i32 = GLF_dead15E_8;
        let x_13419 : i32 = GLF_dead15F_8;
        let x_13421 : i32 = GLF_dead15H_8;
        let x_13424 : i32 = GLF_dead15I_8;
        let x_13426 : i32 = GLF_dead15J_8;
        let x_13430 : i32 = GLF_dead15A_8;
        let x_13431 : i32 = GLF_dead15B_8;
        let x_13434 : i32 = GLF_dead15D_8;
        let x_13437 : i32 = GLF_dead15E_8;
        let x_13440 : i32 = GLF_dead15G_8;
        let x_13442 : i32 = GLF_dead15H_8;
        let x_13445 : i32 = GLF_dead15I_8;
        let x_13447 : i32 = GLF_dead15J_8;
        GLF_dead15res_8 = (((((((((((x_13364 | ~(x_13365)) | ~(x_13368)) | ~(x_13371)) | x_13374) | x_13376) | x_13378) | ~(x_13380)) | ~(x_13383)) & ((((((((x_13386 | ~(x_13387)) | ~(x_13390)) | ~(x_13393)) | x_13396) | x_13398) | x_13400) | ~(x_13402)) | ~(x_13405))) & (((((((~(x_13409) | x_13411) | ~(x_13413)) | ~(x_13416)) | x_13419) | ~(x_13421)) | x_13424) | ~(x_13426))) & (((((((x_13430 | ~(x_13431)) | ~(x_13434)) | ~(x_13437)) | x_13440) | ~(x_13442)) | x_13445) | ~(x_13447)));
        let x_13451 : i32 = GLF_dead15A_8;
        let x_13452 : i32 = GLF_dead15B_8;
        let x_13454 : i32 = GLF_dead15C_8;
        let x_13457 : i32 = GLF_dead15D_8;
        let x_13459 : i32 = GLF_dead15E_8;
        let x_13462 : i32 = GLF_dead15F_8;
        let x_13464 : i32 = GLF_dead15G_8;
        let x_13466 : i32 = GLF_dead15H_8;
        let x_13469 : i32 = GLF_dead15I_8;
        let x_13471 : i32 = GLF_dead15J_8;
        let x_13474 : i32 = GLF_dead15B_8;
        let x_13475 : i32 = GLF_dead15C_8;
        let x_13478 : i32 = GLF_dead15D_8;
        let x_13481 : i32 = GLF_dead15E_8;
        let x_13484 : i32 = GLF_dead15F_8;
        let x_13487 : i32 = GLF_dead15G_8;
        let x_13490 : i32 = GLF_dead15H_8;
        let x_13492 : i32 = GLF_dead15I_8;
        let x_13494 : i32 = GLF_dead15J_8;
        let x_13498 : i32 = GLF_dead15A_8;
        let x_13499 : i32 = GLF_dead15C_8;
        let x_13501 : i32 = GLF_dead15D_8;
        let x_13504 : i32 = GLF_dead15E_8;
        let x_13507 : i32 = GLF_dead15G_8;
        let x_13510 : i32 = GLF_dead15H_8;
        let x_13512 : i32 = GLF_dead15I_8;
        let x_13514 : i32 = GLF_dead15J_8;
        let x_13518 : i32 = GLF_dead15A_8;
        let x_13519 : i32 = GLF_dead15C_8;
        let x_13521 : i32 = GLF_dead15D_8;
        let x_13524 : i32 = GLF_dead15E_8;
        let x_13527 : i32 = GLF_dead15F_8;
        let x_13530 : i32 = GLF_dead15H_8;
        let x_13532 : i32 = GLF_dead15I_8;
        let x_13534 : i32 = GLF_dead15J_8;
        let x_13538 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13538 & ((((((((((((x_13451 | x_13452) | ~(x_13454)) | x_13457) | ~(x_13459)) | x_13462) | x_13464) | ~(x_13466)) | x_13469) | ~(x_13471)) & ((((((((x_13474 | ~(x_13475)) | ~(x_13478)) | ~(x_13481)) | ~(x_13484)) | ~(x_13487)) | x_13490) | x_13492) | ~(x_13494))) & (((((((x_13498 | x_13499) | ~(x_13501)) | ~(x_13504)) | ~(x_13507)) | x_13510) | x_13512) | ~(x_13514))) & (((((((x_13518 | x_13519) | ~(x_13521)) | ~(x_13524)) | ~(x_13527)) | x_13530) | x_13532) | ~(x_13534))));
        let x_13540 : i32 = GLF_dead15A_8;
        let x_13541 : i32 = GLF_dead15B_8;
        let x_13543 : i32 = GLF_dead15C_8;
        let x_13546 : i32 = GLF_dead15D_8;
        let x_13548 : i32 = GLF_dead15E_8;
        let x_13551 : i32 = GLF_dead15G_8;
        let x_13554 : i32 = GLF_dead15H_8;
        let x_13556 : i32 = GLF_dead15I_8;
        let x_13558 : i32 = GLF_dead15J_8;
        let x_13561 : i32 = GLF_dead15A_8;
        let x_13563 : i32 = GLF_dead15C_8;
        let x_13565 : i32 = GLF_dead15D_8;
        let x_13567 : i32 = GLF_dead15E_8;
        let x_13570 : i32 = GLF_dead15G_8;
        let x_13573 : i32 = GLF_dead15H_8;
        let x_13575 : i32 = GLF_dead15I_8;
        let x_13577 : i32 = GLF_dead15J_8;
        let x_13581 : i32 = GLF_dead15A_8;
        let x_13583 : i32 = GLF_dead15B_8;
        let x_13586 : i32 = GLF_dead15C_8;
        let x_13589 : i32 = GLF_dead15D_8;
        let x_13592 : i32 = GLF_dead15E_8;
        let x_13594 : i32 = GLF_dead15G_8;
        let x_13597 : i32 = GLF_dead15H_8;
        let x_13599 : i32 = GLF_dead15I_8;
        let x_13601 : i32 = GLF_dead15J_8;
        let x_13605 : i32 = GLF_dead15A_8;
        let x_13606 : i32 = GLF_dead15B_8;
        let x_13609 : i32 = GLF_dead15D_8;
        let x_13611 : i32 = GLF_dead15E_8;
        let x_13614 : i32 = GLF_dead15G_8;
        let x_13616 : i32 = GLF_dead15H_8;
        let x_13618 : i32 = GLF_dead15I_8;
        let x_13620 : i32 = GLF_dead15J_8;
        let x_13624 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13624 & (((((((((((x_13540 | x_13541) | ~(x_13543)) | x_13546) | ~(x_13548)) | ~(x_13551)) | x_13554) | x_13556) | ~(x_13558)) & (((((((~(x_13561) | x_13563) | x_13565) | ~(x_13567)) | ~(x_13570)) | x_13573) | x_13575) | ~(x_13577))) & ((((((((~(x_13581) | ~(x_13583)) | ~(x_13586)) | ~(x_13589)) | x_13592) | ~(x_13594)) | x_13597) | x_13599) | ~(x_13601))) & (((((((x_13605 | ~(x_13606)) | x_13609) | ~(x_13611)) | x_13614) | x_13616) | x_13618) | ~(x_13620))));
        let x_13626 : i32 = GLF_dead15A_8;
        let x_13628 : i32 = GLF_dead15B_8;
        let x_13630 : i32 = GLF_dead15C_8;
        let x_13633 : i32 = GLF_dead15D_8;
        let x_13635 : i32 = GLF_dead15E_8;
        let x_13638 : i32 = GLF_dead15G_8;
        let x_13640 : i32 = GLF_dead15H_8;
        let x_13642 : i32 = GLF_dead15I_8;
        let x_13644 : i32 = GLF_dead15J_8;
        let x_13647 : i32 = GLF_dead15A_8;
        let x_13648 : i32 = GLF_dead15B_8;
        let x_13651 : i32 = GLF_dead15D_8;
        let x_13654 : i32 = GLF_dead15E_8;
        let x_13656 : i32 = GLF_dead15G_8;
        let x_13658 : i32 = GLF_dead15H_8;
        let x_13660 : i32 = GLF_dead15I_8;
        let x_13662 : i32 = GLF_dead15J_8;
        let x_13666 : i32 = GLF_dead15A_8;
        let x_13667 : i32 = GLF_dead15C_8;
        let x_13670 : i32 = GLF_dead15D_8;
        let x_13673 : i32 = GLF_dead15E_8;
        let x_13675 : i32 = GLF_dead15F_8;
        let x_13677 : i32 = GLF_dead15G_8;
        let x_13679 : i32 = GLF_dead15H_8;
        let x_13681 : i32 = GLF_dead15I_8;
        let x_13683 : i32 = GLF_dead15J_8;
        let x_13687 : i32 = GLF_dead15A_8;
        let x_13689 : i32 = GLF_dead15C_8;
        let x_13691 : i32 = GLF_dead15D_8;
        let x_13694 : i32 = GLF_dead15E_8;
        let x_13696 : i32 = GLF_dead15F_8;
        let x_13698 : i32 = GLF_dead15G_8;
        let x_13700 : i32 = GLF_dead15H_8;
        let x_13702 : i32 = GLF_dead15I_8;
        let x_13704 : i32 = GLF_dead15J_8;
        let x_13708 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13708 & (((((((((((~(x_13626) | x_13628) | ~(x_13630)) | x_13633) | ~(x_13635)) | x_13638) | x_13640) | x_13642) | ~(x_13644)) & (((((((x_13647 | ~(x_13648)) | ~(x_13651)) | x_13654) | x_13656) | x_13658) | x_13660) | ~(x_13662))) & ((((((((x_13666 | ~(x_13667)) | ~(x_13670)) | x_13673) | x_13675) | x_13677) | x_13679) | x_13681) | ~(x_13683))) & ((((((((~(x_13687) | x_13689) | ~(x_13691)) | x_13694) | x_13696) | x_13698) | x_13700) | x_13702) | ~(x_13704))));
        let x_13710 : i32 = GLF_dead15A_8;
        let x_13712 : i32 = GLF_dead15B_8;
        let x_13715 : i32 = GLF_dead15C_8;
        let x_13717 : i32 = GLF_dead15D_8;
        let x_13720 : i32 = GLF_dead15E_8;
        let x_13723 : i32 = GLF_dead15F_8;
        let x_13726 : i32 = GLF_dead15G_8;
        let x_13729 : i32 = GLF_dead15H_8;
        let x_13732 : i32 = GLF_dead15I_8;
        let x_13735 : i32 = GLF_dead15J_8;
        let x_13737 : i32 = GLF_dead15A_8;
        let x_13738 : i32 = GLF_dead15B_8;
        let x_13741 : i32 = GLF_dead15C_8;
        let x_13743 : i32 = GLF_dead15D_8;
        let x_13745 : i32 = GLF_dead15E_8;
        let x_13748 : i32 = GLF_dead15F_8;
        let x_13751 : i32 = GLF_dead15G_8;
        let x_13754 : i32 = GLF_dead15H_8;
        let x_13757 : i32 = GLF_dead15I_8;
        let x_13760 : i32 = GLF_dead15J_8;
        let x_13763 : i32 = GLF_dead15A_8;
        let x_13765 : i32 = GLF_dead15B_8;
        let x_13767 : i32 = GLF_dead15C_8;
        let x_13769 : i32 = GLF_dead15D_8;
        let x_13771 : i32 = GLF_dead15E_8;
        let x_13774 : i32 = GLF_dead15G_8;
        let x_13777 : i32 = GLF_dead15H_8;
        let x_13780 : i32 = GLF_dead15I_8;
        let x_13783 : i32 = GLF_dead15J_8;
        let x_13786 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13786 & (((((((((((~(x_13710) | ~(x_13712)) | x_13715) | ~(x_13717)) | ~(x_13720)) | ~(x_13723)) | ~(x_13726)) | ~(x_13729)) | ~(x_13732)) | x_13735) & (((((((((x_13737 | ~(x_13738)) | x_13741) | x_13743) | ~(x_13745)) | ~(x_13748)) | ~(x_13751)) | ~(x_13754)) | ~(x_13757)) | x_13760)) & ((((((((~(x_13763) | x_13765) | x_13767) | x_13769) | ~(x_13771)) | ~(x_13774)) | ~(x_13777)) | ~(x_13780)) | x_13783)));
        let x_13788 : i32 = GLF_dead15C_8;
        let x_13790 : i32 = GLF_dead15D_8;
        let x_13793 : i32 = GLF_dead15E_8;
        let x_13795 : i32 = GLF_dead15F_8;
        let x_13798 : i32 = GLF_dead15G_8;
        let x_13801 : i32 = GLF_dead15H_8;
        let x_13804 : i32 = GLF_dead15I_8;
        let x_13807 : i32 = GLF_dead15J_8;
        let x_13809 : i32 = GLF_dead15A_8;
        let x_13811 : i32 = GLF_dead15C_8;
        let x_13814 : i32 = GLF_dead15D_8;
        let x_13817 : i32 = GLF_dead15E_8;
        let x_13819 : i32 = GLF_dead15G_8;
        let x_13822 : i32 = GLF_dead15H_8;
        let x_13825 : i32 = GLF_dead15I_8;
        let x_13828 : i32 = GLF_dead15J_8;
        let x_13831 : i32 = GLF_dead15B_8;
        let x_13832 : i32 = GLF_dead15D_8;
        let x_13835 : i32 = GLF_dead15E_8;
        let x_13837 : i32 = GLF_dead15F_8;
        let x_13840 : i32 = GLF_dead15H_8;
        let x_13843 : i32 = GLF_dead15I_8;
        let x_13846 : i32 = GLF_dead15J_8;
        let x_13849 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13849 & (((((((((~(x_13788) | ~(x_13790)) | x_13793) | ~(x_13795)) | ~(x_13798)) | ~(x_13801)) | ~(x_13804)) | x_13807) & (((((((~(x_13809) | ~(x_13811)) | ~(x_13814)) | x_13817) | ~(x_13819)) | ~(x_13822)) | ~(x_13825)) | x_13828)) & ((((((x_13831 | ~(x_13832)) | x_13835) | ~(x_13837)) | ~(x_13840)) | ~(x_13843)) | x_13846)));
        let x_13851 : i32 = GLF_dead15A_8;
        let x_13852 : i32 = GLF_dead15B_8;
        let x_13854 : i32 = GLF_dead15C_8;
        let x_13856 : i32 = GLF_dead15D_8;
        let x_13859 : i32 = GLF_dead15E_8;
        let x_13861 : i32 = GLF_dead15G_8;
        let x_13864 : i32 = GLF_dead15H_8;
        let x_13867 : i32 = GLF_dead15I_8;
        let x_13870 : i32 = GLF_dead15J_8;
        let x_13872 : i32 = GLF_dead15B_8;
        let x_13873 : i32 = GLF_dead15C_8;
        let x_13875 : i32 = GLF_dead15D_8;
        let x_13877 : i32 = GLF_dead15E_8;
        let x_13880 : i32 = GLF_dead15F_8;
        let x_13882 : i32 = GLF_dead15G_8;
        let x_13885 : i32 = GLF_dead15H_8;
        let x_13888 : i32 = GLF_dead15I_8;
        let x_13891 : i32 = GLF_dead15J_8;
        let x_13894 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13894 & (((((((((x_13851 | x_13852) | x_13854) | ~(x_13856)) | x_13859) | ~(x_13861)) | ~(x_13864)) | ~(x_13867)) | x_13870) & ((((((((x_13872 | x_13873) | x_13875) | ~(x_13877)) | x_13880) | ~(x_13882)) | ~(x_13885)) | ~(x_13888)) | x_13891)));
        let x_13896 : i32 = GLF_dead15A_8;
        let x_13897 : i32 = GLF_dead15C_8;
        let x_13900 : i32 = GLF_dead15D_8;
        let x_13902 : i32 = GLF_dead15E_8;
        let x_13904 : i32 = GLF_dead15F_8;
        let x_13906 : i32 = GLF_dead15G_8;
        let x_13909 : i32 = GLF_dead15H_8;
        let x_13912 : i32 = GLF_dead15I_8;
        let x_13915 : i32 = GLF_dead15J_8;
        let x_13917 : i32 = GLF_dead15B_8;
        let x_13918 : i32 = GLF_dead15C_8;
        let x_13921 : i32 = GLF_dead15D_8;
        let x_13923 : i32 = GLF_dead15E_8;
        let x_13925 : i32 = GLF_dead15F_8;
        let x_13927 : i32 = GLF_dead15G_8;
        let x_13930 : i32 = GLF_dead15H_8;
        let x_13933 : i32 = GLF_dead15J_8;
        let x_13936 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13936 & (((((((((x_13896 | ~(x_13897)) | x_13900) | x_13902) | x_13904) | ~(x_13906)) | ~(x_13909)) | ~(x_13912)) | x_13915) & (((((((x_13917 | ~(x_13918)) | x_13921) | x_13923) | x_13925) | ~(x_13927)) | ~(x_13930)) | x_13933)));
        let x_13938 : i32 = GLF_dead15A_8;
        let x_13940 : i32 = GLF_dead15B_8;
        let x_13943 : i32 = GLF_dead15C_8;
        let x_13945 : i32 = GLF_dead15D_8;
        let x_13947 : i32 = GLF_dead15E_8;
        let x_13949 : i32 = GLF_dead15F_8;
        let x_13951 : i32 = GLF_dead15G_8;
        let x_13954 : i32 = GLF_dead15H_8;
        let x_13957 : i32 = GLF_dead15I_8;
        let x_13960 : i32 = GLF_dead15J_8;
        let x_13962 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13962 & (((((((((~(x_13938) | ~(x_13940)) | x_13943) | x_13945) | x_13947) | x_13949) | ~(x_13951)) | ~(x_13954)) | ~(x_13957)) | x_13960));
        let x_13964 : i32 = GLF_dead15A_8;
        let x_13965 : i32 = GLF_dead15B_8;
        let x_13967 : i32 = GLF_dead15C_8;
        let x_13970 : i32 = GLF_dead15D_8;
        let x_13973 : i32 = GLF_dead15E_8;
        let x_13975 : i32 = GLF_dead15G_8;
        let x_13977 : i32 = GLF_dead15H_8;
        let x_13980 : i32 = GLF_dead15I_8;
        let x_13983 : i32 = GLF_dead15J_8;
        let x_13985 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_13985 & ((((((((x_13964 | x_13965) | ~(x_13967)) | ~(x_13970)) | x_13973) | x_13975) | ~(x_13977)) | ~(x_13980)) | x_13983));
        let x_13987 : i32 = GLF_dead15B_8;
        let x_13989 : i32 = GLF_dead15D_8;
        let x_13991 : i32 = GLF_dead15E_8;
        let x_13993 : i32 = GLF_dead15F_8;
        let x_13996 : i32 = GLF_dead15G_8;
        let x_13998 : i32 = GLF_dead15H_8;
        let x_14001 : i32 = GLF_dead15I_8;
        let x_14004 : i32 = GLF_dead15J_8;
        let x_14006 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14006 & (((((((~(x_13987) | x_13989) | x_13991) | ~(x_13993)) | x_13996) | ~(x_13998)) | ~(x_14001)) | x_14004));
        let x_14008 : i32 = GLF_dead15B_8;
        let x_14010 : i32 = GLF_dead15C_8;
        let x_14012 : i32 = GLF_dead15D_8;
        let x_14015 : i32 = GLF_dead15E_8;
        let x_14017 : i32 = GLF_dead15F_8;
        let x_14019 : i32 = GLF_dead15G_8;
        let x_14021 : i32 = GLF_dead15H_8;
        let x_14024 : i32 = GLF_dead15I_8;
        let x_14027 : i32 = GLF_dead15J_8;
        let x_14029 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14029 & ((((((((~(x_14008) | x_14010) | ~(x_14012)) | x_14015) | x_14017) | x_14019) | ~(x_14021)) | ~(x_14024)) | x_14027));
        let x_14031 : i32 = GLF_dead15A_8;
        let x_14033 : i32 = GLF_dead15B_8;
        let x_14036 : i32 = GLF_dead15C_8;
        let x_14039 : i32 = GLF_dead15D_8;
        let x_14041 : i32 = GLF_dead15E_8;
        let x_14043 : i32 = GLF_dead15F_8;
        let x_14045 : i32 = GLF_dead15G_8;
        let x_14047 : i32 = GLF_dead15I_8;
        let x_14050 : i32 = GLF_dead15J_8;
        let x_14052 : i32 = GLF_dead15B_8;
        let x_14054 : i32 = GLF_dead15C_8;
        let x_14057 : i32 = GLF_dead15D_8;
        let x_14059 : i32 = GLF_dead15E_8;
        let x_14061 : i32 = GLF_dead15F_8;
        let x_14064 : i32 = GLF_dead15G_8;
        let x_14067 : i32 = GLF_dead15H_8;
        let x_14069 : i32 = GLF_dead15I_8;
        let x_14072 : i32 = GLF_dead15J_8;
        let x_14075 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14075 & (((((((((~(x_14031) | ~(x_14033)) | ~(x_14036)) | x_14039) | x_14041) | x_14043) | x_14045) | ~(x_14047)) | x_14050) & ((((((((~(x_14052) | ~(x_14054)) | x_14057) | x_14059) | ~(x_14061)) | ~(x_14064)) | x_14067) | ~(x_14069)) | x_14072)));
        let x_14077 : i32 = GLF_dead15A_8;
        let x_14079 : i32 = GLF_dead15B_8;
        let x_14081 : i32 = GLF_dead15C_8;
        let x_14083 : i32 = GLF_dead15D_8;
        let x_14085 : i32 = GLF_dead15E_8;
        let x_14087 : i32 = GLF_dead15H_8;
        let x_14089 : i32 = GLF_dead15I_8;
        let x_14092 : i32 = GLF_dead15J_8;
        let x_14094 : i32 = GLF_dead15B_8;
        let x_14095 : i32 = GLF_dead15C_8;
        let x_14097 : i32 = GLF_dead15D_8;
        let x_14099 : i32 = GLF_dead15E_8;
        let x_14101 : i32 = GLF_dead15F_8;
        let x_14103 : i32 = GLF_dead15G_8;
        let x_14106 : i32 = GLF_dead15H_8;
        let x_14108 : i32 = GLF_dead15I_8;
        let x_14111 : i32 = GLF_dead15J_8;
        let x_14114 : i32 = GLF_dead15A_8;
        let x_14115 : i32 = GLF_dead15B_8;
        let x_14117 : i32 = GLF_dead15C_8;
        let x_14119 : i32 = GLF_dead15D_8;
        let x_14122 : i32 = GLF_dead15E_8;
        let x_14124 : i32 = GLF_dead15F_8;
        let x_14126 : i32 = GLF_dead15G_8;
        let x_14128 : i32 = GLF_dead15H_8;
        let x_14130 : i32 = GLF_dead15I_8;
        let x_14133 : i32 = GLF_dead15J_8;
        let x_14136 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14136 & (((((((((~(x_14077) | x_14079) | x_14081) | x_14083) | x_14085) | x_14087) | ~(x_14089)) | x_14092) & ((((((((x_14094 | x_14095) | x_14097) | x_14099) | x_14101) | ~(x_14103)) | x_14106) | ~(x_14108)) | x_14111)) & (((((((((x_14114 | x_14115) | x_14117) | ~(x_14119)) | x_14122) | x_14124) | x_14126) | x_14128) | ~(x_14130)) | x_14133)));
        let x_14138 : i32 = GLF_dead15A_8;
        let x_14139 : i32 = GLF_dead15B_8;
        let x_14142 : i32 = GLF_dead15C_8;
        let x_14144 : i32 = GLF_dead15D_8;
        let x_14146 : i32 = GLF_dead15E_8;
        let x_14148 : i32 = GLF_dead15F_8;
        let x_14150 : i32 = GLF_dead15G_8;
        let x_14152 : i32 = GLF_dead15H_8;
        let x_14154 : i32 = GLF_dead15I_8;
        let x_14157 : i32 = GLF_dead15J_8;
        let x_14159 : i32 = GLF_dead15B_8;
        let x_14161 : i32 = GLF_dead15D_8;
        let x_14163 : i32 = GLF_dead15E_8;
        let x_14165 : i32 = GLF_dead15F_8;
        let x_14168 : i32 = GLF_dead15G_8;
        let x_14171 : i32 = GLF_dead15H_8;
        let x_14174 : i32 = GLF_dead15I_8;
        let x_14176 : i32 = GLF_dead15J_8;
        let x_14179 : i32 = GLF_dead15A_8;
        let x_14181 : i32 = GLF_dead15B_8;
        let x_14184 : i32 = GLF_dead15C_8;
        let x_14186 : i32 = GLF_dead15E_8;
        let x_14189 : i32 = GLF_dead15G_8;
        let x_14192 : i32 = GLF_dead15H_8;
        let x_14195 : i32 = GLF_dead15I_8;
        let x_14197 : i32 = GLF_dead15J_8;
        let x_14201 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14201 & (((((((((((x_14138 | ~(x_14139)) | x_14142) | x_14144) | x_14146) | x_14148) | x_14150) | x_14152) | ~(x_14154)) | x_14157) & (((((((~(x_14159) | x_14161) | x_14163) | ~(x_14165)) | ~(x_14168)) | ~(x_14171)) | x_14174) | x_14176)) & (((((((~(x_14179) | ~(x_14181)) | x_14184) | ~(x_14186)) | ~(x_14189)) | ~(x_14192)) | x_14195) | ~(x_14197))));
        let x_14203 : i32 = GLF_dead15A_8;
        let x_14205 : i32 = GLF_dead15D_8;
        let x_14208 : i32 = GLF_dead15E_8;
        let x_14211 : i32 = GLF_dead15F_8;
        let x_14214 : i32 = GLF_dead15G_8;
        let x_14216 : i32 = GLF_dead15H_8;
        let x_14219 : i32 = GLF_dead15I_8;
        let x_14221 : i32 = GLF_dead15J_8;
        let x_14224 : i32 = GLF_dead15A_8;
        let x_14225 : i32 = GLF_dead15B_8;
        let x_14227 : i32 = GLF_dead15E_8;
        let x_14230 : i32 = GLF_dead15F_8;
        let x_14233 : i32 = GLF_dead15G_8;
        let x_14236 : i32 = GLF_dead15H_8;
        let x_14238 : i32 = GLF_dead15I_8;
        let x_14240 : i32 = GLF_dead15J_8;
        let x_14244 : i32 = GLF_dead15B_8;
        let x_14246 : i32 = GLF_dead15C_8;
        let x_14248 : i32 = GLF_dead15D_8;
        let x_14250 : i32 = GLF_dead15E_8;
        let x_14253 : i32 = GLF_dead15F_8;
        let x_14255 : i32 = GLF_dead15G_8;
        let x_14258 : i32 = GLF_dead15H_8;
        let x_14260 : i32 = GLF_dead15I_8;
        let x_14262 : i32 = GLF_dead15J_8;
        let x_14266 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14266 & (((((((((~(x_14203) | ~(x_14205)) | ~(x_14208)) | ~(x_14211)) | x_14214) | ~(x_14216)) | x_14219) | ~(x_14221)) & (((((((x_14224 | x_14225) | ~(x_14227)) | ~(x_14230)) | ~(x_14233)) | x_14236) | x_14238) | ~(x_14240))) & ((((((((~(x_14244) | x_14246) | x_14248) | ~(x_14250)) | x_14253) | ~(x_14255)) | x_14258) | x_14260) | ~(x_14262))));
        let x_14268 : i32 = GLF_dead15B_8;
        let x_14270 : i32 = GLF_dead15C_8;
        let x_14273 : i32 = GLF_dead15D_8;
        let x_14276 : i32 = GLF_dead15E_8;
        let x_14278 : i32 = GLF_dead15F_8;
        let x_14280 : i32 = GLF_dead15G_8;
        let x_14283 : i32 = GLF_dead15H_8;
        let x_14285 : i32 = GLF_dead15I_8;
        let x_14287 : i32 = GLF_dead15J_8;
        let x_14290 : i32 = GLF_dead15A_8;
        let x_14292 : i32 = GLF_dead15B_8;
        let x_14295 : i32 = GLF_dead15C_8;
        let x_14297 : i32 = GLF_dead15D_8;
        let x_14300 : i32 = GLF_dead15G_8;
        let x_14302 : i32 = GLF_dead15H_8;
        let x_14304 : i32 = GLF_dead15I_8;
        let x_14306 : i32 = GLF_dead15J_8;
        let x_14310 : i32 = GLF_dead15C_8;
        let x_14312 : i32 = GLF_dead15D_8;
        let x_14314 : i32 = GLF_dead15E_8;
        let x_14317 : i32 = GLF_dead15F_8;
        let x_14320 : i32 = GLF_dead15G_8;
        let x_14322 : i32 = GLF_dead15H_8;
        let x_14324 : i32 = GLF_dead15I_8;
        let x_14326 : i32 = GLF_dead15J_8;
        let x_14330 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14330 & ((((((((((~(x_14268) | ~(x_14270)) | ~(x_14273)) | x_14276) | x_14278) | ~(x_14280)) | x_14283) | x_14285) | ~(x_14287)) & (((((((~(x_14290) | ~(x_14292)) | x_14295) | ~(x_14297)) | x_14300) | x_14302) | x_14304) | ~(x_14306))) & (((((((~(x_14310) | x_14312) | ~(x_14314)) | ~(x_14317)) | x_14320) | x_14322) | x_14324) | ~(x_14326))));
        let x_14332 : i32 = GLF_dead15A_8;
        let x_14334 : i32 = GLF_dead15B_8;
        let x_14336 : i32 = GLF_dead15C_8;
        let x_14338 : i32 = GLF_dead15E_8;
        let x_14340 : i32 = GLF_dead15F_8;
        let x_14342 : i32 = GLF_dead15G_8;
        let x_14344 : i32 = GLF_dead15H_8;
        let x_14347 : i32 = GLF_dead15I_8;
        let x_14350 : i32 = GLF_dead15J_8;
        let x_14352 : i32 = GLF_dead15A_8;
        let x_14354 : i32 = GLF_dead15B_8;
        let x_14356 : i32 = GLF_dead15D_8;
        let x_14358 : i32 = GLF_dead15E_8;
        let x_14360 : i32 = GLF_dead15G_8;
        let x_14363 : i32 = GLF_dead15H_8;
        let x_14365 : i32 = GLF_dead15I_8;
        let x_14368 : i32 = GLF_dead15J_8;
        let x_14371 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14371 & (((((((((~(x_14332) | x_14334) | x_14336) | x_14338) | x_14340) | x_14342) | ~(x_14344)) | ~(x_14347)) | x_14350) & (((((((~(x_14352) | x_14354) | x_14356) | x_14358) | ~(x_14360)) | x_14363) | ~(x_14365)) | x_14368)));
        let x_14373 : i32 = GLF_dead15A_8;
        let x_14374 : i32 = GLF_dead15B_8;
        let x_14376 : i32 = GLF_dead15C_8;
        let x_14379 : i32 = GLF_dead15D_8;
        let x_14382 : i32 = GLF_dead15E_8;
        let x_14385 : i32 = GLF_dead15F_8;
        let x_14388 : i32 = GLF_dead15H_8;
        let x_14391 : i32 = GLF_dead15I_8;
        let x_14393 : i32 = GLF_dead15J_8;
        let x_14396 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14396 & ((((((((x_14373 | x_14374) | ~(x_14376)) | ~(x_14379)) | ~(x_14382)) | ~(x_14385)) | ~(x_14388)) | x_14391) | ~(x_14393)));
        let x_14398 : i32 = GLF_dead15A_8;
        let x_14400 : i32 = GLF_dead15C_8;
        let x_14403 : i32 = GLF_dead15E_8;
        let x_14406 : i32 = GLF_dead15F_8;
        let x_14409 : i32 = GLF_dead15G_8;
        let x_14411 : i32 = GLF_dead15H_8;
        let x_14414 : i32 = GLF_dead15I_8;
        let x_14416 : i32 = GLF_dead15J_8;
        let x_14419 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14419 & (((((((~(x_14398) | ~(x_14400)) | ~(x_14403)) | ~(x_14406)) | x_14409) | ~(x_14411)) | x_14414) | ~(x_14416)));
        let x_14421 : i32 = GLF_dead15A_8;
        let x_14422 : i32 = GLF_dead15B_8;
        let x_14425 : i32 = GLF_dead15C_8;
        let x_14428 : i32 = GLF_dead15D_8;
        let x_14430 : i32 = GLF_dead15E_8;
        let x_14433 : i32 = GLF_dead15F_8;
        let x_14436 : i32 = GLF_dead15H_8;
        let x_14439 : i32 = GLF_dead15I_8;
        let x_14441 : i32 = GLF_dead15J_8;
        let x_14444 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14444 & ((((((((x_14421 | ~(x_14422)) | ~(x_14425)) | x_14428) | ~(x_14430)) | ~(x_14433)) | ~(x_14436)) | x_14439) | ~(x_14441)));
        let x_14446 : i32 = GLF_dead15B_8;
        let x_14447 : i32 = GLF_dead15C_8;
        let x_14450 : i32 = GLF_dead15D_8;
        let x_14452 : i32 = GLF_dead15E_8;
        let x_14455 : i32 = GLF_dead15F_8;
        let x_14458 : i32 = GLF_dead15G_8;
        let x_14461 : i32 = GLF_dead15H_8;
        let x_14464 : i32 = GLF_dead15I_8;
        let x_14466 : i32 = GLF_dead15J_8;
        let x_14469 : i32 = GLF_dead15A_8;
        let x_14471 : i32 = GLF_dead15B_8;
        let x_14474 : i32 = GLF_dead15C_8;
        let x_14477 : i32 = GLF_dead15D_8;
        let x_14479 : i32 = GLF_dead15E_8;
        let x_14482 : i32 = GLF_dead15F_8;
        let x_14484 : i32 = GLF_dead15H_8;
        let x_14487 : i32 = GLF_dead15I_8;
        let x_14489 : i32 = GLF_dead15J_8;
        let x_14493 : i32 = GLF_dead15B_8;
        let x_14495 : i32 = GLF_dead15C_8;
        let x_14498 : i32 = GLF_dead15D_8;
        let x_14500 : i32 = GLF_dead15E_8;
        let x_14503 : i32 = GLF_dead15F_8;
        let x_14505 : i32 = GLF_dead15G_8;
        let x_14508 : i32 = GLF_dead15H_8;
        let x_14511 : i32 = GLF_dead15I_8;
        let x_14513 : i32 = GLF_dead15J_8;
        let x_14517 : i32 = GLF_dead15res_8;
        GLF_dead15res_8 = (x_14517 & ((((((((((x_14446 | ~(x_14447)) | x_14450) | ~(x_14452)) | ~(x_14455)) | ~(x_14458)) | ~(x_14461)) | x_14464) | ~(x_14466)) & ((((((((~(x_14469) | ~(x_14471)) | ~(x_14474)) | x_14477) | ~(x_14479)) | x_14482) | ~(x_14484)) | x_14487) | ~(x_14489))) & ((((((((~(x_14493) | ~(x_14495)) | x_14498) | ~(x_14500)) | x_14503) | ~(x_14505)) | ~(x_14508)) | x_14511) | ~(x_14513))));
        let x_14519 : i32 = GLF_dead15res_8;
        let x_14521 : f32 = select(1.0, 0.0, (x_14519 == 0));
        let x_14522 : vec3<f32> = vec3<f32>(x_14521, x_14521, x_14521);
        GLF_dead15_GLF_color = vec4<f32>(x_14522.x, x_14522.y, x_14522.z, 1.0);
      }
      let x_14527 : vec4<f32> = x_GLF_outVarBackup_GLF_color_18;
      x_GLF_color = x_14527;
    }
    let x_14528 : i32 = count;
    count = (x_14528 + 1);
    let x_14531 : vec4<f32> = x_GLF_color;
    x_GLF_outVarBackup_GLF_color_22 = x_14531;
    x_GLF_color = vec4<f32>(32.119998932, -4269.760742188, -2372.939697266, -1.5);
    if (true) {
      let x_14539 : vec4<f32> = x_GLF_outVarBackup_GLF_color_22;
      x_GLF_color = x_14539;
    }
  }
  let x_14540 : i32 = count;
  return x_14540;
}

fn main_1() {
  var lin : vec2<f32>;
  var x_GLF_outVarBackup_GLF_color_24 : vec4<f32>;
  var donor_replacementGLF_dead1v : i32;
  var x_GLF_outVarBackup_GLF_color_25 : vec4<f32>;
  var donor_replacementGLF_dead14limit_1 : f32;
  var donor_replacementGLF_dead14result_3 : f32;
  var donor_replacementGLF_dead14thirty_two_1 : f32;
  var donor_replacementGLF_dead9alpha1 : f32;
  var GLF_dead14i : i32;
  var GLF_dead9u : i32;
  var donor_replacementGLF_dead14limit_2 : f32;
  var donor_replacementGLF_dead14result_4 : f32;
  var donor_replacementGLF_dead14thirty_two_2 : f32;
  var GLF_dead14i_1 : i32;
  var v_1 : i32;
  var donor_replacementGLF_dead9beta_1 : f32;
  var x_GLF_outVarBackup_GLF_color_26 : vec4<f32>;
  var x_GLF_outVarBackup_GLF_color_27 : vec4<f32>;
  var donor_replacementGLF_dead14limit_3 : f32;
  var donor_replacementGLF_dead14thirty_two_3 : f32;
  var GLF_dead14result : f32;
  var GLF_dead14i_2 : i32;
  var donor_replacementGLF_dead8sums_3 : array<f32, 9u>;
  var x_GLF_outVarBackup_GLF_color_28 : vec4<f32>;
  var donor_replacementGLF_dead13A_4 : array<f32, 50u>;
  var x_GLF_outVarBackup_GLF_color_29 : vec4<f32>;
  var GLF_dead8matrix_number : u32;
  var GLF_dead8cols : i32;
  var GLF_dead8rows_1 : i32;
  var GLF_dead8c_2 : i32;
  var GLF_dead8r_3 : i32;
  var donor_replacementGLF_dead12A_8 : array<f32, 50u>;
  var donor_replacementGLF_dead12col_6 : vec3<f32>;
  var donor_replacementGLF_dead13A_5 : array<f32, 50u>;
  var GLF_dead13i_3 : i32;
  var GLF_dead8sums : array<f32, 9u>;
  var GLF_dead8sum_index : i32;
  var GLF_dead8cols_1 : i32;
  var GLF_dead8rows_2 : i32;
  var GLF_dead8c_3 : i32;
  var GLF_dead8r_4 : i32;
  var x_GLF_outVarBackup_GLF_color_30 : vec4<f32>;
  var GLF_dead15icoord_9 : vec2<i32>;
  var GLF_dead15A_9 : i32;
  var GLF_dead15B_9 : i32;
  var GLF_dead15C_9 : i32;
  var GLF_dead15D_9 : i32;
  var GLF_dead15E_9 : i32;
  var GLF_dead15F_9 : i32;
  var GLF_dead15G_9 : i32;
  var GLF_dead15H_9 : i32;
  var GLF_dead15I_9 : i32;
  var GLF_dead15J_9 : i32;
  var GLF_dead15res_9 : i32;
  var x_GLF_outVarBackup_GLF_color_31 : vec4<f32>;
  var x_GLF_outVarBackup_GLF_color_32 : vec4<f32>;
  var donor_replacementGLF_dead12A_9 : array<f32, 50u>;
  var donor_replacementGLF_dead12col_7 : vec3<f32>;
  var x_GLF_outVarBackup_GLF_color_33 : vec4<f32>;
  var GLF_dead15icoord_10 : vec2<i32>;
  var GLF_dead15A_10 : i32;
  var GLF_dead15B_10 : i32;
  var GLF_dead15C_10 : i32;
  var GLF_dead15D_10 : i32;
  var GLF_dead15E_10 : i32;
  var GLF_dead15F_10 : i32;
  var GLF_dead15G_10 : i32;
  var GLF_dead15H_10 : i32;
  var GLF_dead15I_10 : i32;
  var GLF_dead15J_10 : i32;
  var GLF_dead15res_10 : i32;
  var GLF_dead8region_x : i32;
  var GLF_dead8region_y : i32;
  var GLF_dead8overall_region : i32;
  var donor_replacementGLF_dead13A_6 : array<f32, 50u>;
  var donor_replacementGLF_dead7pos : vec2<i32>;
  var GLF_dead15icoord_11 : vec2<i32>;
  var GLF_dead15A_11 : i32;
  var GLF_dead15B_11 : i32;
  var GLF_dead15C_11 : i32;
  var GLF_dead15D_11 : i32;
  var GLF_dead15E_11 : i32;
  var GLF_dead15F_11 : i32;
  var GLF_dead15G_11 : i32;
  var GLF_dead15H_11 : i32;
  var GLF_dead15I_11 : i32;
  var GLF_dead15J_11 : i32;
  var GLF_dead15res_11 : i32;
  var GLF_dead7p : f32;
  var indexable_4 : array<i32, 256u>;
  var x_GLF_outVarBackup_GLF_color_34 : vec4<f32>;
  var donor_replacementGLF_dead14result_5 : f32;
  var donor_replacementGLF_dead14thirty_two_4 : f32;
  var donor_replacementGLF_dead9alpha3_1 : f32;
  var GLF_dead9b : i32;
  var x_GLF_outVarBackup_GLF_color_35 : vec4<f32>;
  var x_GLF_outVarBackup_GLF_color_36 : vec4<f32>;
  var donor_replacementGLF_dead12m_2 : vec3<f32>;
  var GLF_dead12k_2 : i32;
  var donor_replacementGLF_dead4c_im : i32;
  var GLF_dead4x_new : i32;
  var donor_replacementGLF_dead11grey : f32;
  var x_GLF_outVarBackup_GLF_color_37 : vec4<f32>;
  var donor_replacementGLF_dead12A_10 : array<f32, 50u>;
  var donor_replacementGLF_dead12col_8 : vec3<f32>;
  var x_GLF_outVarBackup_GLF_color_38 : vec4<f32>;
  var donor_replacementGLF_dead14result_6 : f32;
  var donor_replacementGLF_dead10pos_1 : vec2<f32>;
  var donor_replacementGLF_dead13A_7 : array<f32, 50u>;
  var param_2 : i32;
  var indexable_5 : array<vec4<f32>, 16u>;
  GLF_dead13gl_FragCoord = vec4<f32>(8.300000191, 3.700000048, 5.900000095, -2.799999952);
  GLF_dead13_GLF_color = vec4<f32>(5844.10546875, -1.700000048, 4731.090820312, -1499.58581543);
  GLF_dead12gl_FragCoord = vec4<f32>(641.059020996, -9.300000191, 6298.980957031, 139.921005249);
  GLF_dead15gl_FragCoord = vec4<f32>(7537.365234375, 8.800000191, 7.599999905, 61.590000153);
  GLF_dead15_GLF_color = vec4<f32>(-12.800000191, 76955.65625, 13.43999958, -9128.483398438);
  GLF_dead9MATRIX_N = 4;
  GLF_dead8gl_FrontFacing = true;
  GLF_dead8gl_FragCoord = vec4<f32>(-631.348022461, -2.599999905, 4.800000191, 9.199999809);
  GLF_dead8gl_PointCoord = vec2<f32>(-957.505004883, 564.138000488);
  GLF_dead8_GLF_color = vec4<f32>(-7707.489257812, -9.300000191, 5190.876953125, -3584.709228516);
  GLF_dead8m22 = mat2x2<f32>(vec2<f32>(-0.571428597, -0.0), vec2<f32>(0.463878781, -61.214431763));
  GLF_dead8m23 = mat2x3<f32>(vec3<f32>(-965.202026367, 3.400000095, 49.299999237), vec3<f32>(9949.481445312, 8085.3203125, -7409.01953125));
  GLF_dead8m24 = mat2x4<f32>(vec4<f32>(0.007836649, -0.253088832, 0.0, 0.0), vec4<f32>(-2.82028985, 0.01428364, 0.0, 0.0));
  GLF_dead8m32 = mat3x2<f32>(vec2<f32>(11.420000076, 4.599999905), vec2<f32>(9.5, 416.475006104), vec2<f32>(859.023986816, 0.300000012));
  GLF_dead8m33 = mat3x3<f32>(vec3<f32>(409.49899292, 9.0, -6.800000191), vec3<f32>(-2575.971191406, -5.300000191, -62.11000061), vec3<f32>(-90.660003662, 39.209999084, -37.470001221));
  GLF_dead8m34 = mat3x4<f32>(vec4<f32>(-6859.638183594, -5.900000095, 7177.254882812, -111.529998779), vec4<f32>(9998.606445312, 4.099999905, -6.900000095, -1.700000048), vec4<f32>(-3770.169433594, 96.580001831, -908.166992188, -481.398010254));
  GLF_dead8m42 = mat4x2<f32>(vec2<f32>(-7169.375, -4.599999905), vec2<f32>(-64.709999084, -5.099999905), vec2<f32>(-1.0, 8202.765625), vec2<f32>(0.0, 0.0));
  GLF_dead8m43 = mat4x3<f32>(vec3<f32>(304.378997803, -995.945983887, -173.401000977), vec3<f32>(7.699999809, -12.739999771, -2.0), vec3<f32>(-986.135009766, -913.437011719, -16.540000916), vec3<f32>(-646.138000488, 906.801025391, 50.060001373));
  GLF_dead8m44 = mat4x4<f32>(vec4<f32>(5801.876464844, 496.045013428, 88.739997864, -268.002990723), vec4<f32>(5878.795410156, -5.900000095, -5615.276855469, 724.593017578), vec4<f32>(-305.260986328, 5.400000095, 7.199999809, 40.810001373), vec4<f32>(16.38999939, -2759.517089844, -6.199999809, 35.209999084));
  GLF_dead11gl_FragCoord = vec4<f32>(-0.839999974, 22553.109375, -12615.5390625, -9720169.0);
  GLF_dead11data = array<i32, 10u>(35719, 10, 10, 88297, -438, 53188, 93372, -57930, 10, -9377);
  GLF_dead6tree = array<GLF_dead6BST, 10u>(GLF_dead6BST(-80631, 30118, 88527), GLF_dead6BST(-1, -57996, -3989), GLF_dead6BST(30534, -4105, 7109), GLF_dead6BST(-68201, -67928, 22424), GLF_dead6BST(60177, 64190, 97976), GLF_dead6BST(-96724, -62401, 86817), GLF_dead6BST(-53074, 68689, -90800), GLF_dead6BST(4789, 90765, 50552), GLF_dead6BST(-39519, -10221, 102614), GLF_dead6BST(99344, 98684, -37689));
  GLF_dead5gl_FragCoord = vec4<f32>(2.0, -42.779998779, 3900.046386719, 108.399002075);
  GLF_dead5color = vec4<f32>(-1.104477644, 0.008682195, -1.104477644, 0.008682195);
  GLF_dead3_GLF_color = vec4<f32>(3089.338378906, -2.799999952, 3089.338378906, 63.240001678);
  let x_14851 : vec4<f32> = gl_FragCoord;
  let x_14854 : vec2<f32> = x_13226.resolution;
  lin = (vec2<f32>(x_14851.x, x_14851.y) / x_14854);
  let x_14856 : vec2<f32> = lin;
  lin = floor((x_14856 * 8.0));
  if (false) {
    let x_14862 : vec4<f32> = x_GLF_color;
    x_GLF_outVarBackup_GLF_color_24 = x_14862;
    x_GLF_color = (vec4<f32>(-71.199996948, -71.199996948, -71.199996948, -71.199996948) / unpack4x8unorm(128421u));
    let x_14869 : f32 = x_525.injectionSwitch.x;
    let x_14871 : f32 = x_525.injectionSwitch.y;
    if ((x_14869 < x_14871)) {
      let x_14875 : vec4<f32> = x_GLF_outVarBackup_GLF_color_24;
      x_GLF_color = x_14875;
    }
    donor_replacementGLF_dead1v = 12110;
    let x_14878 : i32 = donor_replacementGLF_dead1v;
    donor_replacementGLF_dead1v = (x_14878 / 2);
    let x_14881 : vec4<f32> = x_GLF_color;
    x_GLF_outVarBackup_GLF_color_25 = x_14881;
    let x_14883 : f32 = x_525.injectionSwitch.x;
    let x_14885 : f32 = x_525.injectionSwitch.y;
    if ((x_14883 > x_14885)) {
      donor_replacementGLF_dead14limit_1 = -4702.552246094;
      let x_14893 : f32 = x_655.GLF_dead8one;
      donor_replacementGLF_dead14result_3 = dpdyFine(x_14893);
      donor_replacementGLF_dead14thirty_two_1 = 639.013977051;
      let x_14897 : i32 = donor_replacementGLF_dead1v;
      if (((x_14897 % 32) == 0)) {
        let x_14904 : f32 = donor_replacementGLF_dead14result_3;
        donor_replacementGLF_dead14result_3 = (x_14904 + 0.400000006);
      } else {
        let x_14907 : i32 = donor_replacementGLF_dead1v;
        let x_14909 : f32 = donor_replacementGLF_dead14thirty_two_1;
        if (((f32(x_14907) - (round(x_14909) * floor((f32(x_14907) / round(x_14909))))) <= 0.01)) {
          let x_14915 : f32 = donor_replacementGLF_dead14result_3;
          donor_replacementGLF_dead14result_3 = (x_14915 + 100.0);
        }
      }
      let x_14917 : i32 = donor_replacementGLF_dead1v;
      let x_14919 : f32 = donor_replacementGLF_dead14limit_1;
      if ((f32(x_14917) >= x_14919)) {
      }
    }
    x_GLF_color = vec4<f32>(-30.780000687, -84.260002136, 910.695007324, -39.659999847);
    let x_14929 : f32 = gl_FragCoord.y;
    if ((x_14929 >= 0.0)) {
      let x_14933 : vec4<f32> = x_GLF_outVarBackup_GLF_color_25;
      x_GLF_color = x_14933;
    }
    if (false) {
      donor_replacementGLF_dead9alpha1 = 6.0;
      if (false) {
        GLF_dead14i = 1;
        loop {
          let x_14945 : i32 = GLF_dead14i;
          if ((x_14945 < 800)) {
          } else {
            break;
          }
          let x_14948 : i32 = GLF_dead14i;
          if (((x_14948 % 32) == 0)) {
            let x_14953 : f32 = donor_replacementGLF_dead9alpha1;
            donor_replacementGLF_dead9alpha1 = (x_14953 + 0.400000006);
          } else {
            let x_14956 : i32 = GLF_dead14i;
            let x_14958 : f32 = donor_replacementGLF_dead9alpha1;
            if (((f32(x_14956) - (round(x_14958) * floor((f32(x_14956) / round(x_14958))))) <= 0.01)) {
              let x_14964 : f32 = donor_replacementGLF_dead9alpha1;
              donor_replacementGLF_dead9alpha1 = (x_14964 + 100.0);
            }
          }
          let x_14966 : i32 = GLF_dead14i;
          let x_14968 : f32 = donor_replacementGLF_dead9alpha1;
          if ((f32(x_14966) >= x_14968)) {
          }

          continuing {
            let x_14972 : i32 = GLF_dead14i;
            GLF_dead14i = (x_14972 + 1);
          }
        }
      }
      let x_14975 : i32 = GLF_dead9MATRIX_N;
      GLF_dead9u = (x_14975 - 1);
      loop {
        let x_14982 : i32 = GLF_dead9u;
        let x_14983 : i32 = donor_replacementGLF_dead1v;
        if ((x_14982 >= x_14983)) {
        } else {
          break;
        }
        let x_14985 : i32 = GLF_dead9u;
        let x_14988 : f32 = GLF_dead5color[clamp(x_14985, 0, 3)];
        let x_14990 : f32 = donor_replacementGLF_dead9alpha1;
        donor_replacementGLF_dead9alpha1 = (x_14990 + pow(x_14988, 2.0));

        continuing {
          let x_14992 : i32 = GLF_dead9u;
          GLF_dead9u = (x_14992 - 1);
        }
      }
    }
    if (false) {
      let x_14998 : f32 = GLF_dead8m32[1].y;
      donor_replacementGLF_dead14limit_2 = x_14998;
      donor_replacementGLF_dead14result_4 = -4927.808105469;
      let x_15003 : f32 = x_655.GLF_dead8one;
      donor_replacementGLF_dead14thirty_two_2 = x_15003;
      GLF_dead14i_1 = 1;
      loop {
        let x_15010 : i32 = GLF_dead14i_1;
        if ((x_15010 < 800)) {
        } else {
          break;
        }
        let x_15012 : i32 = GLF_dead14i_1;
        if (((x_15012 % 32) == 0)) {
          let x_15017 : f32 = donor_replacementGLF_dead14result_4;
          donor_replacementGLF_dead14result_4 = (x_15017 + 0.400000006);
        } else {
          let x_15020 : i32 = GLF_dead14i_1;
          let x_15022 : f32 = donor_replacementGLF_dead14thirty_two_2;
          if (((f32(x_15020) - (round(x_15022) * floor((f32(x_15020) / round(x_15022))))) <= 0.01)) {
            let x_15028 : f32 = donor_replacementGLF_dead14result_4;
            donor_replacementGLF_dead14result_4 = (x_15028 + 100.0);
          }
        }
        let x_15030 : i32 = GLF_dead14i_1;
        let x_15032 : f32 = donor_replacementGLF_dead14limit_2;
        if ((f32(x_15030) >= x_15032)) {
        }

        continuing {
          let x_15036 : i32 = GLF_dead14i_1;
          GLF_dead14i_1 = (x_15036 + 1);
        }
      }
    }
  }
  let x_15040 : f32 = lin.x;
  let x_15044 : f32 = lin.y;
  v_1 = ((i32(x_15040) * 8) + i32(x_15044));
  if (false) {
    donor_replacementGLF_dead9beta_1 = 58.840000153;
    let x_15051 : i32 = v_1;
    let x_15053 : i32 = v_1;
    let x_15056 : f32 = GLF_dead3_GLF_color[clamp(x_15053, 0, 3)];
    let x_15057 : f32 = donor_replacementGLF_dead9beta_1;
    let x_15058 : i32 = v_1;
    let x_15061 : f32 = GLF_dead5color[clamp(x_15058, 0, 3)];
    GLF_dead3_GLF_color[clamp(x_15051, 0, 3)] = (x_15056 - (x_15057 * x_15061));
  }
  let x_15066 : vec4<f32> = x_GLF_color;
  x_GLF_outVarBackup_GLF_color_26 = x_15066;
  let x_15068 : vec4<f32> = x_GLF_color;
  x_GLF_outVarBackup_GLF_color_27 = x_15068;
  x_GLF_color = vec4<f32>(114330.1171875, -56439712.0, 277573536.0, 62495.39453125);
  let x_15075 : f32 = gl_FragCoord.y;
  if ((x_15075 >= 0.0)) {
    let x_15079 : vec4<f32> = x_GLF_outVarBackup_GLF_color_27;
    x_GLF_color = x_15079;
  }
  x_GLF_color = vec4<f32>(-5800714.0, 79078.2109375, 136347.75, -80504.8515625);
  if (false) {
    if (false) {
      donor_replacementGLF_dead14limit_3 = -9.399999619;
      let x_15092 : f32 = x_655.GLF_dead8one;
      donor_replacementGLF_dead14thirty_two_3 = dpdyCoarse(x_15092);
      GLF_dead14result = -0.5;
      GLF_dead14i_2 = 1;
      loop {
        let x_15102 : i32 = GLF_dead14i_2;
        if ((x_15102 < 800)) {
        } else {
          break;
        }
        let x_15104 : i32 = GLF_dead14i_2;
        if (((x_15104 % 32) == 0)) {
          let x_15109 : f32 = GLF_dead14result;
          GLF_dead14result = (x_15109 + 0.400000006);
        } else {
          let x_15112 : i32 = GLF_dead14i_2;
          let x_15114 : f32 = donor_replacementGLF_dead14thirty_two_3;
          if (((f32(x_15112) - (round(x_15114) * floor((f32(x_15112) / round(x_15114))))) <= 0.01)) {
            let x_15120 : f32 = GLF_dead14result;
            GLF_dead14result = (x_15120 + 100.0);
          }
        }
        let x_15122 : i32 = GLF_dead14i_2;
        let x_15124 : f32 = donor_replacementGLF_dead14limit_3;
        if ((f32(x_15122) >= x_15124)) {
        }

        continuing {
          let x_15128 : i32 = GLF_dead14i_2;
          GLF_dead14i_2 = (x_15128 + 1);
        }
      }
    }
    donor_replacementGLF_dead8sums_3 = array<f32, 9u>(-0.800000012, 827.645996094, -3.200000048, 5.800000191, 0.0, 5370.477539062, -49.259998322, -80.489997864, 87.379997253);
    let x_15137 : i32 = v_1;
    let x_15139 : i32 = v_1;
    if (((x_15137 > 0) & (x_15139 < 9))) {
      let x_15144 : i32 = v_1;
      let x_15147 : f32 = donor_replacementGLF_dead8sums_3[clamp(x_15144, 0, 8)];
      let x_15148 : vec3<f32> = vec3<f32>(x_15147, x_15147, x_15147);
      GLF_dead8_GLF_color = vec4<f32>(x_15148.x, x_15148.y, x_15148.z, 1.0);
    } else {
      GLF_dead8_GLF_color = vec4<f32>(0.0, 0.0, 0.0, 1.0);
    }
    if (false) {
      discard;
    }
  }
  let x_15158 : vec4<f32> = x_GLF_color;
  x_GLF_outVarBackup_GLF_color_28 = x_15158;
  if (false) {
    let x_15163 : f32 = x_GLF_color.w;
    let x_15166 : f32 = x_655.GLF_dead8one;
    let x_15168 : f32 = x_655.GLF_dead8one;
    let x_15170 : f32 = x_655.GLF_dead8one;
    let x_15173 : f32 = x_655.GLF_dead8one;
    let x_15176 : f32 = x_655.GLF_dead8one;
    let x_15178 : f32 = x_655.GLF_dead8one;
    let x_15182 : f32 = x_655.GLF_dead8one;
    let x_15184 : f32 = x_655.GLF_dead8one;
    let x_15186 : f32 = x_655.GLF_dead8one;
    let x_15191 : f32 = x_655.GLF_dead8one;
    let x_15193 : f32 = x_655.GLF_dead8one;
    let x_15196 : f32 = x_655.GLF_dead8one;
    let x_15199 : f32 = x_655.GLF_dead8one;
    let x_15201 : f32 = x_655.GLF_dead8one;
    let x_15205 : f32 = x_655.GLF_dead8one;
    let x_15207 : f32 = x_655.GLF_dead8one;
    let x_15209 : f32 = x_655.GLF_dead8one;
    let x_15211 : f32 = x_655.GLF_dead8one;
    let x_15213 : f32 = x_655.GLF_dead8one;
    let x_15215 : f32 = x_655.GLF_dead8one;
    let x_15217 : f32 = x_655.GLF_dead8one;
    let x_15219 : f32 = x_655.GLF_dead8one;
    let x_15221 : f32 = x_GLF_color.w;
    let x_15223 : f32 = x_655.GLF_dead8one;
    let x_15226 : f32 = x_655.GLF_dead8one;
    let x_15228 : f32 = x_655.GLF_dead8one;
    let x_15232 : f32 = x_655.GLF_dead8one;
    let x_15234 : f32 = x_655.GLF_dead8one;
    let x_15236 : f32 = x_655.GLF_dead8one;
    let x_15238 : f32 = x_655.GLF_dead8one;
    let x_15240 : f32 = x_655.GLF_dead8one;
    let x_15242 : f32 = x_655.GLF_dead8one;
    let x_15244 : f32 = x_655.GLF_dead8one;
    donor_replacementGLF_dead13A_4 = array<f32, 50u>(x_15163, -763.471984863, x_15166, x_15168, ldexp(x_15170, 10), x_15173, 970.650024414, x_15176, -0.5, x_15178, 5439.538085938, 4518.396484375, x_15182, (x_15184 + fwidthCoarse(x_15186)), 692.520996094, x_15191, x_15193, -72.029998779, 4518.396484375, ldexp(x_15196, 10), -763.471984863, (x_15199 + fwidthCoarse(x_15201)), x_15205, x_15207, x_15209, x_15211, -0.5, 5439.538085938, x_15213, 970.650024414, x_15215, -72.029998779, 692.520996094, x_15217, x_15219, x_15221, ldexp(x_15223, 10), -763.471984863, (x_15226 + fwidthCoarse(x_15228)), 692.520996094, x_15232, -72.029998779, x_15234, x_15236, x_15238, x_15240, 4518.396484375, x_15242, 970.650024414, x_15244);
    let x_15247 : f32 = donor_replacementGLF_dead13A_4[25];
    let x_15249 : f32 = x_728.GLF_dead13resolution.x;
    let x_15252 : f32 = donor_replacementGLF_dead13A_4[29];
    let x_15254 : f32 = x_728.GLF_dead13resolution.y;
    GLF_dead13_GLF_color = vec4<f32>((x_15247 / x_15249), (x_15252 / x_15254), 1.0, 1.0);
  }
  x_GLF_color = vec4<f32>(0.762389958, 0.339731157, 0.116549201, 0.215119988);
  let x_15263 : vec4<f32> = x_GLF_color;
  x_GLF_outVarBackup_GLF_color_29 = x_15263;
  x_GLF_color = vec4<f32>(990.080993652, 420.764007568, -51.869998932, 88.959999084);
  if (true) {
    let x_15271 : vec4<f32> = x_GLF_outVarBackup_GLF_color_29;
    x_GLF_color = x_15271;
  }
  if (true) {
    let x_15274 : vec4<f32> = x_GLF_outVarBackup_GLF_color_28;
    x_GLF_color = x_15274;
  }
  if (false) {
    GLF_dead8matrix_number = 0u;
    GLF_dead8cols = 2;
    loop {
      let x_15284 : i32 = GLF_dead8cols;
      if ((x_15284 <= 4)) {
      } else {
        break;
      }
      GLF_dead8rows_1 = 2;
      loop {
        let x_15292 : i32 = GLF_dead8rows_1;
        if ((x_15292 <= 4)) {
        } else {
          break;
        }
        GLF_dead8c_2 = 0;
        loop {
          let x_15300 : i32 = GLF_dead8c_2;
          let x_15301 : i32 = GLF_dead8cols;
          if ((x_15300 < x_15301)) {
          } else {
            break;
          }
          GLF_dead8r_3 = 0;
          loop {
            let x_15309 : i32 = GLF_dead8r_3;
            let x_15310 : i32 = GLF_dead8rows_1;
            if ((x_15309 < x_15310)) {
            } else {
              break;
            }
            let x_15312 : u32 = GLF_dead8matrix_number;
            switch(x_15312) {
              case 8u: {
                let x_15635 : i32 = GLF_dead8c_2;
                let x_15637 : i32 = GLF_dead8r_3;
                let x_15640 : f32 = x_655.GLF_dead8one;
                GLF_dead8m44[clamp(x_15635, 0, 3)][clamp(x_15637, 0, 3)] = x_15640;
              }
              case 7u: {
                let x_15627 : i32 = GLF_dead8c_2;
                let x_15629 : i32 = GLF_dead8r_3;
                let x_15632 : f32 = x_655.GLF_dead8one;
                GLF_dead8m43[clamp(x_15627, 0, 3)][clamp(x_15629, 0, 2)] = x_15632;
              }
              case 6u: {
                let x_15619 : i32 = GLF_dead8c_2;
                let x_15621 : i32 = GLF_dead8r_3;
                let x_15624 : f32 = x_655.GLF_dead8one;
                GLF_dead8m42[clamp(x_15619, 0, 3)][clamp(x_15621, 0, 1)] = x_15624;
              }
              case 5u: {
                let x_15611 : i32 = GLF_dead8c_2;
                let x_15613 : i32 = GLF_dead8r_3;
                let x_15616 : f32 = x_655.GLF_dead8one;
                GLF_dead8m34[clamp(x_15611, 0, 2)][clamp(x_15613, 0, 3)] = x_15616;
              }
              case 4u: {
                let x_15603 : i32 = GLF_dead8c_2;
                let x_15605 : i32 = GLF_dead8r_3;
                let x_15608 : f32 = x_655.GLF_dead8one;
                GLF_dead8m33[clamp(x_15603, 0, 2)][clamp(x_15605, 0, 2)] = x_15608;
              }
              case 3u: {
                let x_15595 : i32 = GLF_dead8c_2;
                let x_15597 : i32 = GLF_dead8r_3;
                let x_15600 : f32 = x_655.GLF_dead8one;
                GLF_dead8m32[clamp(x_15595, 0, 2)][clamp(x_15597, 0, 1)] = x_15600;
              }
              case 2u: {
                let x_15587 : i32 = GLF_dead8c_2;
                let x_15589 : i32 = GLF_dead8r_3;
                let x_15592 : f32 = x_655.GLF_dead8one;
                GLF_dead8m24[clamp(x_15587, 0, 1)][clamp(x_15589, 0, 3)] = x_15592;
              }
              case 1u: {
                if (false) {
                  let x_15337 : f32 = x_655.GLF_dead8one;
                  let x_15340 : f32 = x_655.GLF_dead8one;
                  let x_15342 : f32 = x_655.GLF_dead8one;
                  let x_15344 : f32 = x_655.GLF_dead8one;
                  let x_15347 : f32 = x_655.GLF_dead8one;
                  let x_15350 : f32 = x_655.GLF_dead8one;
                  let x_15357 : f32 = x_655.GLF_dead8one;
                  let x_15360 : f32 = x_655.GLF_dead8one;
                  let x_15364 : f32 = x_655.GLF_dead8one;
                  let x_15366 : f32 = x_655.GLF_dead8one;
                  let x_15370 : f32 = x_655.GLF_dead8one;
                  let x_15372 : f32 = x_655.GLF_dead8one;
                  let x_15374 : f32 = x_655.GLF_dead8one;
                  let x_15376 : f32 = x_655.GLF_dead8one;
                  let x_15380 : f32 = x_655.GLF_dead8one;
                  let x_15382 : f32 = x_655.GLF_dead8one;
                  let x_15384 : f32 = x_655.GLF_dead8one;
                  let x_15386 : f32 = x_655.GLF_dead8one;
                  let x_15389 : f32 = x_655.GLF_dead8one;
                  let x_15391 : f32 = x_655.GLF_dead8one;
                  let x_15394 : f32 = x_655.GLF_dead8one;
                  let x_15397 : f32 = x_655.GLF_dead8one;
                  let x_15399 : f32 = x_655.GLF_dead8one;
                  let x_15401 : f32 = x_655.GLF_dead8one;
                  let x_15403 : f32 = x_655.GLF_dead8one;
                  let x_15406 : f32 = x_655.GLF_dead8one;
                  let x_15409 : f32 = x_655.GLF_dead8one;
                  donor_replacementGLF_dead12A_8 = array<f32, 50u>(52.540000916, 808.244018555, max(x_15337, -8.399999619), x_15340, x_15342, x_15344, 8.699999809, log2(x_15347), x_15350, -41.200000763, 0.0, 13995.0, sinh(-14.399999619), 57.150001526, (x_15357 - ((-56.240001678 * x_15360) * floor((x_15357 / (-56.240001678 * x_15360))))), x_15364, x_15366, 852.801025391, 101.682998657, x_15370, x_15372, (x_15374 - ((-56.240001678 * x_15376) * floor((x_15374 / (-56.240001678 * x_15376))))), x_15380, x_15382, 8.699999809, 52.540000916, x_15384, 808.244018555, 13995.0, max(x_15386, -8.399999619), x_15389, log2(x_15391), 852.801025391, 57.150001526, -41.200000763, 0.0, 101.682998657, x_15394, sinh(-14.399999619), x_15397, 8.699999809, x_15399, 852.801025391, x_15401, 808.244018555, x_15403, 0.0, sinh(-14.399999619), max(x_15406, -8.399999619), log2(x_15409));
                  donor_replacementGLF_dead12col_6 = vec3<f32>(-189.841003418, -687.335998535, 5280.135742188);
                  let x_15418 : f32 = GLF_dead12gl_FragCoord.y;
                  if ((i32(x_15418) < 80)) {
                    let x_15424 : f32 = lin.y;
                    let x_15426 : f32 = x_8265.GLF_dead12resolution.x;
                    let x_15428 : f32 = donor_replacementGLF_dead12A_8[39];
                    let x_15430 : f32 = x_8265.GLF_dead12resolution.x;
                    donor_replacementGLF_dead12col_6 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_15424, x_15424, x_15424) + vec3<f32>(x_15426, ((x_15428 / x_15430) + 50.0), 22.0))));
                  } else {
                    let x_15441 : f32 = GLF_dead12gl_FragCoord.y;
                    if ((i32(x_15441) < 100)) {
                      let x_15447 : f32 = lin.y;
                      let x_15449 : f32 = x_8265.GLF_dead12resolution.x;
                      let x_15451 : f32 = donor_replacementGLF_dead12A_8[39];
                      let x_15453 : f32 = x_8265.GLF_dead12resolution.x;
                      donor_replacementGLF_dead12col_6 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_15447, x_15447, x_15447) + vec3<f32>(x_15449, ((x_15451 / x_15453) + 50.0), 22.0))));
                    } else {
                      let x_15464 : f32 = GLF_dead12gl_FragCoord.y;
                      if ((i32(x_15464) < 120)) {
                        let x_15470 : f32 = lin.y;
                        let x_15472 : f32 = x_8265.GLF_dead12resolution.x;
                        let x_15474 : f32 = donor_replacementGLF_dead12A_8[39];
                        let x_15476 : f32 = x_8265.GLF_dead12resolution.x;
                        donor_replacementGLF_dead12col_6 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_15470, x_15470, x_15470) + vec3<f32>(x_15472, ((x_15474 / x_15476) + 50.0), 22.0))));
                      } else {
                        let x_15487 : f32 = GLF_dead12gl_FragCoord.y;
                        if ((i32(x_15487) < 140)) {
                          let x_15493 : f32 = lin.y;
                          let x_15495 : f32 = x_8265.GLF_dead12resolution.x;
                          let x_15497 : f32 = donor_replacementGLF_dead12A_8[39];
                          let x_15499 : f32 = x_8265.GLF_dead12resolution.x;
                          donor_replacementGLF_dead12col_6 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_15493, x_15493, x_15493) + vec3<f32>(x_15495, ((x_15497 / x_15499) + 50.0), 22.0))));
                        } else {
                          let x_15510 : f32 = GLF_dead12gl_FragCoord.y;
                          if ((i32(x_15510) < 160)) {
                            let x_15516 : f32 = lin.y;
                            let x_15518 : f32 = x_8265.GLF_dead12resolution.x;
                            let x_15520 : f32 = donor_replacementGLF_dead12A_8[39];
                            let x_15522 : f32 = x_8265.GLF_dead12resolution.x;
                            donor_replacementGLF_dead12col_6 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_15516, x_15516, x_15516) + vec3<f32>(x_15518, ((x_15520 / x_15522) + 50.0), 22.0))));
                          } else {
                            let x_15533 : f32 = GLF_dead12gl_FragCoord.y;
                            if ((i32(x_15533) < 180)) {
                              let x_15539 : f32 = lin.y;
                              let x_15541 : f32 = x_8265.GLF_dead12resolution.x;
                              let x_15543 : f32 = donor_replacementGLF_dead12A_8[44];
                              let x_15545 : f32 = x_8265.GLF_dead12resolution.x;
                              donor_replacementGLF_dead12col_6 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_15539, x_15539, x_15539) + vec3<f32>(x_15541, ((x_15543 / x_15545) + 50.0), 22.0))));
                            } else {
                              let x_15556 : f32 = GLF_dead12gl_FragCoord.y;
                              if ((i32(x_15556) < 200)) {
                                let x_15562 : f32 = lin.y;
                                let x_15564 : f32 = x_8265.GLF_dead12resolution.x;
                                let x_15566 : f32 = donor_replacementGLF_dead12A_8[49];
                                let x_15568 : f32 = x_8265.GLF_dead12resolution.x;
                                donor_replacementGLF_dead12col_6 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_15562, x_15562, x_15562) + vec3<f32>(x_15564, ((x_15566 / x_15568) + 50.0), 22.0))));
                              } else {
                                discard;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                let x_15579 : i32 = GLF_dead8c_2;
                let x_15581 : i32 = GLF_dead8r_3;
                let x_15584 : f32 = x_655.GLF_dead8one;
                GLF_dead8m23[clamp(x_15579, 0, 1)][clamp(x_15581, 0, 2)] = x_15584;
              }
              case 0u: {
                let x_15323 : i32 = GLF_dead8c_2;
                let x_15325 : i32 = GLF_dead8r_3;
                let x_15328 : f32 = x_655.GLF_dead8one;
                GLF_dead8m22[clamp(x_15323, 0, 1)][clamp(x_15325, 0, 1)] = x_15328;
              }
              default: {
              }
            }

            continuing {
              let x_15644 : i32 = GLF_dead8r_3;
              GLF_dead8r_3 = (x_15644 + 1);
            }
          }
          if (false) {
            let x_15650 : f32 = x_655.GLF_dead8one;
            let x_15652 : f32 = x_655.GLF_dead8one;
            let x_15654 : f32 = x_655.GLF_dead8one;
            let x_15656 : vec2<f32> = GLF_dead8gl_PointCoord;
            let x_15658 : vec2<f32> = x_13226.resolution;
            let x_15662 : f32 = x_655.GLF_dead8one;
            let x_15664 : f32 = x_655.GLF_dead8one;
            let x_15666 : f32 = x_655.GLF_dead8one;
            let x_15668 : f32 = x_655.GLF_dead8one;
            let x_15670 : f32 = x_655.GLF_dead8one;
            let x_15673 : f32 = x_655.GLF_dead8one;
            let x_15676 : f32 = x_655.GLF_dead8one;
            let x_15680 : f32 = x_655.GLF_dead8one;
            let x_15684 : f32 = x_655.GLF_dead8one;
            let x_15687 : f32 = x_655.GLF_dead8one;
            let x_15689 : f32 = x_655.GLF_dead8one;
            let x_15691 : f32 = x_655.GLF_dead8one;
            let x_15693 : f32 = x_655.GLF_dead8one;
            let x_15696 : f32 = x_655.GLF_dead8one;
            let x_15698 : f32 = x_655.GLF_dead8one;
            let x_15700 : f32 = x_655.GLF_dead8one;
            let x_15702 : f32 = x_655.GLF_dead8one;
            let x_15704 : vec2<f32> = GLF_dead8gl_PointCoord;
            let x_15706 : vec2<f32> = x_13226.resolution;
            let x_15710 : f32 = x_655.GLF_dead8one;
            let x_15712 : f32 = x_655.GLF_dead8one;
            let x_15714 : f32 = x_655.GLF_dead8one;
            let x_15716 : f32 = x_655.GLF_dead8one;
            let x_15718 : f32 = x_655.GLF_dead8one;
            let x_15720 : f32 = x_655.GLF_dead8one;
            let x_15722 : f32 = x_655.GLF_dead8one;
            let x_15724 : f32 = x_655.GLF_dead8one;
            let x_15726 : vec2<f32> = GLF_dead8gl_PointCoord;
            let x_15728 : vec2<f32> = x_13226.resolution;
            let x_15732 : f32 = x_655.GLF_dead8one;
            let x_15734 : f32 = x_655.GLF_dead8one;
            let x_15736 : f32 = x_655.GLF_dead8one;
            let x_15738 : f32 = x_655.GLF_dead8one;
            let x_15740 : f32 = x_655.GLF_dead8one;
            let x_15742 : f32 = x_655.GLF_dead8one;
            donor_replacementGLF_dead13A_5 = array<f32, 50u>(x_15650, clamp(x_15652, (x_15654 * 0.017453292), dot(x_15656, x_15658)), x_15662, x_15664, x_15666, x_15668, x_15670, -0.5, 946.846008301, x_15673, -0.662969232, round(x_15676), -4989.777832031, x_15680, -1.799999952, -630.489013672, x_15684, -3.0, -320.115997314, x_15687, x_15689, 946.846008301, -4989.777832031, x_15691, round(x_15693), x_15696, x_15698, -0.5, clamp(x_15700, (x_15702 * 0.017453292), dot(x_15704, x_15706)), x_15710, -3.0, -0.662969232, x_15712, x_15714, x_15716, x_15718, -630.489013672, -320.115997314, x_15720, -1.799999952, clamp(x_15722, (x_15724 * 0.017453292), dot(x_15726, x_15728)), -0.662969232, x_15732, -320.115997314, x_15734, x_15736, x_15738, -630.489013672, x_15740, x_15742);
            GLF_dead13i_3 = 0;
            loop {
              let x_15750 : i32 = GLF_dead13i_3;
              if ((x_15750 < 200)) {
              } else {
                break;
              }
              let x_15752 : i32 = GLF_dead13i_3;
              let x_15754 : f32 = x_728.GLF_dead13resolution.x;
              if ((x_15752 >= i32(x_15754))) {
                break;
              }
              let x_15760 : i32 = GLF_dead13i_3;
              let x_15763 : i32 = GLF_dead13i_3;
              if (((4 * (x_15760 / 4)) == x_15763)) {
                let x_15767 : i32 = GLF_dead13i_3;
                let x_15770 : i32 = GLF_dead13i_3;
                donor_replacementGLF_dead13A_5[clamp((x_15767 / 4), 0, 49)] = f32(x_15770);
              }

              continuing {
                let x_15773 : i32 = GLF_dead13i_3;
                GLF_dead13i_3 = (x_15773 + 1);
              }
            }
          }

          continuing {
            let x_15775 : i32 = GLF_dead8c_2;
            GLF_dead8c_2 = (x_15775 + 1);
          }
        }
        let x_15777 : u32 = GLF_dead8matrix_number;
        GLF_dead8matrix_number = (x_15777 + 1u);

        continuing {
          let x_15779 : i32 = GLF_dead8rows_1;
          GLF_dead8rows_1 = (x_15779 + 1);
        }
      }

      continuing {
        let x_15781 : i32 = GLF_dead8cols;
        GLF_dead8cols = (x_15781 + 1);
      }
    }
    let x_15788 : bool = GLF_dead8gl_FrontFacing;
    let x_15792 : f32 = GLF_dead8gl_PointCoord.y;
    GLF_dead8sums = array<f32, 9u>(smoothStep(0.246405393, 1.328162909, select(8.5, -264.850006104, x_15788)), x_15792, 3.799999952, -2296.036132812, 7673.133789062, bitcast<f32>(1255), 86.459999084, 34.909999847, -16.959999084);
    GLF_dead8sum_index = 0;
    GLF_dead8cols_1 = 2;
    loop {
      let x_15809 : i32 = GLF_dead8cols_1;
      if ((x_15809 <= 4)) {
      } else {
        break;
      }
      GLF_dead8rows_2 = 2;
      loop {
        let x_15817 : i32 = GLF_dead8rows_2;
        if ((x_15817 <= 4)) {
        } else {
          break;
        }
        let x_15819 : i32 = GLF_dead8sum_index;
        GLF_dead8sums[clamp(x_15819, 0, 8)] = 0.0;
        GLF_dead8c_3 = 0;
        loop {
          let x_15828 : i32 = GLF_dead8c_3;
          let x_15829 : i32 = GLF_dead8cols_1;
          if ((x_15828 < x_15829)) {
          } else {
            break;
          }
          GLF_dead8r_4 = 0;
          loop {
            let x_15837 : i32 = GLF_dead8r_4;
            let x_15838 : i32 = GLF_dead8rows_2;
            if ((x_15837 < x_15838)) {
            } else {
              break;
            }
            let x_15840 : i32 = GLF_dead8sum_index;
            switch(x_15840) {
              case 8: {
                let x_17441 : i32 = GLF_dead8sum_index;
                let x_17442 : i32 = clamp(x_17441, 0, 8);
                let x_17443 : i32 = GLF_dead8c_3;
                let x_17445 : i32 = GLF_dead8r_4;
                let x_17448 : f32 = GLF_dead8m44[clamp(x_17443, 0, 3)][clamp(x_17445, 0, 3)];
                let x_17450 : f32 = GLF_dead8sums[x_17442];
                GLF_dead8sums[x_17442] = (x_17450 + x_17448);
              }
              case 7: {
                let x_17428 : i32 = GLF_dead8sum_index;
                let x_17429 : i32 = clamp(x_17428, 0, 8);
                let x_17430 : i32 = GLF_dead8c_3;
                let x_17432 : i32 = GLF_dead8r_4;
                let x_17435 : f32 = GLF_dead8m43[clamp(x_17430, 0, 3)][clamp(x_17432, 0, 2)];
                let x_17437 : f32 = GLF_dead8sums[x_17429];
                GLF_dead8sums[x_17429] = (x_17437 + x_17435);
              }
              case 6: {
                let x_17177 : vec4<f32> = x_GLF_color;
                x_GLF_outVarBackup_GLF_color_32 = x_17177;
                x_GLF_color = vec4<f32>(0.300000012, -2.5, -641.45098877, 3.299999952);
                let x_17182 : f32 = x_525.injectionSwitch.x;
                let x_17184 : f32 = x_525.injectionSwitch.y;
                if ((x_17182 < x_17184)) {
                  let x_17188 : vec4<f32> = x_GLF_outVarBackup_GLF_color_32;
                  x_GLF_color = x_17188;
                }
                if (false) {
                  let x_17193 : f32 = x_655.GLF_dead8one;
                  let x_17198 : f32 = x_655.GLF_dead8one;
                  let x_17200 : f32 = x_655.GLF_dead8one;
                  let x_17204 : f32 = x_655.GLF_dead8one;
                  let x_17206 : f32 = x_655.GLF_dead8one;
                  let x_17210 : f32 = x_655.GLF_dead8one;
                  let x_17214 : f32 = x_655.GLF_dead8one;
                  let x_17216 : f32 = x_655.GLF_dead8one;
                  let x_17219 : f32 = x_655.GLF_dead8one;
                  let x_17223 : f32 = x_655.GLF_dead8one;
                  let x_17226 : f32 = x_655.GLF_dead8one;
                  let x_17229 : f32 = x_655.GLF_dead8one;
                  let x_17231 : f32 = x_655.GLF_dead8one;
                  let x_17234 : f32 = x_655.GLF_dead8one;
                  let x_17237 : f32 = x_655.GLF_dead8one;
                  let x_17239 : f32 = x_655.GLF_dead8one;
                  let x_17242 : f32 = x_655.GLF_dead8one;
                  let x_17244 : f32 = x_655.GLF_dead8one;
                  let x_17246 : f32 = x_655.GLF_dead8one;
                  let x_17248 : f32 = x_655.GLF_dead8one;
                  let x_17250 : f32 = x_655.GLF_dead8one;
                  let x_17253 : f32 = x_655.GLF_dead8one;
                  let x_17255 : f32 = x_655.GLF_dead8one;
                  let x_17257 : f32 = x_655.GLF_dead8one;
                  let x_17260 : f32 = x_655.GLF_dead8one;
                  let x_17263 : f32 = x_655.GLF_dead8one;
                  let x_17265 : f32 = x_655.GLF_dead8one;
                  let x_17268 : f32 = x_655.GLF_dead8one;
                  let x_17270 : f32 = x_655.GLF_dead8one;
                  donor_replacementGLF_dead12A_9 = array<f32, 50u>(x_17193, 6.300000191, -54.419998169, fma(-45.849998474, x_17198, x_17200), 6.599999905, x_17204, x_17206, -8652.276367188, 641.049987793, log(x_17210), -452.860992432, x_17214, x_17216, -952.767028809, exp(x_17219), 5.400000095, 10.708124161, cosh(x_17223), dpdxFine(x_17226), x_17229, -452.860992432, 6.599999905, cosh(x_17231), log(x_17234), x_17237, -8652.276367188, exp(x_17239), x_17242, -952.767028809, 5.400000095, x_17244, 10.708124161, x_17246, x_17248, dpdxFine(x_17250), x_17253, 6.300000191, 641.049987793, -54.419998169, fma(-45.849998474, x_17255, x_17257), log(x_17260), -952.767028809, x_17263, dpdxFine(x_17265), 641.049987793, 10.708124161, x_17268, -54.419998169, cosh(x_17270), 6.599999905);
                  donor_replacementGLF_dead12col_7 = vec3<f32>(7.599999905, 2262.677001953, 3.700000048);
                  let x_17277 : f32 = GLF_dead12gl_FragCoord.y;
                  if ((i32(x_17277) < 100)) {
                    let x_17283 : f32 = lin.y;
                    let x_17285 : f32 = x_8265.GLF_dead12resolution.x;
                    let x_17287 : f32 = donor_replacementGLF_dead12A_9[39];
                    let x_17289 : f32 = x_8265.GLF_dead12resolution.x;
                    donor_replacementGLF_dead12col_7 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_17283, x_17283, x_17283) + vec3<f32>(x_17285, ((x_17287 / x_17289) + 50.0), 22.0))));
                  } else {
                    let x_17300 : f32 = GLF_dead12gl_FragCoord.y;
                    if ((i32(x_17300) < 120)) {
                      let x_17306 : f32 = lin.y;
                      let x_17308 : f32 = x_8265.GLF_dead12resolution.x;
                      let x_17310 : f32 = donor_replacementGLF_dead12A_9[39];
                      let x_17312 : f32 = x_8265.GLF_dead12resolution.x;
                      donor_replacementGLF_dead12col_7 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_17306, x_17306, x_17306) + vec3<f32>(x_17308, ((x_17310 / x_17312) + 50.0), 22.0))));
                    } else {
                      let x_17323 : f32 = GLF_dead12gl_FragCoord.y;
                      if ((i32(x_17323) < 140)) {
                        let x_17329 : f32 = lin.y;
                        let x_17331 : f32 = x_8265.GLF_dead12resolution.x;
                        let x_17333 : f32 = donor_replacementGLF_dead12A_9[39];
                        let x_17335 : f32 = x_8265.GLF_dead12resolution.x;
                        donor_replacementGLF_dead12col_7 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_17329, x_17329, x_17329) + vec3<f32>(x_17331, ((x_17333 / x_17335) + 50.0), 22.0))));
                      } else {
                        let x_17346 : f32 = GLF_dead12gl_FragCoord.y;
                        if ((i32(x_17346) < 160)) {
                          let x_17352 : f32 = lin.y;
                          let x_17354 : f32 = x_8265.GLF_dead12resolution.x;
                          let x_17356 : f32 = donor_replacementGLF_dead12A_9[39];
                          let x_17358 : f32 = x_8265.GLF_dead12resolution.x;
                          donor_replacementGLF_dead12col_7 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_17352, x_17352, x_17352) + vec3<f32>(x_17354, ((x_17356 / x_17358) + 50.0), 22.0))));
                        } else {
                          let x_17369 : f32 = GLF_dead12gl_FragCoord.y;
                          if ((i32(x_17369) < 180)) {
                            let x_17375 : f32 = lin.y;
                            let x_17377 : f32 = x_8265.GLF_dead12resolution.x;
                            let x_17379 : f32 = donor_replacementGLF_dead12A_9[44];
                            let x_17381 : f32 = x_8265.GLF_dead12resolution.x;
                            donor_replacementGLF_dead12col_7 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_17375, x_17375, x_17375) + vec3<f32>(x_17377, ((x_17379 / x_17381) + 50.0), 22.0))));
                          } else {
                            let x_17392 : f32 = GLF_dead12gl_FragCoord.y;
                            if ((i32(x_17392) < 200)) {
                              let x_17398 : f32 = lin.y;
                              let x_17400 : f32 = x_8265.GLF_dead12resolution.x;
                              let x_17402 : f32 = donor_replacementGLF_dead12A_9[49];
                              let x_17404 : f32 = x_8265.GLF_dead12resolution.x;
                              donor_replacementGLF_dead12col_7 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_17398, x_17398, x_17398) + vec3<f32>(x_17400, ((x_17402 / x_17404) + 50.0), 22.0))));
                            } else {
                              discard;
                            }
                          }
                        }
                      }
                    }
                  }
                }
                let x_17415 : i32 = GLF_dead8sum_index;
                let x_17416 : i32 = clamp(x_17415, 0, 8);
                let x_17417 : i32 = GLF_dead8c_3;
                let x_17419 : i32 = GLF_dead8r_4;
                let x_17422 : f32 = GLF_dead8m42[clamp(x_17417, 0, 3)][clamp(x_17419, 0, 1)];
                let x_17424 : f32 = GLF_dead8sums[x_17416];
                GLF_dead8sums[x_17416] = (x_17424 + x_17422);
              }
              case 5: {
                let x_17154 : i32 = GLF_dead8sum_index;
                let x_17155 : i32 = clamp(x_17154, 0, 8);
                let x_17156 : i32 = GLF_dead8c_3;
                let x_17158 : i32 = GLF_dead8r_4;
                let x_17161 : f32 = GLF_dead8m34[clamp(x_17156, 0, 2)][clamp(x_17158, 0, 3)];
                let x_17163 : f32 = GLF_dead8sums[x_17155];
                GLF_dead8sums[x_17155] = (x_17163 + x_17161);
              }
              case 4: {
                let x_17141 : i32 = GLF_dead8sum_index;
                let x_17142 : i32 = clamp(x_17141, 0, 8);
                let x_17143 : i32 = GLF_dead8c_3;
                let x_17145 : i32 = GLF_dead8r_4;
                let x_17148 : f32 = GLF_dead8m33[clamp(x_17143, 0, 2)][clamp(x_17145, 0, 2)];
                let x_17150 : f32 = GLF_dead8sums[x_17142];
                GLF_dead8sums[x_17142] = (x_17150 + x_17148);
              }
              case 3: {
                let x_15891 : vec4<f32> = x_GLF_color;
                x_GLF_outVarBackup_GLF_color_30 = x_15891;
                x_GLF_color = vec4<f32>(-86.309997559, -86.309997559, -86.309997559, -86.309997559);
                if (true) {
                  let x_15896 : vec4<f32> = x_GLF_outVarBackup_GLF_color_30;
                  x_GLF_color = x_15896;
                  if (false) {
                    let x_15900 : vec4<f32> = GLF_dead15gl_FragCoord;
                    GLF_dead15icoord_9 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_15900.x, x_15900.y)));
                    let x_15906 : i32 = GLF_dead15icoord_9.x;
                    GLF_dead15A_9 = select(-1, 0, ((x_15906 & 1) != 0));
                    let x_15912 : i32 = GLF_dead15icoord_9.x;
                    GLF_dead15B_9 = select(-1, 0, ((x_15912 & 2) != 0));
                    let x_15918 : i32 = GLF_dead15icoord_9.x;
                    GLF_dead15C_9 = select(-1, 0, ((x_15918 & 4) != 0));
                    let x_15924 : i32 = GLF_dead15icoord_9.x;
                    GLF_dead15D_9 = select(-1, 0, ((x_15924 & 8) != 0));
                    let x_15930 : i32 = GLF_dead15icoord_9.x;
                    GLF_dead15E_9 = select(-1, 0, ((x_15930 & 16) != 0));
                    let x_15936 : i32 = GLF_dead15icoord_9.y;
                    GLF_dead15F_9 = select(-1, 0, ((x_15936 & 1) != 0));
                    let x_15942 : i32 = GLF_dead15icoord_9.y;
                    GLF_dead15G_9 = select(-1, 0, ((x_15942 & 2) != 0));
                    let x_15948 : i32 = GLF_dead15icoord_9.y;
                    GLF_dead15H_9 = select(-1, 0, ((x_15948 & 4) != 0));
                    let x_15954 : i32 = GLF_dead15icoord_9.y;
                    GLF_dead15I_9 = select(-1, 0, ((x_15954 & 8) != 0));
                    let x_15960 : i32 = GLF_dead15icoord_9.y;
                    GLF_dead15J_9 = select(-1, 0, ((x_15960 & 16) != 0));
                    let x_15965 : i32 = GLF_dead15A_9;
                    let x_15966 : i32 = GLF_dead15C_9;
                    let x_15969 : i32 = GLF_dead15D_9;
                    let x_15972 : i32 = GLF_dead15E_9;
                    let x_15975 : i32 = GLF_dead15F_9;
                    let x_15977 : i32 = GLF_dead15G_9;
                    let x_15979 : i32 = GLF_dead15H_9;
                    let x_15981 : i32 = GLF_dead15I_9;
                    let x_15984 : i32 = GLF_dead15J_9;
                    let x_15987 : i32 = GLF_dead15B_9;
                    let x_15988 : i32 = GLF_dead15C_9;
                    let x_15991 : i32 = GLF_dead15D_9;
                    let x_15994 : i32 = GLF_dead15E_9;
                    let x_15997 : i32 = GLF_dead15F_9;
                    let x_15999 : i32 = GLF_dead15G_9;
                    let x_16001 : i32 = GLF_dead15H_9;
                    let x_16003 : i32 = GLF_dead15I_9;
                    let x_16006 : i32 = GLF_dead15J_9;
                    let x_16010 : i32 = GLF_dead15A_9;
                    let x_16012 : i32 = GLF_dead15C_9;
                    let x_16014 : i32 = GLF_dead15D_9;
                    let x_16017 : i32 = GLF_dead15E_9;
                    let x_16020 : i32 = GLF_dead15F_9;
                    let x_16022 : i32 = GLF_dead15H_9;
                    let x_16025 : i32 = GLF_dead15I_9;
                    let x_16027 : i32 = GLF_dead15J_9;
                    let x_16031 : i32 = GLF_dead15A_9;
                    let x_16032 : i32 = GLF_dead15B_9;
                    let x_16035 : i32 = GLF_dead15D_9;
                    let x_16038 : i32 = GLF_dead15E_9;
                    let x_16041 : i32 = GLF_dead15G_9;
                    let x_16043 : i32 = GLF_dead15H_9;
                    let x_16046 : i32 = GLF_dead15I_9;
                    let x_16048 : i32 = GLF_dead15J_9;
                    GLF_dead15res_9 = (((((((((((x_15965 | ~(x_15966)) | ~(x_15969)) | ~(x_15972)) | x_15975) | x_15977) | x_15979) | ~(x_15981)) | ~(x_15984)) & ((((((((x_15987 | ~(x_15988)) | ~(x_15991)) | ~(x_15994)) | x_15997) | x_15999) | x_16001) | ~(x_16003)) | ~(x_16006))) & (((((((~(x_16010) | x_16012) | ~(x_16014)) | ~(x_16017)) | x_16020) | ~(x_16022)) | x_16025) | ~(x_16027))) & (((((((x_16031 | ~(x_16032)) | ~(x_16035)) | ~(x_16038)) | x_16041) | ~(x_16043)) | x_16046) | ~(x_16048)));
                    let x_16052 : i32 = GLF_dead15A_9;
                    let x_16053 : i32 = GLF_dead15B_9;
                    let x_16055 : i32 = GLF_dead15C_9;
                    let x_16058 : i32 = GLF_dead15D_9;
                    let x_16060 : i32 = GLF_dead15E_9;
                    let x_16063 : i32 = GLF_dead15F_9;
                    let x_16065 : i32 = GLF_dead15G_9;
                    let x_16067 : i32 = GLF_dead15H_9;
                    let x_16070 : i32 = GLF_dead15I_9;
                    let x_16072 : i32 = GLF_dead15J_9;
                    let x_16075 : i32 = GLF_dead15B_9;
                    let x_16076 : i32 = GLF_dead15C_9;
                    let x_16079 : i32 = GLF_dead15D_9;
                    let x_16082 : i32 = GLF_dead15E_9;
                    let x_16085 : i32 = GLF_dead15F_9;
                    let x_16088 : i32 = GLF_dead15G_9;
                    let x_16091 : i32 = GLF_dead15H_9;
                    let x_16093 : i32 = GLF_dead15I_9;
                    let x_16095 : i32 = GLF_dead15J_9;
                    let x_16099 : i32 = GLF_dead15A_9;
                    let x_16100 : i32 = GLF_dead15C_9;
                    let x_16102 : i32 = GLF_dead15D_9;
                    let x_16105 : i32 = GLF_dead15E_9;
                    let x_16108 : i32 = GLF_dead15G_9;
                    let x_16111 : i32 = GLF_dead15H_9;
                    let x_16113 : i32 = GLF_dead15I_9;
                    let x_16115 : i32 = GLF_dead15J_9;
                    let x_16119 : i32 = GLF_dead15A_9;
                    let x_16120 : i32 = GLF_dead15C_9;
                    let x_16122 : i32 = GLF_dead15D_9;
                    let x_16125 : i32 = GLF_dead15E_9;
                    let x_16128 : i32 = GLF_dead15F_9;
                    let x_16131 : i32 = GLF_dead15H_9;
                    let x_16133 : i32 = GLF_dead15I_9;
                    let x_16135 : i32 = GLF_dead15J_9;
                    let x_16139 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16139 & ((((((((((((x_16052 | x_16053) | ~(x_16055)) | x_16058) | ~(x_16060)) | x_16063) | x_16065) | ~(x_16067)) | x_16070) | ~(x_16072)) & ((((((((x_16075 | ~(x_16076)) | ~(x_16079)) | ~(x_16082)) | ~(x_16085)) | ~(x_16088)) | x_16091) | x_16093) | ~(x_16095))) & (((((((x_16099 | x_16100) | ~(x_16102)) | ~(x_16105)) | ~(x_16108)) | x_16111) | x_16113) | ~(x_16115))) & (((((((x_16119 | x_16120) | ~(x_16122)) | ~(x_16125)) | ~(x_16128)) | x_16131) | x_16133) | ~(x_16135))));
                    let x_16141 : i32 = GLF_dead15A_9;
                    let x_16142 : i32 = GLF_dead15B_9;
                    let x_16144 : i32 = GLF_dead15C_9;
                    let x_16147 : i32 = GLF_dead15D_9;
                    let x_16149 : i32 = GLF_dead15E_9;
                    let x_16152 : i32 = GLF_dead15G_9;
                    let x_16155 : i32 = GLF_dead15H_9;
                    let x_16157 : i32 = GLF_dead15I_9;
                    let x_16159 : i32 = GLF_dead15J_9;
                    let x_16162 : i32 = GLF_dead15A_9;
                    let x_16164 : i32 = GLF_dead15C_9;
                    let x_16166 : i32 = GLF_dead15D_9;
                    let x_16168 : i32 = GLF_dead15E_9;
                    let x_16171 : i32 = GLF_dead15G_9;
                    let x_16174 : i32 = GLF_dead15H_9;
                    let x_16176 : i32 = GLF_dead15I_9;
                    let x_16178 : i32 = GLF_dead15J_9;
                    let x_16182 : i32 = GLF_dead15A_9;
                    let x_16184 : i32 = GLF_dead15B_9;
                    let x_16187 : i32 = GLF_dead15C_9;
                    let x_16190 : i32 = GLF_dead15D_9;
                    let x_16193 : i32 = GLF_dead15E_9;
                    let x_16195 : i32 = GLF_dead15G_9;
                    let x_16198 : i32 = GLF_dead15H_9;
                    let x_16200 : i32 = GLF_dead15I_9;
                    let x_16202 : i32 = GLF_dead15J_9;
                    let x_16206 : i32 = GLF_dead15A_9;
                    let x_16207 : i32 = GLF_dead15B_9;
                    let x_16210 : i32 = GLF_dead15D_9;
                    let x_16212 : i32 = GLF_dead15E_9;
                    let x_16215 : i32 = GLF_dead15G_9;
                    let x_16217 : i32 = GLF_dead15H_9;
                    let x_16219 : i32 = GLF_dead15I_9;
                    let x_16221 : i32 = GLF_dead15J_9;
                    let x_16225 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16225 & (((((((((((x_16141 | x_16142) | ~(x_16144)) | x_16147) | ~(x_16149)) | ~(x_16152)) | x_16155) | x_16157) | ~(x_16159)) & (((((((~(x_16162) | x_16164) | x_16166) | ~(x_16168)) | ~(x_16171)) | x_16174) | x_16176) | ~(x_16178))) & ((((((((~(x_16182) | ~(x_16184)) | ~(x_16187)) | ~(x_16190)) | x_16193) | ~(x_16195)) | x_16198) | x_16200) | ~(x_16202))) & (((((((x_16206 | ~(x_16207)) | x_16210) | ~(x_16212)) | x_16215) | x_16217) | x_16219) | ~(x_16221))));
                    let x_16227 : i32 = GLF_dead15A_9;
                    let x_16229 : i32 = GLF_dead15B_9;
                    let x_16231 : i32 = GLF_dead15C_9;
                    let x_16234 : i32 = GLF_dead15D_9;
                    let x_16236 : i32 = GLF_dead15E_9;
                    let x_16239 : i32 = GLF_dead15G_9;
                    let x_16241 : i32 = GLF_dead15H_9;
                    let x_16243 : i32 = GLF_dead15I_9;
                    let x_16245 : i32 = GLF_dead15J_9;
                    let x_16248 : i32 = GLF_dead15A_9;
                    let x_16249 : i32 = GLF_dead15B_9;
                    let x_16252 : i32 = GLF_dead15D_9;
                    let x_16255 : i32 = GLF_dead15E_9;
                    let x_16257 : i32 = GLF_dead15G_9;
                    let x_16259 : i32 = GLF_dead15H_9;
                    let x_16261 : i32 = GLF_dead15I_9;
                    let x_16263 : i32 = GLF_dead15J_9;
                    let x_16267 : i32 = GLF_dead15A_9;
                    let x_16268 : i32 = GLF_dead15C_9;
                    let x_16271 : i32 = GLF_dead15D_9;
                    let x_16274 : i32 = GLF_dead15E_9;
                    let x_16276 : i32 = GLF_dead15F_9;
                    let x_16278 : i32 = GLF_dead15G_9;
                    let x_16280 : i32 = GLF_dead15H_9;
                    let x_16282 : i32 = GLF_dead15I_9;
                    let x_16284 : i32 = GLF_dead15J_9;
                    let x_16288 : i32 = GLF_dead15A_9;
                    let x_16290 : i32 = GLF_dead15C_9;
                    let x_16292 : i32 = GLF_dead15D_9;
                    let x_16295 : i32 = GLF_dead15E_9;
                    let x_16297 : i32 = GLF_dead15F_9;
                    let x_16299 : i32 = GLF_dead15G_9;
                    let x_16301 : i32 = GLF_dead15H_9;
                    let x_16303 : i32 = GLF_dead15I_9;
                    let x_16305 : i32 = GLF_dead15J_9;
                    let x_16309 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16309 & (((((((((((~(x_16227) | x_16229) | ~(x_16231)) | x_16234) | ~(x_16236)) | x_16239) | x_16241) | x_16243) | ~(x_16245)) & (((((((x_16248 | ~(x_16249)) | ~(x_16252)) | x_16255) | x_16257) | x_16259) | x_16261) | ~(x_16263))) & ((((((((x_16267 | ~(x_16268)) | ~(x_16271)) | x_16274) | x_16276) | x_16278) | x_16280) | x_16282) | ~(x_16284))) & ((((((((~(x_16288) | x_16290) | ~(x_16292)) | x_16295) | x_16297) | x_16299) | x_16301) | x_16303) | ~(x_16305))));
                    let x_16311 : i32 = GLF_dead15A_9;
                    let x_16313 : i32 = GLF_dead15B_9;
                    let x_16316 : i32 = GLF_dead15C_9;
                    let x_16318 : i32 = GLF_dead15D_9;
                    let x_16321 : i32 = GLF_dead15E_9;
                    let x_16324 : i32 = GLF_dead15F_9;
                    let x_16327 : i32 = GLF_dead15G_9;
                    let x_16330 : i32 = GLF_dead15H_9;
                    let x_16333 : i32 = GLF_dead15I_9;
                    let x_16336 : i32 = GLF_dead15J_9;
                    let x_16338 : i32 = GLF_dead15A_9;
                    let x_16339 : i32 = GLF_dead15B_9;
                    let x_16342 : i32 = GLF_dead15C_9;
                    let x_16344 : i32 = GLF_dead15D_9;
                    let x_16346 : i32 = GLF_dead15E_9;
                    let x_16349 : i32 = GLF_dead15F_9;
                    let x_16352 : i32 = GLF_dead15G_9;
                    let x_16355 : i32 = GLF_dead15H_9;
                    let x_16358 : i32 = GLF_dead15I_9;
                    let x_16361 : i32 = GLF_dead15J_9;
                    let x_16364 : i32 = GLF_dead15A_9;
                    let x_16366 : i32 = GLF_dead15B_9;
                    let x_16368 : i32 = GLF_dead15C_9;
                    let x_16370 : i32 = GLF_dead15D_9;
                    let x_16372 : i32 = GLF_dead15E_9;
                    let x_16375 : i32 = GLF_dead15G_9;
                    let x_16378 : i32 = GLF_dead15H_9;
                    let x_16381 : i32 = GLF_dead15I_9;
                    let x_16384 : i32 = GLF_dead15J_9;
                    let x_16387 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16387 & (((((((((((~(x_16311) | ~(x_16313)) | x_16316) | ~(x_16318)) | ~(x_16321)) | ~(x_16324)) | ~(x_16327)) | ~(x_16330)) | ~(x_16333)) | x_16336) & (((((((((x_16338 | ~(x_16339)) | x_16342) | x_16344) | ~(x_16346)) | ~(x_16349)) | ~(x_16352)) | ~(x_16355)) | ~(x_16358)) | x_16361)) & ((((((((~(x_16364) | x_16366) | x_16368) | x_16370) | ~(x_16372)) | ~(x_16375)) | ~(x_16378)) | ~(x_16381)) | x_16384)));
                    let x_16389 : i32 = GLF_dead15C_9;
                    let x_16391 : i32 = GLF_dead15D_9;
                    let x_16394 : i32 = GLF_dead15E_9;
                    let x_16396 : i32 = GLF_dead15F_9;
                    let x_16399 : i32 = GLF_dead15G_9;
                    let x_16402 : i32 = GLF_dead15H_9;
                    let x_16405 : i32 = GLF_dead15I_9;
                    let x_16408 : i32 = GLF_dead15J_9;
                    let x_16410 : i32 = GLF_dead15A_9;
                    let x_16412 : i32 = GLF_dead15C_9;
                    let x_16415 : i32 = GLF_dead15D_9;
                    let x_16418 : i32 = GLF_dead15E_9;
                    let x_16420 : i32 = GLF_dead15G_9;
                    let x_16423 : i32 = GLF_dead15H_9;
                    let x_16426 : i32 = GLF_dead15I_9;
                    let x_16429 : i32 = GLF_dead15J_9;
                    let x_16432 : i32 = GLF_dead15B_9;
                    let x_16433 : i32 = GLF_dead15D_9;
                    let x_16436 : i32 = GLF_dead15E_9;
                    let x_16438 : i32 = GLF_dead15F_9;
                    let x_16441 : i32 = GLF_dead15H_9;
                    let x_16444 : i32 = GLF_dead15I_9;
                    let x_16447 : i32 = GLF_dead15J_9;
                    let x_16450 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16450 & (((((((((~(x_16389) | ~(x_16391)) | x_16394) | ~(x_16396)) | ~(x_16399)) | ~(x_16402)) | ~(x_16405)) | x_16408) & (((((((~(x_16410) | ~(x_16412)) | ~(x_16415)) | x_16418) | ~(x_16420)) | ~(x_16423)) | ~(x_16426)) | x_16429)) & ((((((x_16432 | ~(x_16433)) | x_16436) | ~(x_16438)) | ~(x_16441)) | ~(x_16444)) | x_16447)));
                    let x_16452 : i32 = GLF_dead15A_9;
                    let x_16453 : i32 = GLF_dead15B_9;
                    let x_16455 : i32 = GLF_dead15C_9;
                    let x_16457 : i32 = GLF_dead15D_9;
                    let x_16460 : i32 = GLF_dead15E_9;
                    let x_16462 : i32 = GLF_dead15G_9;
                    let x_16465 : i32 = GLF_dead15H_9;
                    let x_16468 : i32 = GLF_dead15I_9;
                    let x_16471 : i32 = GLF_dead15J_9;
                    let x_16473 : i32 = GLF_dead15B_9;
                    let x_16474 : i32 = GLF_dead15C_9;
                    let x_16476 : i32 = GLF_dead15D_9;
                    let x_16478 : i32 = GLF_dead15E_9;
                    let x_16481 : i32 = GLF_dead15F_9;
                    let x_16483 : i32 = GLF_dead15G_9;
                    let x_16486 : i32 = GLF_dead15H_9;
                    let x_16489 : i32 = GLF_dead15I_9;
                    let x_16492 : i32 = GLF_dead15J_9;
                    let x_16495 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16495 & (((((((((x_16452 | x_16453) | x_16455) | ~(x_16457)) | x_16460) | ~(x_16462)) | ~(x_16465)) | ~(x_16468)) | x_16471) & ((((((((x_16473 | x_16474) | x_16476) | ~(x_16478)) | x_16481) | ~(x_16483)) | ~(x_16486)) | ~(x_16489)) | x_16492)));
                    let x_16497 : i32 = GLF_dead15A_9;
                    let x_16498 : i32 = GLF_dead15C_9;
                    let x_16501 : i32 = GLF_dead15D_9;
                    let x_16503 : i32 = GLF_dead15E_9;
                    let x_16505 : i32 = GLF_dead15F_9;
                    let x_16507 : i32 = GLF_dead15G_9;
                    let x_16510 : i32 = GLF_dead15H_9;
                    let x_16513 : i32 = GLF_dead15I_9;
                    let x_16516 : i32 = GLF_dead15J_9;
                    let x_16518 : i32 = GLF_dead15B_9;
                    let x_16519 : i32 = GLF_dead15C_9;
                    let x_16522 : i32 = GLF_dead15D_9;
                    let x_16524 : i32 = GLF_dead15E_9;
                    let x_16526 : i32 = GLF_dead15F_9;
                    let x_16528 : i32 = GLF_dead15G_9;
                    let x_16531 : i32 = GLF_dead15H_9;
                    let x_16534 : i32 = GLF_dead15J_9;
                    let x_16537 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16537 & (((((((((x_16497 | ~(x_16498)) | x_16501) | x_16503) | x_16505) | ~(x_16507)) | ~(x_16510)) | ~(x_16513)) | x_16516) & (((((((x_16518 | ~(x_16519)) | x_16522) | x_16524) | x_16526) | ~(x_16528)) | ~(x_16531)) | x_16534)));
                    let x_16539 : i32 = GLF_dead15A_9;
                    let x_16541 : i32 = GLF_dead15B_9;
                    let x_16544 : i32 = GLF_dead15C_9;
                    let x_16546 : i32 = GLF_dead15D_9;
                    let x_16548 : i32 = GLF_dead15E_9;
                    let x_16550 : i32 = GLF_dead15F_9;
                    let x_16552 : i32 = GLF_dead15G_9;
                    let x_16555 : i32 = GLF_dead15H_9;
                    let x_16558 : i32 = GLF_dead15I_9;
                    let x_16561 : i32 = GLF_dead15J_9;
                    let x_16563 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16563 & (((((((((~(x_16539) | ~(x_16541)) | x_16544) | x_16546) | x_16548) | x_16550) | ~(x_16552)) | ~(x_16555)) | ~(x_16558)) | x_16561));
                    let x_16565 : i32 = GLF_dead15A_9;
                    let x_16566 : i32 = GLF_dead15B_9;
                    let x_16568 : i32 = GLF_dead15C_9;
                    let x_16571 : i32 = GLF_dead15D_9;
                    let x_16574 : i32 = GLF_dead15E_9;
                    let x_16576 : i32 = GLF_dead15G_9;
                    let x_16578 : i32 = GLF_dead15H_9;
                    let x_16581 : i32 = GLF_dead15I_9;
                    let x_16584 : i32 = GLF_dead15J_9;
                    let x_16586 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16586 & ((((((((x_16565 | x_16566) | ~(x_16568)) | ~(x_16571)) | x_16574) | x_16576) | ~(x_16578)) | ~(x_16581)) | x_16584));
                    let x_16588 : i32 = GLF_dead15B_9;
                    let x_16590 : i32 = GLF_dead15D_9;
                    let x_16592 : i32 = GLF_dead15E_9;
                    let x_16594 : i32 = GLF_dead15F_9;
                    let x_16597 : i32 = GLF_dead15G_9;
                    let x_16599 : i32 = GLF_dead15H_9;
                    let x_16602 : i32 = GLF_dead15I_9;
                    let x_16605 : i32 = GLF_dead15J_9;
                    let x_16607 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16607 & (((((((~(x_16588) | x_16590) | x_16592) | ~(x_16594)) | x_16597) | ~(x_16599)) | ~(x_16602)) | x_16605));
                    let x_16609 : i32 = GLF_dead15B_9;
                    let x_16611 : i32 = GLF_dead15C_9;
                    let x_16613 : i32 = GLF_dead15D_9;
                    let x_16616 : i32 = GLF_dead15E_9;
                    let x_16618 : i32 = GLF_dead15F_9;
                    let x_16620 : i32 = GLF_dead15G_9;
                    let x_16622 : i32 = GLF_dead15H_9;
                    let x_16625 : i32 = GLF_dead15I_9;
                    let x_16628 : i32 = GLF_dead15J_9;
                    let x_16630 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16630 & ((((((((~(x_16609) | x_16611) | ~(x_16613)) | x_16616) | x_16618) | x_16620) | ~(x_16622)) | ~(x_16625)) | x_16628));
                    let x_16632 : i32 = GLF_dead15A_9;
                    let x_16634 : i32 = GLF_dead15B_9;
                    let x_16637 : i32 = GLF_dead15C_9;
                    let x_16640 : i32 = GLF_dead15D_9;
                    let x_16642 : i32 = GLF_dead15E_9;
                    let x_16644 : i32 = GLF_dead15F_9;
                    let x_16646 : i32 = GLF_dead15G_9;
                    let x_16648 : i32 = GLF_dead15I_9;
                    let x_16651 : i32 = GLF_dead15J_9;
                    let x_16653 : i32 = GLF_dead15B_9;
                    let x_16655 : i32 = GLF_dead15C_9;
                    let x_16658 : i32 = GLF_dead15D_9;
                    let x_16660 : i32 = GLF_dead15E_9;
                    let x_16662 : i32 = GLF_dead15F_9;
                    let x_16665 : i32 = GLF_dead15G_9;
                    let x_16668 : i32 = GLF_dead15H_9;
                    let x_16670 : i32 = GLF_dead15I_9;
                    let x_16673 : i32 = GLF_dead15J_9;
                    let x_16676 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16676 & (((((((((~(x_16632) | ~(x_16634)) | ~(x_16637)) | x_16640) | x_16642) | x_16644) | x_16646) | ~(x_16648)) | x_16651) & ((((((((~(x_16653) | ~(x_16655)) | x_16658) | x_16660) | ~(x_16662)) | ~(x_16665)) | x_16668) | ~(x_16670)) | x_16673)));
                    let x_16678 : i32 = GLF_dead15A_9;
                    let x_16680 : i32 = GLF_dead15B_9;
                    let x_16682 : i32 = GLF_dead15C_9;
                    let x_16684 : i32 = GLF_dead15D_9;
                    let x_16686 : i32 = GLF_dead15E_9;
                    let x_16688 : i32 = GLF_dead15H_9;
                    let x_16690 : i32 = GLF_dead15I_9;
                    let x_16693 : i32 = GLF_dead15J_9;
                    let x_16695 : i32 = GLF_dead15B_9;
                    let x_16696 : i32 = GLF_dead15C_9;
                    let x_16698 : i32 = GLF_dead15D_9;
                    let x_16700 : i32 = GLF_dead15E_9;
                    let x_16702 : i32 = GLF_dead15F_9;
                    let x_16704 : i32 = GLF_dead15G_9;
                    let x_16707 : i32 = GLF_dead15H_9;
                    let x_16709 : i32 = GLF_dead15I_9;
                    let x_16712 : i32 = GLF_dead15J_9;
                    let x_16715 : i32 = GLF_dead15A_9;
                    let x_16716 : i32 = GLF_dead15B_9;
                    let x_16718 : i32 = GLF_dead15C_9;
                    let x_16720 : i32 = GLF_dead15D_9;
                    let x_16723 : i32 = GLF_dead15E_9;
                    let x_16725 : i32 = GLF_dead15F_9;
                    let x_16727 : i32 = GLF_dead15G_9;
                    let x_16729 : i32 = GLF_dead15H_9;
                    let x_16731 : i32 = GLF_dead15I_9;
                    let x_16734 : i32 = GLF_dead15J_9;
                    let x_16737 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16737 & (((((((((~(x_16678) | x_16680) | x_16682) | x_16684) | x_16686) | x_16688) | ~(x_16690)) | x_16693) & ((((((((x_16695 | x_16696) | x_16698) | x_16700) | x_16702) | ~(x_16704)) | x_16707) | ~(x_16709)) | x_16712)) & (((((((((x_16715 | x_16716) | x_16718) | ~(x_16720)) | x_16723) | x_16725) | x_16727) | x_16729) | ~(x_16731)) | x_16734)));
                    let x_16739 : i32 = GLF_dead15A_9;
                    let x_16740 : i32 = GLF_dead15B_9;
                    let x_16743 : i32 = GLF_dead15C_9;
                    let x_16745 : i32 = GLF_dead15D_9;
                    let x_16747 : i32 = GLF_dead15E_9;
                    let x_16749 : i32 = GLF_dead15F_9;
                    let x_16751 : i32 = GLF_dead15G_9;
                    let x_16753 : i32 = GLF_dead15H_9;
                    let x_16755 : i32 = GLF_dead15I_9;
                    let x_16758 : i32 = GLF_dead15J_9;
                    let x_16760 : i32 = GLF_dead15B_9;
                    let x_16762 : i32 = GLF_dead15D_9;
                    let x_16764 : i32 = GLF_dead15E_9;
                    let x_16766 : i32 = GLF_dead15F_9;
                    let x_16769 : i32 = GLF_dead15G_9;
                    let x_16772 : i32 = GLF_dead15H_9;
                    let x_16775 : i32 = GLF_dead15I_9;
                    let x_16777 : i32 = GLF_dead15J_9;
                    let x_16780 : i32 = GLF_dead15A_9;
                    let x_16782 : i32 = GLF_dead15B_9;
                    let x_16785 : i32 = GLF_dead15C_9;
                    let x_16787 : i32 = GLF_dead15E_9;
                    let x_16790 : i32 = GLF_dead15G_9;
                    let x_16793 : i32 = GLF_dead15H_9;
                    let x_16796 : i32 = GLF_dead15I_9;
                    let x_16798 : i32 = GLF_dead15J_9;
                    let x_16802 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16802 & (((((((((((x_16739 | ~(x_16740)) | x_16743) | x_16745) | x_16747) | x_16749) | x_16751) | x_16753) | ~(x_16755)) | x_16758) & (((((((~(x_16760) | x_16762) | x_16764) | ~(x_16766)) | ~(x_16769)) | ~(x_16772)) | x_16775) | x_16777)) & (((((((~(x_16780) | ~(x_16782)) | x_16785) | ~(x_16787)) | ~(x_16790)) | ~(x_16793)) | x_16796) | ~(x_16798))));
                    let x_16804 : i32 = GLF_dead15A_9;
                    let x_16806 : i32 = GLF_dead15D_9;
                    let x_16809 : i32 = GLF_dead15E_9;
                    let x_16812 : i32 = GLF_dead15F_9;
                    let x_16815 : i32 = GLF_dead15G_9;
                    let x_16817 : i32 = GLF_dead15H_9;
                    let x_16820 : i32 = GLF_dead15I_9;
                    let x_16822 : i32 = GLF_dead15J_9;
                    let x_16825 : i32 = GLF_dead15A_9;
                    let x_16826 : i32 = GLF_dead15B_9;
                    let x_16828 : i32 = GLF_dead15E_9;
                    let x_16831 : i32 = GLF_dead15F_9;
                    let x_16834 : i32 = GLF_dead15G_9;
                    let x_16837 : i32 = GLF_dead15H_9;
                    let x_16839 : i32 = GLF_dead15I_9;
                    let x_16841 : i32 = GLF_dead15J_9;
                    let x_16845 : i32 = GLF_dead15B_9;
                    let x_16847 : i32 = GLF_dead15C_9;
                    let x_16849 : i32 = GLF_dead15D_9;
                    let x_16851 : i32 = GLF_dead15E_9;
                    let x_16854 : i32 = GLF_dead15F_9;
                    let x_16856 : i32 = GLF_dead15G_9;
                    let x_16859 : i32 = GLF_dead15H_9;
                    let x_16861 : i32 = GLF_dead15I_9;
                    let x_16863 : i32 = GLF_dead15J_9;
                    let x_16867 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16867 & (((((((((~(x_16804) | ~(x_16806)) | ~(x_16809)) | ~(x_16812)) | x_16815) | ~(x_16817)) | x_16820) | ~(x_16822)) & (((((((x_16825 | x_16826) | ~(x_16828)) | ~(x_16831)) | ~(x_16834)) | x_16837) | x_16839) | ~(x_16841))) & ((((((((~(x_16845) | x_16847) | x_16849) | ~(x_16851)) | x_16854) | ~(x_16856)) | x_16859) | x_16861) | ~(x_16863))));
                    let x_16869 : i32 = GLF_dead15B_9;
                    let x_16871 : i32 = GLF_dead15C_9;
                    let x_16874 : i32 = GLF_dead15D_9;
                    let x_16877 : i32 = GLF_dead15E_9;
                    let x_16879 : i32 = GLF_dead15F_9;
                    let x_16881 : i32 = GLF_dead15G_9;
                    let x_16884 : i32 = GLF_dead15H_9;
                    let x_16886 : i32 = GLF_dead15I_9;
                    let x_16888 : i32 = GLF_dead15J_9;
                    let x_16891 : i32 = GLF_dead15A_9;
                    let x_16893 : i32 = GLF_dead15B_9;
                    let x_16896 : i32 = GLF_dead15C_9;
                    let x_16898 : i32 = GLF_dead15D_9;
                    let x_16901 : i32 = GLF_dead15G_9;
                    let x_16903 : i32 = GLF_dead15H_9;
                    let x_16905 : i32 = GLF_dead15I_9;
                    let x_16907 : i32 = GLF_dead15J_9;
                    let x_16911 : i32 = GLF_dead15C_9;
                    let x_16913 : i32 = GLF_dead15D_9;
                    let x_16915 : i32 = GLF_dead15E_9;
                    let x_16918 : i32 = GLF_dead15F_9;
                    let x_16921 : i32 = GLF_dead15G_9;
                    let x_16923 : i32 = GLF_dead15H_9;
                    let x_16925 : i32 = GLF_dead15I_9;
                    let x_16927 : i32 = GLF_dead15J_9;
                    let x_16931 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16931 & ((((((((((~(x_16869) | ~(x_16871)) | ~(x_16874)) | x_16877) | x_16879) | ~(x_16881)) | x_16884) | x_16886) | ~(x_16888)) & (((((((~(x_16891) | ~(x_16893)) | x_16896) | ~(x_16898)) | x_16901) | x_16903) | x_16905) | ~(x_16907))) & (((((((~(x_16911) | x_16913) | ~(x_16915)) | ~(x_16918)) | x_16921) | x_16923) | x_16925) | ~(x_16927))));
                    let x_16933 : i32 = GLF_dead15A_9;
                    let x_16935 : i32 = GLF_dead15B_9;
                    let x_16937 : i32 = GLF_dead15C_9;
                    let x_16939 : i32 = GLF_dead15E_9;
                    let x_16941 : i32 = GLF_dead15F_9;
                    let x_16943 : i32 = GLF_dead15G_9;
                    let x_16945 : i32 = GLF_dead15H_9;
                    let x_16948 : i32 = GLF_dead15I_9;
                    let x_16951 : i32 = GLF_dead15J_9;
                    let x_16953 : i32 = GLF_dead15A_9;
                    let x_16955 : i32 = GLF_dead15B_9;
                    let x_16957 : i32 = GLF_dead15D_9;
                    let x_16959 : i32 = GLF_dead15E_9;
                    let x_16961 : i32 = GLF_dead15G_9;
                    let x_16964 : i32 = GLF_dead15H_9;
                    let x_16966 : i32 = GLF_dead15I_9;
                    let x_16969 : i32 = GLF_dead15J_9;
                    let x_16972 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16972 & (((((((((~(x_16933) | x_16935) | x_16937) | x_16939) | x_16941) | x_16943) | ~(x_16945)) | ~(x_16948)) | x_16951) & (((((((~(x_16953) | x_16955) | x_16957) | x_16959) | ~(x_16961)) | x_16964) | ~(x_16966)) | x_16969)));
                    let x_16974 : i32 = GLF_dead15A_9;
                    let x_16975 : i32 = GLF_dead15B_9;
                    let x_16977 : i32 = GLF_dead15C_9;
                    let x_16980 : i32 = GLF_dead15D_9;
                    let x_16983 : i32 = GLF_dead15E_9;
                    let x_16986 : i32 = GLF_dead15F_9;
                    let x_16989 : i32 = GLF_dead15H_9;
                    let x_16992 : i32 = GLF_dead15I_9;
                    let x_16994 : i32 = GLF_dead15J_9;
                    let x_16997 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_16997 & ((((((((x_16974 | x_16975) | ~(x_16977)) | ~(x_16980)) | ~(x_16983)) | ~(x_16986)) | ~(x_16989)) | x_16992) | ~(x_16994)));
                    let x_16999 : i32 = GLF_dead15A_9;
                    let x_17001 : i32 = GLF_dead15C_9;
                    let x_17004 : i32 = GLF_dead15E_9;
                    let x_17007 : i32 = GLF_dead15F_9;
                    let x_17010 : i32 = GLF_dead15G_9;
                    let x_17012 : i32 = GLF_dead15H_9;
                    let x_17015 : i32 = GLF_dead15I_9;
                    let x_17017 : i32 = GLF_dead15J_9;
                    let x_17020 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_17020 & (((((((~(x_16999) | ~(x_17001)) | ~(x_17004)) | ~(x_17007)) | x_17010) | ~(x_17012)) | x_17015) | ~(x_17017)));
                    let x_17022 : i32 = GLF_dead15A_9;
                    let x_17023 : i32 = GLF_dead15B_9;
                    let x_17026 : i32 = GLF_dead15C_9;
                    let x_17029 : i32 = GLF_dead15D_9;
                    let x_17031 : i32 = GLF_dead15E_9;
                    let x_17034 : i32 = GLF_dead15F_9;
                    let x_17037 : i32 = GLF_dead15H_9;
                    let x_17040 : i32 = GLF_dead15I_9;
                    let x_17042 : i32 = GLF_dead15J_9;
                    let x_17045 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_17045 & ((((((((x_17022 | ~(x_17023)) | ~(x_17026)) | x_17029) | ~(x_17031)) | ~(x_17034)) | ~(x_17037)) | x_17040) | ~(x_17042)));
                    let x_17047 : i32 = GLF_dead15B_9;
                    let x_17048 : i32 = GLF_dead15C_9;
                    let x_17051 : i32 = GLF_dead15D_9;
                    let x_17053 : i32 = GLF_dead15E_9;
                    let x_17056 : i32 = GLF_dead15F_9;
                    let x_17059 : i32 = GLF_dead15G_9;
                    let x_17062 : i32 = GLF_dead15H_9;
                    let x_17065 : i32 = GLF_dead15I_9;
                    let x_17067 : i32 = GLF_dead15J_9;
                    let x_17070 : i32 = GLF_dead15A_9;
                    let x_17072 : i32 = GLF_dead15B_9;
                    let x_17075 : i32 = GLF_dead15C_9;
                    let x_17078 : i32 = GLF_dead15D_9;
                    let x_17080 : i32 = GLF_dead15E_9;
                    let x_17083 : i32 = GLF_dead15F_9;
                    let x_17085 : i32 = GLF_dead15H_9;
                    let x_17088 : i32 = GLF_dead15I_9;
                    let x_17090 : i32 = GLF_dead15J_9;
                    let x_17094 : i32 = GLF_dead15B_9;
                    let x_17096 : i32 = GLF_dead15C_9;
                    let x_17099 : i32 = GLF_dead15D_9;
                    let x_17101 : i32 = GLF_dead15E_9;
                    let x_17104 : i32 = GLF_dead15F_9;
                    let x_17106 : i32 = GLF_dead15G_9;
                    let x_17109 : i32 = GLF_dead15H_9;
                    let x_17112 : i32 = GLF_dead15I_9;
                    let x_17114 : i32 = GLF_dead15J_9;
                    let x_17118 : i32 = GLF_dead15res_9;
                    GLF_dead15res_9 = (x_17118 & ((((((((((x_17047 | ~(x_17048)) | x_17051) | ~(x_17053)) | ~(x_17056)) | ~(x_17059)) | ~(x_17062)) | x_17065) | ~(x_17067)) & ((((((((~(x_17070) | ~(x_17072)) | ~(x_17075)) | x_17078) | ~(x_17080)) | x_17083) | ~(x_17085)) | x_17088) | ~(x_17090))) & ((((((((~(x_17094) | ~(x_17096)) | x_17099) | ~(x_17101)) | x_17104) | ~(x_17106)) | ~(x_17109)) | x_17112) | ~(x_17114))));
                    let x_17120 : i32 = GLF_dead15res_9;
                    let x_17122 : f32 = select(1.0, 0.0, (x_17120 == 0));
                    let x_17123 : vec3<f32> = vec3<f32>(x_17122, x_17122, x_17122);
                    GLF_dead15_GLF_color = vec4<f32>(x_17123.x, x_17123.y, x_17123.z, 1.0);
                  }
                }
                let x_17128 : i32 = GLF_dead8sum_index;
                let x_17129 : i32 = clamp(x_17128, 0, 8);
                let x_17130 : i32 = GLF_dead8c_3;
                let x_17132 : i32 = GLF_dead8r_4;
                let x_17135 : f32 = GLF_dead8m32[clamp(x_17130, 0, 2)][clamp(x_17132, 0, 1)];
                let x_17137 : f32 = GLF_dead8sums[x_17129];
                GLF_dead8sums[x_17129] = (x_17137 + x_17135);
              }
              case 2: {
                let x_15877 : i32 = GLF_dead8sum_index;
                let x_15878 : i32 = clamp(x_15877, 0, 8);
                let x_15879 : i32 = GLF_dead8c_3;
                let x_15881 : i32 = GLF_dead8r_4;
                let x_15884 : f32 = GLF_dead8m24[clamp(x_15879, 0, 1)][clamp(x_15881, 0, 3)];
                let x_15886 : f32 = GLF_dead8sums[x_15878];
                GLF_dead8sums[x_15878] = (x_15886 + x_15884);
              }
              case 1: {
                let x_15864 : i32 = GLF_dead8sum_index;
                let x_15865 : i32 = clamp(x_15864, 0, 8);
                let x_15866 : i32 = GLF_dead8c_3;
                let x_15868 : i32 = GLF_dead8r_4;
                let x_15871 : f32 = GLF_dead8m23[clamp(x_15866, 0, 1)][clamp(x_15868, 0, 2)];
                let x_15873 : f32 = GLF_dead8sums[x_15865];
                GLF_dead8sums[x_15865] = (x_15873 + x_15871);
              }
              case 0: {
                let x_15851 : i32 = GLF_dead8sum_index;
                let x_15852 : i32 = clamp(x_15851, 0, 8);
                let x_15853 : i32 = GLF_dead8c_3;
                let x_15855 : i32 = GLF_dead8r_4;
                let x_15858 : f32 = GLF_dead8m22[clamp(x_15853, 0, 1)][clamp(x_15855, 0, 1)];
                let x_15860 : f32 = GLF_dead8sums[x_15852];
                GLF_dead8sums[x_15852] = (x_15860 + x_15858);
              }
              default: {
              }
            }

            continuing {
              let x_17455 : i32 = GLF_dead8r_4;
              GLF_dead8r_4 = (x_17455 + 1);
            }
          }

          continuing {
            let x_17457 : i32 = GLF_dead8c_3;
            GLF_dead8c_3 = (x_17457 + 1);
          }
        }
        let x_17459 : i32 = GLF_dead8sum_index;
        let x_17460 : i32 = clamp(x_17459, 0, 8);
        let x_17462 : f32 = GLF_dead8sums[x_17460];
        GLF_dead8sums[x_17460] = (x_17462 / 16.0);
        let x_17465 : i32 = GLF_dead8sum_index;
        GLF_dead8sum_index = (x_17465 + 1);

        continuing {
          let x_17467 : i32 = GLF_dead8rows_2;
          GLF_dead8rows_2 = (x_17467 + 1);
        }
      }

      continuing {
        let x_17469 : i32 = GLF_dead8cols_1;
        GLF_dead8cols_1 = (x_17469 + 1);
      }
    }
    let x_17472 : vec4<f32> = x_GLF_color;
    x_GLF_outVarBackup_GLF_color_33 = x_17472;
    x_GLF_color = fma(vec4<f32>(3628.213378906, -7789.263671875, 37.270000458, -0.699999988), vec4<f32>(0.800000012, 52.970001221, -6.400000095, 7.0), vec4<f32>(2.200000048, -3.099999905, 41.669998169, 4.400000095));
    if (true) {
      let x_17490 : vec4<f32> = x_GLF_outVarBackup_GLF_color_33;
      x_GLF_color = x_17490;
    }
    let x_17492 : f32 = gl_FragCoord.y;
    if ((x_17492 < 0.0)) {
      let x_17497 : vec4<f32> = GLF_dead15gl_FragCoord;
      GLF_dead15icoord_10 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_17497.x, x_17497.y)));
      let x_17503 : i32 = GLF_dead15icoord_10.x;
      GLF_dead15A_10 = select(-1, 0, ((x_17503 & 1) != 0));
      let x_17509 : i32 = GLF_dead15icoord_10.x;
      GLF_dead15B_10 = select(-1, 0, ((x_17509 & 2) != 0));
      let x_17515 : i32 = GLF_dead15icoord_10.x;
      GLF_dead15C_10 = select(-1, 0, ((x_17515 & 4) != 0));
      let x_17521 : i32 = GLF_dead15icoord_10.x;
      GLF_dead15D_10 = select(-1, 0, ((x_17521 & 8) != 0));
      let x_17527 : i32 = GLF_dead15icoord_10.x;
      GLF_dead15E_10 = select(-1, 0, ((x_17527 & 16) != 0));
      let x_17533 : i32 = GLF_dead15icoord_10.y;
      GLF_dead15F_10 = select(-1, 0, ((x_17533 & 1) != 0));
      let x_17539 : i32 = GLF_dead15icoord_10.y;
      GLF_dead15G_10 = select(-1, 0, ((x_17539 & 2) != 0));
      let x_17545 : i32 = GLF_dead15icoord_10.y;
      GLF_dead15H_10 = select(-1, 0, ((x_17545 & 4) != 0));
      let x_17551 : i32 = GLF_dead15icoord_10.y;
      GLF_dead15I_10 = select(-1, 0, ((x_17551 & 8) != 0));
      let x_17557 : i32 = GLF_dead15icoord_10.y;
      GLF_dead15J_10 = select(-1, 0, ((x_17557 & 16) != 0));
      let x_17562 : i32 = GLF_dead15A_10;
      let x_17563 : i32 = GLF_dead15C_10;
      let x_17566 : i32 = GLF_dead15D_10;
      let x_17569 : i32 = GLF_dead15E_10;
      let x_17572 : i32 = GLF_dead15F_10;
      let x_17574 : i32 = GLF_dead15G_10;
      let x_17576 : i32 = GLF_dead15H_10;
      let x_17578 : i32 = GLF_dead15I_10;
      let x_17581 : i32 = GLF_dead15J_10;
      let x_17584 : i32 = GLF_dead15B_10;
      let x_17585 : i32 = GLF_dead15C_10;
      let x_17588 : i32 = GLF_dead15D_10;
      let x_17591 : i32 = GLF_dead15E_10;
      let x_17594 : i32 = GLF_dead15F_10;
      let x_17596 : i32 = GLF_dead15G_10;
      let x_17598 : i32 = GLF_dead15H_10;
      let x_17600 : i32 = GLF_dead15I_10;
      let x_17603 : i32 = GLF_dead15J_10;
      let x_17607 : i32 = GLF_dead15A_10;
      let x_17609 : i32 = GLF_dead15C_10;
      let x_17611 : i32 = GLF_dead15D_10;
      let x_17614 : i32 = GLF_dead15E_10;
      let x_17617 : i32 = GLF_dead15F_10;
      let x_17619 : i32 = GLF_dead15H_10;
      let x_17622 : i32 = GLF_dead15I_10;
      let x_17624 : i32 = GLF_dead15J_10;
      let x_17628 : i32 = GLF_dead15A_10;
      let x_17629 : i32 = GLF_dead15B_10;
      let x_17632 : i32 = GLF_dead15D_10;
      let x_17635 : i32 = GLF_dead15E_10;
      let x_17638 : i32 = GLF_dead15G_10;
      let x_17640 : i32 = GLF_dead15H_10;
      let x_17643 : i32 = GLF_dead15I_10;
      let x_17645 : i32 = GLF_dead15J_10;
      GLF_dead15res_10 = (((((((((((x_17562 | ~(x_17563)) | ~(x_17566)) | ~(x_17569)) | x_17572) | x_17574) | x_17576) | ~(x_17578)) | ~(x_17581)) & ((((((((x_17584 | ~(x_17585)) | ~(x_17588)) | ~(x_17591)) | x_17594) | x_17596) | x_17598) | ~(x_17600)) | ~(x_17603))) & (((((((~(x_17607) | x_17609) | ~(x_17611)) | ~(x_17614)) | x_17617) | ~(x_17619)) | x_17622) | ~(x_17624))) & (((((((x_17628 | ~(x_17629)) | ~(x_17632)) | ~(x_17635)) | x_17638) | ~(x_17640)) | x_17643) | ~(x_17645)));
      let x_17649 : i32 = GLF_dead15A_10;
      let x_17650 : i32 = GLF_dead15B_10;
      let x_17652 : i32 = GLF_dead15C_10;
      let x_17655 : i32 = GLF_dead15D_10;
      let x_17657 : i32 = GLF_dead15E_10;
      let x_17660 : i32 = GLF_dead15F_10;
      let x_17662 : i32 = GLF_dead15G_10;
      let x_17664 : i32 = GLF_dead15H_10;
      let x_17667 : i32 = GLF_dead15I_10;
      let x_17669 : i32 = GLF_dead15J_10;
      let x_17672 : i32 = GLF_dead15B_10;
      let x_17673 : i32 = GLF_dead15C_10;
      let x_17676 : i32 = GLF_dead15D_10;
      let x_17679 : i32 = GLF_dead15E_10;
      let x_17682 : i32 = GLF_dead15F_10;
      let x_17685 : i32 = GLF_dead15G_10;
      let x_17688 : i32 = GLF_dead15H_10;
      let x_17690 : i32 = GLF_dead15I_10;
      let x_17692 : i32 = GLF_dead15J_10;
      let x_17696 : i32 = GLF_dead15A_10;
      let x_17697 : i32 = GLF_dead15C_10;
      let x_17699 : i32 = GLF_dead15D_10;
      let x_17702 : i32 = GLF_dead15E_10;
      let x_17705 : i32 = GLF_dead15G_10;
      let x_17708 : i32 = GLF_dead15H_10;
      let x_17710 : i32 = GLF_dead15I_10;
      let x_17712 : i32 = GLF_dead15J_10;
      let x_17716 : i32 = GLF_dead15A_10;
      let x_17717 : i32 = GLF_dead15C_10;
      let x_17719 : i32 = GLF_dead15D_10;
      let x_17722 : i32 = GLF_dead15E_10;
      let x_17725 : i32 = GLF_dead15F_10;
      let x_17728 : i32 = GLF_dead15H_10;
      let x_17730 : i32 = GLF_dead15I_10;
      let x_17732 : i32 = GLF_dead15J_10;
      let x_17736 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_17736 & ((((((((((((x_17649 | x_17650) | ~(x_17652)) | x_17655) | ~(x_17657)) | x_17660) | x_17662) | ~(x_17664)) | x_17667) | ~(x_17669)) & ((((((((x_17672 | ~(x_17673)) | ~(x_17676)) | ~(x_17679)) | ~(x_17682)) | ~(x_17685)) | x_17688) | x_17690) | ~(x_17692))) & (((((((x_17696 | x_17697) | ~(x_17699)) | ~(x_17702)) | ~(x_17705)) | x_17708) | x_17710) | ~(x_17712))) & (((((((x_17716 | x_17717) | ~(x_17719)) | ~(x_17722)) | ~(x_17725)) | x_17728) | x_17730) | ~(x_17732))));
      let x_17738 : i32 = GLF_dead15A_10;
      let x_17739 : i32 = GLF_dead15B_10;
      let x_17741 : i32 = GLF_dead15C_10;
      let x_17744 : i32 = GLF_dead15D_10;
      let x_17746 : i32 = GLF_dead15E_10;
      let x_17749 : i32 = GLF_dead15G_10;
      let x_17752 : i32 = GLF_dead15H_10;
      let x_17754 : i32 = GLF_dead15I_10;
      let x_17756 : i32 = GLF_dead15J_10;
      let x_17759 : i32 = GLF_dead15A_10;
      let x_17761 : i32 = GLF_dead15C_10;
      let x_17763 : i32 = GLF_dead15D_10;
      let x_17765 : i32 = GLF_dead15E_10;
      let x_17768 : i32 = GLF_dead15G_10;
      let x_17771 : i32 = GLF_dead15H_10;
      let x_17773 : i32 = GLF_dead15I_10;
      let x_17775 : i32 = GLF_dead15J_10;
      let x_17779 : i32 = GLF_dead15A_10;
      let x_17781 : i32 = GLF_dead15B_10;
      let x_17784 : i32 = GLF_dead15C_10;
      let x_17787 : i32 = GLF_dead15D_10;
      let x_17790 : i32 = GLF_dead15E_10;
      let x_17792 : i32 = GLF_dead15G_10;
      let x_17795 : i32 = GLF_dead15H_10;
      let x_17797 : i32 = GLF_dead15I_10;
      let x_17799 : i32 = GLF_dead15J_10;
      let x_17803 : i32 = GLF_dead15A_10;
      let x_17804 : i32 = GLF_dead15B_10;
      let x_17807 : i32 = GLF_dead15D_10;
      let x_17809 : i32 = GLF_dead15E_10;
      let x_17812 : i32 = GLF_dead15G_10;
      let x_17814 : i32 = GLF_dead15H_10;
      let x_17816 : i32 = GLF_dead15I_10;
      let x_17818 : i32 = GLF_dead15J_10;
      let x_17822 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_17822 & (((((((((((x_17738 | x_17739) | ~(x_17741)) | x_17744) | ~(x_17746)) | ~(x_17749)) | x_17752) | x_17754) | ~(x_17756)) & (((((((~(x_17759) | x_17761) | x_17763) | ~(x_17765)) | ~(x_17768)) | x_17771) | x_17773) | ~(x_17775))) & ((((((((~(x_17779) | ~(x_17781)) | ~(x_17784)) | ~(x_17787)) | x_17790) | ~(x_17792)) | x_17795) | x_17797) | ~(x_17799))) & (((((((x_17803 | ~(x_17804)) | x_17807) | ~(x_17809)) | x_17812) | x_17814) | x_17816) | ~(x_17818))));
      let x_17824 : i32 = GLF_dead15A_10;
      let x_17826 : i32 = GLF_dead15B_10;
      let x_17828 : i32 = GLF_dead15C_10;
      let x_17831 : i32 = GLF_dead15D_10;
      let x_17833 : i32 = GLF_dead15E_10;
      let x_17836 : i32 = GLF_dead15G_10;
      let x_17838 : i32 = GLF_dead15H_10;
      let x_17840 : i32 = GLF_dead15I_10;
      let x_17842 : i32 = GLF_dead15J_10;
      let x_17845 : i32 = GLF_dead15A_10;
      let x_17846 : i32 = GLF_dead15B_10;
      let x_17849 : i32 = GLF_dead15D_10;
      let x_17852 : i32 = GLF_dead15E_10;
      let x_17854 : i32 = GLF_dead15G_10;
      let x_17856 : i32 = GLF_dead15H_10;
      let x_17858 : i32 = GLF_dead15I_10;
      let x_17860 : i32 = GLF_dead15J_10;
      let x_17864 : i32 = GLF_dead15A_10;
      let x_17865 : i32 = GLF_dead15C_10;
      let x_17868 : i32 = GLF_dead15D_10;
      let x_17871 : i32 = GLF_dead15E_10;
      let x_17873 : i32 = GLF_dead15F_10;
      let x_17875 : i32 = GLF_dead15G_10;
      let x_17877 : i32 = GLF_dead15H_10;
      let x_17879 : i32 = GLF_dead15I_10;
      let x_17881 : i32 = GLF_dead15J_10;
      let x_17885 : i32 = GLF_dead15A_10;
      let x_17887 : i32 = GLF_dead15C_10;
      let x_17889 : i32 = GLF_dead15D_10;
      let x_17892 : i32 = GLF_dead15E_10;
      let x_17894 : i32 = GLF_dead15F_10;
      let x_17896 : i32 = GLF_dead15G_10;
      let x_17898 : i32 = GLF_dead15H_10;
      let x_17900 : i32 = GLF_dead15I_10;
      let x_17902 : i32 = GLF_dead15J_10;
      let x_17906 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_17906 & (((((((((((~(x_17824) | x_17826) | ~(x_17828)) | x_17831) | ~(x_17833)) | x_17836) | x_17838) | x_17840) | ~(x_17842)) & (((((((x_17845 | ~(x_17846)) | ~(x_17849)) | x_17852) | x_17854) | x_17856) | x_17858) | ~(x_17860))) & ((((((((x_17864 | ~(x_17865)) | ~(x_17868)) | x_17871) | x_17873) | x_17875) | x_17877) | x_17879) | ~(x_17881))) & ((((((((~(x_17885) | x_17887) | ~(x_17889)) | x_17892) | x_17894) | x_17896) | x_17898) | x_17900) | ~(x_17902))));
      let x_17908 : i32 = GLF_dead15A_10;
      let x_17910 : i32 = GLF_dead15B_10;
      let x_17913 : i32 = GLF_dead15C_10;
      let x_17915 : i32 = GLF_dead15D_10;
      let x_17918 : i32 = GLF_dead15E_10;
      let x_17921 : i32 = GLF_dead15F_10;
      let x_17924 : i32 = GLF_dead15G_10;
      let x_17927 : i32 = GLF_dead15H_10;
      let x_17930 : i32 = GLF_dead15I_10;
      let x_17933 : i32 = GLF_dead15J_10;
      let x_17935 : i32 = GLF_dead15A_10;
      let x_17936 : i32 = GLF_dead15B_10;
      let x_17939 : i32 = GLF_dead15C_10;
      let x_17941 : i32 = GLF_dead15D_10;
      let x_17943 : i32 = GLF_dead15E_10;
      let x_17946 : i32 = GLF_dead15F_10;
      let x_17949 : i32 = GLF_dead15G_10;
      let x_17952 : i32 = GLF_dead15H_10;
      let x_17955 : i32 = GLF_dead15I_10;
      let x_17958 : i32 = GLF_dead15J_10;
      let x_17961 : i32 = GLF_dead15A_10;
      let x_17963 : i32 = GLF_dead15B_10;
      let x_17965 : i32 = GLF_dead15C_10;
      let x_17967 : i32 = GLF_dead15D_10;
      let x_17969 : i32 = GLF_dead15E_10;
      let x_17972 : i32 = GLF_dead15G_10;
      let x_17975 : i32 = GLF_dead15H_10;
      let x_17978 : i32 = GLF_dead15I_10;
      let x_17981 : i32 = GLF_dead15J_10;
      let x_17984 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_17984 & (((((((((((~(x_17908) | ~(x_17910)) | x_17913) | ~(x_17915)) | ~(x_17918)) | ~(x_17921)) | ~(x_17924)) | ~(x_17927)) | ~(x_17930)) | x_17933) & (((((((((x_17935 | ~(x_17936)) | x_17939) | x_17941) | ~(x_17943)) | ~(x_17946)) | ~(x_17949)) | ~(x_17952)) | ~(x_17955)) | x_17958)) & ((((((((~(x_17961) | x_17963) | x_17965) | x_17967) | ~(x_17969)) | ~(x_17972)) | ~(x_17975)) | ~(x_17978)) | x_17981)));
      let x_17986 : i32 = GLF_dead15C_10;
      let x_17988 : i32 = GLF_dead15D_10;
      let x_17991 : i32 = GLF_dead15E_10;
      let x_17993 : i32 = GLF_dead15F_10;
      let x_17996 : i32 = GLF_dead15G_10;
      let x_17999 : i32 = GLF_dead15H_10;
      let x_18002 : i32 = GLF_dead15I_10;
      let x_18005 : i32 = GLF_dead15J_10;
      let x_18007 : i32 = GLF_dead15A_10;
      let x_18009 : i32 = GLF_dead15C_10;
      let x_18012 : i32 = GLF_dead15D_10;
      let x_18015 : i32 = GLF_dead15E_10;
      let x_18017 : i32 = GLF_dead15G_10;
      let x_18020 : i32 = GLF_dead15H_10;
      let x_18023 : i32 = GLF_dead15I_10;
      let x_18026 : i32 = GLF_dead15J_10;
      let x_18029 : i32 = GLF_dead15B_10;
      let x_18030 : i32 = GLF_dead15D_10;
      let x_18033 : i32 = GLF_dead15E_10;
      let x_18035 : i32 = GLF_dead15F_10;
      let x_18038 : i32 = GLF_dead15H_10;
      let x_18041 : i32 = GLF_dead15I_10;
      let x_18044 : i32 = GLF_dead15J_10;
      let x_18047 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18047 & (((((((((~(x_17986) | ~(x_17988)) | x_17991) | ~(x_17993)) | ~(x_17996)) | ~(x_17999)) | ~(x_18002)) | x_18005) & (((((((~(x_18007) | ~(x_18009)) | ~(x_18012)) | x_18015) | ~(x_18017)) | ~(x_18020)) | ~(x_18023)) | x_18026)) & ((((((x_18029 | ~(x_18030)) | x_18033) | ~(x_18035)) | ~(x_18038)) | ~(x_18041)) | x_18044)));
      let x_18049 : i32 = GLF_dead15A_10;
      let x_18050 : i32 = GLF_dead15B_10;
      let x_18052 : i32 = GLF_dead15C_10;
      let x_18054 : i32 = GLF_dead15D_10;
      let x_18057 : i32 = GLF_dead15E_10;
      let x_18059 : i32 = GLF_dead15G_10;
      let x_18062 : i32 = GLF_dead15H_10;
      let x_18065 : i32 = GLF_dead15I_10;
      let x_18068 : i32 = GLF_dead15J_10;
      let x_18070 : i32 = GLF_dead15B_10;
      let x_18071 : i32 = GLF_dead15C_10;
      let x_18073 : i32 = GLF_dead15D_10;
      let x_18075 : i32 = GLF_dead15E_10;
      let x_18078 : i32 = GLF_dead15F_10;
      let x_18080 : i32 = GLF_dead15G_10;
      let x_18083 : i32 = GLF_dead15H_10;
      let x_18086 : i32 = GLF_dead15I_10;
      let x_18089 : i32 = GLF_dead15J_10;
      let x_18092 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18092 & (((((((((x_18049 | x_18050) | x_18052) | ~(x_18054)) | x_18057) | ~(x_18059)) | ~(x_18062)) | ~(x_18065)) | x_18068) & ((((((((x_18070 | x_18071) | x_18073) | ~(x_18075)) | x_18078) | ~(x_18080)) | ~(x_18083)) | ~(x_18086)) | x_18089)));
      let x_18094 : i32 = GLF_dead15A_10;
      let x_18095 : i32 = GLF_dead15C_10;
      let x_18098 : i32 = GLF_dead15D_10;
      let x_18100 : i32 = GLF_dead15E_10;
      let x_18102 : i32 = GLF_dead15F_10;
      let x_18104 : i32 = GLF_dead15G_10;
      let x_18107 : i32 = GLF_dead15H_10;
      let x_18110 : i32 = GLF_dead15I_10;
      let x_18113 : i32 = GLF_dead15J_10;
      let x_18115 : i32 = GLF_dead15B_10;
      let x_18116 : i32 = GLF_dead15C_10;
      let x_18119 : i32 = GLF_dead15D_10;
      let x_18121 : i32 = GLF_dead15E_10;
      let x_18123 : i32 = GLF_dead15F_10;
      let x_18125 : i32 = GLF_dead15G_10;
      let x_18128 : i32 = GLF_dead15H_10;
      let x_18131 : i32 = GLF_dead15J_10;
      let x_18134 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18134 & (((((((((x_18094 | ~(x_18095)) | x_18098) | x_18100) | x_18102) | ~(x_18104)) | ~(x_18107)) | ~(x_18110)) | x_18113) & (((((((x_18115 | ~(x_18116)) | x_18119) | x_18121) | x_18123) | ~(x_18125)) | ~(x_18128)) | x_18131)));
      let x_18136 : i32 = GLF_dead15A_10;
      let x_18138 : i32 = GLF_dead15B_10;
      let x_18141 : i32 = GLF_dead15C_10;
      let x_18143 : i32 = GLF_dead15D_10;
      let x_18145 : i32 = GLF_dead15E_10;
      let x_18147 : i32 = GLF_dead15F_10;
      let x_18149 : i32 = GLF_dead15G_10;
      let x_18152 : i32 = GLF_dead15H_10;
      let x_18155 : i32 = GLF_dead15I_10;
      let x_18158 : i32 = GLF_dead15J_10;
      let x_18160 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18160 & (((((((((~(x_18136) | ~(x_18138)) | x_18141) | x_18143) | x_18145) | x_18147) | ~(x_18149)) | ~(x_18152)) | ~(x_18155)) | x_18158));
      let x_18162 : i32 = GLF_dead15A_10;
      let x_18163 : i32 = GLF_dead15B_10;
      let x_18165 : i32 = GLF_dead15C_10;
      let x_18168 : i32 = GLF_dead15D_10;
      let x_18171 : i32 = GLF_dead15E_10;
      let x_18173 : i32 = GLF_dead15G_10;
      let x_18175 : i32 = GLF_dead15H_10;
      let x_18178 : i32 = GLF_dead15I_10;
      let x_18181 : i32 = GLF_dead15J_10;
      let x_18183 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18183 & ((((((((x_18162 | x_18163) | ~(x_18165)) | ~(x_18168)) | x_18171) | x_18173) | ~(x_18175)) | ~(x_18178)) | x_18181));
      let x_18185 : i32 = GLF_dead15B_10;
      let x_18187 : i32 = GLF_dead15D_10;
      let x_18189 : i32 = GLF_dead15E_10;
      let x_18191 : i32 = GLF_dead15F_10;
      let x_18194 : i32 = GLF_dead15G_10;
      let x_18196 : i32 = GLF_dead15H_10;
      let x_18199 : i32 = GLF_dead15I_10;
      let x_18202 : i32 = GLF_dead15J_10;
      let x_18204 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18204 & (((((((~(x_18185) | x_18187) | x_18189) | ~(x_18191)) | x_18194) | ~(x_18196)) | ~(x_18199)) | x_18202));
      let x_18206 : i32 = GLF_dead15B_10;
      let x_18208 : i32 = GLF_dead15C_10;
      let x_18210 : i32 = GLF_dead15D_10;
      let x_18213 : i32 = GLF_dead15E_10;
      let x_18215 : i32 = GLF_dead15F_10;
      let x_18217 : i32 = GLF_dead15G_10;
      let x_18219 : i32 = GLF_dead15H_10;
      let x_18222 : i32 = GLF_dead15I_10;
      let x_18225 : i32 = GLF_dead15J_10;
      let x_18227 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18227 & ((((((((~(x_18206) | x_18208) | ~(x_18210)) | x_18213) | x_18215) | x_18217) | ~(x_18219)) | ~(x_18222)) | x_18225));
      let x_18229 : i32 = GLF_dead15A_10;
      let x_18231 : i32 = GLF_dead15B_10;
      let x_18234 : i32 = GLF_dead15C_10;
      let x_18237 : i32 = GLF_dead15D_10;
      let x_18239 : i32 = GLF_dead15E_10;
      let x_18241 : i32 = GLF_dead15F_10;
      let x_18243 : i32 = GLF_dead15G_10;
      let x_18245 : i32 = GLF_dead15I_10;
      let x_18248 : i32 = GLF_dead15J_10;
      let x_18250 : i32 = GLF_dead15B_10;
      let x_18252 : i32 = GLF_dead15C_10;
      let x_18255 : i32 = GLF_dead15D_10;
      let x_18257 : i32 = GLF_dead15E_10;
      let x_18259 : i32 = GLF_dead15F_10;
      let x_18262 : i32 = GLF_dead15G_10;
      let x_18265 : i32 = GLF_dead15H_10;
      let x_18267 : i32 = GLF_dead15I_10;
      let x_18270 : i32 = GLF_dead15J_10;
      let x_18273 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18273 & (((((((((~(x_18229) | ~(x_18231)) | ~(x_18234)) | x_18237) | x_18239) | x_18241) | x_18243) | ~(x_18245)) | x_18248) & ((((((((~(x_18250) | ~(x_18252)) | x_18255) | x_18257) | ~(x_18259)) | ~(x_18262)) | x_18265) | ~(x_18267)) | x_18270)));
      let x_18275 : i32 = GLF_dead15A_10;
      let x_18277 : i32 = GLF_dead15B_10;
      let x_18279 : i32 = GLF_dead15C_10;
      let x_18281 : i32 = GLF_dead15D_10;
      let x_18283 : i32 = GLF_dead15E_10;
      let x_18285 : i32 = GLF_dead15H_10;
      let x_18287 : i32 = GLF_dead15I_10;
      let x_18290 : i32 = GLF_dead15J_10;
      let x_18292 : i32 = GLF_dead15B_10;
      let x_18293 : i32 = GLF_dead15C_10;
      let x_18295 : i32 = GLF_dead15D_10;
      let x_18297 : i32 = GLF_dead15E_10;
      let x_18299 : i32 = GLF_dead15F_10;
      let x_18301 : i32 = GLF_dead15G_10;
      let x_18304 : i32 = GLF_dead15H_10;
      let x_18306 : i32 = GLF_dead15I_10;
      let x_18309 : i32 = GLF_dead15J_10;
      let x_18312 : i32 = GLF_dead15A_10;
      let x_18313 : i32 = GLF_dead15B_10;
      let x_18315 : i32 = GLF_dead15C_10;
      let x_18317 : i32 = GLF_dead15D_10;
      let x_18320 : i32 = GLF_dead15E_10;
      let x_18322 : i32 = GLF_dead15F_10;
      let x_18324 : i32 = GLF_dead15G_10;
      let x_18326 : i32 = GLF_dead15H_10;
      let x_18328 : i32 = GLF_dead15I_10;
      let x_18331 : i32 = GLF_dead15J_10;
      let x_18334 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18334 & (((((((((~(x_18275) | x_18277) | x_18279) | x_18281) | x_18283) | x_18285) | ~(x_18287)) | x_18290) & ((((((((x_18292 | x_18293) | x_18295) | x_18297) | x_18299) | ~(x_18301)) | x_18304) | ~(x_18306)) | x_18309)) & (((((((((x_18312 | x_18313) | x_18315) | ~(x_18317)) | x_18320) | x_18322) | x_18324) | x_18326) | ~(x_18328)) | x_18331)));
      let x_18336 : i32 = GLF_dead15A_10;
      let x_18337 : i32 = GLF_dead15B_10;
      let x_18340 : i32 = GLF_dead15C_10;
      let x_18342 : i32 = GLF_dead15D_10;
      let x_18344 : i32 = GLF_dead15E_10;
      let x_18346 : i32 = GLF_dead15F_10;
      let x_18348 : i32 = GLF_dead15G_10;
      let x_18350 : i32 = GLF_dead15H_10;
      let x_18352 : i32 = GLF_dead15I_10;
      let x_18355 : i32 = GLF_dead15J_10;
      let x_18357 : i32 = GLF_dead15B_10;
      let x_18359 : i32 = GLF_dead15D_10;
      let x_18361 : i32 = GLF_dead15E_10;
      let x_18363 : i32 = GLF_dead15F_10;
      let x_18366 : i32 = GLF_dead15G_10;
      let x_18369 : i32 = GLF_dead15H_10;
      let x_18372 : i32 = GLF_dead15I_10;
      let x_18374 : i32 = GLF_dead15J_10;
      let x_18377 : i32 = GLF_dead15A_10;
      let x_18379 : i32 = GLF_dead15B_10;
      let x_18382 : i32 = GLF_dead15C_10;
      let x_18384 : i32 = GLF_dead15E_10;
      let x_18387 : i32 = GLF_dead15G_10;
      let x_18390 : i32 = GLF_dead15H_10;
      let x_18393 : i32 = GLF_dead15I_10;
      let x_18395 : i32 = GLF_dead15J_10;
      let x_18399 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18399 & (((((((((((x_18336 | ~(x_18337)) | x_18340) | x_18342) | x_18344) | x_18346) | x_18348) | x_18350) | ~(x_18352)) | x_18355) & (((((((~(x_18357) | x_18359) | x_18361) | ~(x_18363)) | ~(x_18366)) | ~(x_18369)) | x_18372) | x_18374)) & (((((((~(x_18377) | ~(x_18379)) | x_18382) | ~(x_18384)) | ~(x_18387)) | ~(x_18390)) | x_18393) | ~(x_18395))));
      let x_18401 : i32 = GLF_dead15A_10;
      let x_18403 : i32 = GLF_dead15D_10;
      let x_18406 : i32 = GLF_dead15E_10;
      let x_18409 : i32 = GLF_dead15F_10;
      let x_18412 : i32 = GLF_dead15G_10;
      let x_18414 : i32 = GLF_dead15H_10;
      let x_18417 : i32 = GLF_dead15I_10;
      let x_18419 : i32 = GLF_dead15J_10;
      let x_18422 : i32 = GLF_dead15A_10;
      let x_18423 : i32 = GLF_dead15B_10;
      let x_18425 : i32 = GLF_dead15E_10;
      let x_18428 : i32 = GLF_dead15F_10;
      let x_18431 : i32 = GLF_dead15G_10;
      let x_18434 : i32 = GLF_dead15H_10;
      let x_18436 : i32 = GLF_dead15I_10;
      let x_18438 : i32 = GLF_dead15J_10;
      let x_18442 : i32 = GLF_dead15B_10;
      let x_18444 : i32 = GLF_dead15C_10;
      let x_18446 : i32 = GLF_dead15D_10;
      let x_18448 : i32 = GLF_dead15E_10;
      let x_18451 : i32 = GLF_dead15F_10;
      let x_18453 : i32 = GLF_dead15G_10;
      let x_18456 : i32 = GLF_dead15H_10;
      let x_18458 : i32 = GLF_dead15I_10;
      let x_18460 : i32 = GLF_dead15J_10;
      let x_18464 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18464 & (((((((((~(x_18401) | ~(x_18403)) | ~(x_18406)) | ~(x_18409)) | x_18412) | ~(x_18414)) | x_18417) | ~(x_18419)) & (((((((x_18422 | x_18423) | ~(x_18425)) | ~(x_18428)) | ~(x_18431)) | x_18434) | x_18436) | ~(x_18438))) & ((((((((~(x_18442) | x_18444) | x_18446) | ~(x_18448)) | x_18451) | ~(x_18453)) | x_18456) | x_18458) | ~(x_18460))));
      let x_18466 : i32 = GLF_dead15B_10;
      let x_18468 : i32 = GLF_dead15C_10;
      let x_18471 : i32 = GLF_dead15D_10;
      let x_18474 : i32 = GLF_dead15E_10;
      let x_18476 : i32 = GLF_dead15F_10;
      let x_18478 : i32 = GLF_dead15G_10;
      let x_18481 : i32 = GLF_dead15H_10;
      let x_18483 : i32 = GLF_dead15I_10;
      let x_18485 : i32 = GLF_dead15J_10;
      let x_18488 : i32 = GLF_dead15A_10;
      let x_18490 : i32 = GLF_dead15B_10;
      let x_18493 : i32 = GLF_dead15C_10;
      let x_18495 : i32 = GLF_dead15D_10;
      let x_18498 : i32 = GLF_dead15G_10;
      let x_18500 : i32 = GLF_dead15H_10;
      let x_18502 : i32 = GLF_dead15I_10;
      let x_18504 : i32 = GLF_dead15J_10;
      let x_18508 : i32 = GLF_dead15C_10;
      let x_18510 : i32 = GLF_dead15D_10;
      let x_18512 : i32 = GLF_dead15E_10;
      let x_18515 : i32 = GLF_dead15F_10;
      let x_18518 : i32 = GLF_dead15G_10;
      let x_18520 : i32 = GLF_dead15H_10;
      let x_18522 : i32 = GLF_dead15I_10;
      let x_18524 : i32 = GLF_dead15J_10;
      let x_18528 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18528 & ((((((((((~(x_18466) | ~(x_18468)) | ~(x_18471)) | x_18474) | x_18476) | ~(x_18478)) | x_18481) | x_18483) | ~(x_18485)) & (((((((~(x_18488) | ~(x_18490)) | x_18493) | ~(x_18495)) | x_18498) | x_18500) | x_18502) | ~(x_18504))) & (((((((~(x_18508) | x_18510) | ~(x_18512)) | ~(x_18515)) | x_18518) | x_18520) | x_18522) | ~(x_18524))));
      let x_18530 : i32 = GLF_dead15A_10;
      let x_18532 : i32 = GLF_dead15B_10;
      let x_18534 : i32 = GLF_dead15C_10;
      let x_18536 : i32 = GLF_dead15E_10;
      let x_18538 : i32 = GLF_dead15F_10;
      let x_18540 : i32 = GLF_dead15G_10;
      let x_18542 : i32 = GLF_dead15H_10;
      let x_18545 : i32 = GLF_dead15I_10;
      let x_18548 : i32 = GLF_dead15J_10;
      let x_18550 : i32 = GLF_dead15A_10;
      let x_18552 : i32 = GLF_dead15B_10;
      let x_18554 : i32 = GLF_dead15D_10;
      let x_18556 : i32 = GLF_dead15E_10;
      let x_18558 : i32 = GLF_dead15G_10;
      let x_18561 : i32 = GLF_dead15H_10;
      let x_18563 : i32 = GLF_dead15I_10;
      let x_18566 : i32 = GLF_dead15J_10;
      let x_18569 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18569 & (((((((((~(x_18530) | x_18532) | x_18534) | x_18536) | x_18538) | x_18540) | ~(x_18542)) | ~(x_18545)) | x_18548) & (((((((~(x_18550) | x_18552) | x_18554) | x_18556) | ~(x_18558)) | x_18561) | ~(x_18563)) | x_18566)));
      let x_18571 : i32 = GLF_dead15A_10;
      let x_18572 : i32 = GLF_dead15B_10;
      let x_18574 : i32 = GLF_dead15C_10;
      let x_18577 : i32 = GLF_dead15D_10;
      let x_18580 : i32 = GLF_dead15E_10;
      let x_18583 : i32 = GLF_dead15F_10;
      let x_18586 : i32 = GLF_dead15H_10;
      let x_18589 : i32 = GLF_dead15I_10;
      let x_18591 : i32 = GLF_dead15J_10;
      let x_18594 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18594 & ((((((((x_18571 | x_18572) | ~(x_18574)) | ~(x_18577)) | ~(x_18580)) | ~(x_18583)) | ~(x_18586)) | x_18589) | ~(x_18591)));
      let x_18596 : i32 = GLF_dead15A_10;
      let x_18598 : i32 = GLF_dead15C_10;
      let x_18601 : i32 = GLF_dead15E_10;
      let x_18604 : i32 = GLF_dead15F_10;
      let x_18607 : i32 = GLF_dead15G_10;
      let x_18609 : i32 = GLF_dead15H_10;
      let x_18612 : i32 = GLF_dead15I_10;
      let x_18614 : i32 = GLF_dead15J_10;
      let x_18617 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18617 & (((((((~(x_18596) | ~(x_18598)) | ~(x_18601)) | ~(x_18604)) | x_18607) | ~(x_18609)) | x_18612) | ~(x_18614)));
      let x_18619 : i32 = GLF_dead15A_10;
      let x_18620 : i32 = GLF_dead15B_10;
      let x_18623 : i32 = GLF_dead15C_10;
      let x_18626 : i32 = GLF_dead15D_10;
      let x_18628 : i32 = GLF_dead15E_10;
      let x_18631 : i32 = GLF_dead15F_10;
      let x_18634 : i32 = GLF_dead15H_10;
      let x_18637 : i32 = GLF_dead15I_10;
      let x_18639 : i32 = GLF_dead15J_10;
      let x_18642 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18642 & ((((((((x_18619 | ~(x_18620)) | ~(x_18623)) | x_18626) | ~(x_18628)) | ~(x_18631)) | ~(x_18634)) | x_18637) | ~(x_18639)));
      let x_18644 : i32 = GLF_dead15B_10;
      let x_18645 : i32 = GLF_dead15C_10;
      let x_18648 : i32 = GLF_dead15D_10;
      let x_18650 : i32 = GLF_dead15E_10;
      let x_18653 : i32 = GLF_dead15F_10;
      let x_18656 : i32 = GLF_dead15G_10;
      let x_18659 : i32 = GLF_dead15H_10;
      let x_18662 : i32 = GLF_dead15I_10;
      let x_18664 : i32 = GLF_dead15J_10;
      let x_18667 : i32 = GLF_dead15A_10;
      let x_18669 : i32 = GLF_dead15B_10;
      let x_18672 : i32 = GLF_dead15C_10;
      let x_18675 : i32 = GLF_dead15D_10;
      let x_18677 : i32 = GLF_dead15E_10;
      let x_18680 : i32 = GLF_dead15F_10;
      let x_18682 : i32 = GLF_dead15H_10;
      let x_18685 : i32 = GLF_dead15I_10;
      let x_18687 : i32 = GLF_dead15J_10;
      let x_18691 : i32 = GLF_dead15B_10;
      let x_18693 : i32 = GLF_dead15C_10;
      let x_18696 : i32 = GLF_dead15D_10;
      let x_18698 : i32 = GLF_dead15E_10;
      let x_18701 : i32 = GLF_dead15F_10;
      let x_18703 : i32 = GLF_dead15G_10;
      let x_18706 : i32 = GLF_dead15H_10;
      let x_18709 : i32 = GLF_dead15I_10;
      let x_18711 : i32 = GLF_dead15J_10;
      let x_18715 : i32 = GLF_dead15res_10;
      GLF_dead15res_10 = (x_18715 & ((((((((((x_18644 | ~(x_18645)) | x_18648) | ~(x_18650)) | ~(x_18653)) | ~(x_18656)) | ~(x_18659)) | x_18662) | ~(x_18664)) & ((((((((~(x_18667) | ~(x_18669)) | ~(x_18672)) | x_18675) | ~(x_18677)) | x_18680) | ~(x_18682)) | x_18685) | ~(x_18687))) & ((((((((~(x_18691) | ~(x_18693)) | x_18696) | ~(x_18698)) | x_18701) | ~(x_18703)) | ~(x_18706)) | x_18709) | ~(x_18711))));
      let x_18717 : i32 = GLF_dead15res_10;
      let x_18719 : f32 = select(1.0, 0.0, (x_18717 == 0));
      let x_18720 : vec3<f32> = vec3<f32>(x_18719, x_18719, x_18719);
      GLF_dead15_GLF_color = vec4<f32>(x_18720.x, x_18720.y, x_18720.z, 1.0);
    }
    let x_18727 : f32 = GLF_dead8gl_FragCoord.x;
    let x_18729 : f32 = x_3482.GLF_dead8resolution.x;
    GLF_dead8region_x = i32((x_18727 / (x_18729 / 3.0)));
    let x_18736 : f32 = GLF_dead8gl_FragCoord.y;
    let x_18738 : f32 = x_3482.GLF_dead8resolution.x;
    GLF_dead8region_y = i32((x_18736 / (x_18738 / 3.0)));
    let x_18743 : i32 = GLF_dead8region_y;
    let x_18745 : i32 = GLF_dead8region_x;
    GLF_dead8overall_region = ((x_18743 * 3) + x_18745);
    let x_18747 : i32 = GLF_dead8overall_region;
    let x_18749 : i32 = GLF_dead8overall_region;
    if (((x_18747 > 0) & (x_18749 < 9))) {
      let x_18754 : i32 = GLF_dead8overall_region;
      let x_18757 : f32 = GLF_dead8sums[clamp(x_18754, 0, 8)];
      let x_18758 : vec3<f32> = vec3<f32>(x_18757, x_18757, x_18757);
      GLF_dead8_GLF_color = vec4<f32>(x_18758.x, x_18758.y, x_18758.z, 1.0);
    } else {
      GLF_dead8_GLF_color = vec4<f32>(0.0, 0.0, 0.0, 1.0);
    }
  }
  if (false) {
    let x_18768 : f32 = x_655.GLF_dead8one;
    let x_18772 : f32 = x_655.GLF_dead8one;
    let x_18775 : f32 = x_655.GLF_dead8one;
    let x_18777 : f32 = x_655.GLF_dead8one;
    let x_18779 : f32 = x_655.GLF_dead8one;
    let x_18781 : f32 = x_655.GLF_dead8one;
    let x_18785 : f32 = x_655.GLF_dead8one;
    let x_18787 : f32 = x_655.GLF_dead8one;
    let x_18789 : f32 = x_655.GLF_dead8one;
    let x_18791 : f32 = lin.y;
    let x_18794 : f32 = x_655.GLF_dead8one;
    let x_18798 : f32 = x_655.GLF_dead8one;
    let x_18800 : f32 = lin.y;
    let x_18802 : f32 = x_655.GLF_dead8one;
    let x_18805 : f32 = x_655.GLF_dead8one;
    let x_18807 : f32 = x_655.GLF_dead8one;
    let x_18809 : f32 = x_655.GLF_dead8one;
    let x_18811 : f32 = x_655.GLF_dead8one;
    let x_18813 : f32 = x_655.GLF_dead8one;
    let x_18815 : f32 = x_655.GLF_dead8one;
    let x_18818 : f32 = x_655.GLF_dead8one;
    let x_18820 : f32 = x_655.GLF_dead8one;
    let x_18823 : f32 = x_655.GLF_dead8one;
    let x_18826 : f32 = x_655.GLF_dead8one;
    let x_18828 : f32 = x_655.GLF_dead8one;
    let x_18831 : f32 = x_655.GLF_dead8one;
    let x_18833 : f32 = x_655.GLF_dead8one;
    let x_18835 : f32 = lin.y;
    let x_18837 : f32 = x_655.GLF_dead8one;
    let x_18839 : f32 = x_655.GLF_dead8one;
    let x_18841 : f32 = x_655.GLF_dead8one;
    donor_replacementGLF_dead13A_6 = array<f32, 50u>(x_18768, bitcast<f32>(4925u), x_18772, -149.895996094, -0.699999988, x_18775, x_18777, (x_18779 - (x_18781 * floor((x_18779 / x_18781)))), 88.730003357, -3.200000048, x_18785, x_18787, x_18789, 7.699999809, -3.099999905, x_18791, 3.200000048, mix(x_18794, -44.779998779, 0.0), x_18798, x_18800, mix(x_18802, -44.779998779, 0.0), x_18805, x_18807, x_18809, x_18811, x_18813, 7.699999809, x_18815, -3.099999905, 88.730003357, -149.895996094, bitcast<f32>(4925u), -3.200000048, -0.699999988, (x_18818 - (x_18820 * floor((x_18818 / x_18820)))), 3.200000048, mix(x_18823, -44.779998779, 0.0), 88.730003357, x_18826, 7.699999809, x_18828, bitcast<f32>(4925u), x_18831, -3.200000048, x_18833, x_18835, -149.895996094, x_18837, x_18839, x_18841);
    let x_18844 : f32 = GLF_dead13gl_FragCoord.x;
    if ((i32(x_18844) < 80)) {
      let x_18850 : f32 = donor_replacementGLF_dead13A_6[15];
      let x_18852 : f32 = x_728.GLF_dead13resolution.x;
      let x_18855 : f32 = donor_replacementGLF_dead13A_6[19];
      let x_18857 : f32 = x_728.GLF_dead13resolution.y;
      GLF_dead13_GLF_color = vec4<f32>((x_18850 / x_18852), (x_18855 / x_18857), 1.0, 1.0);
    } else {
      let x_18862 : f32 = GLF_dead13gl_FragCoord.x;
      if ((i32(x_18862) < 100)) {
        let x_18868 : f32 = donor_replacementGLF_dead13A_6[20];
        let x_18870 : f32 = x_728.GLF_dead13resolution.x;
        let x_18873 : f32 = donor_replacementGLF_dead13A_6[24];
        let x_18875 : f32 = x_728.GLF_dead13resolution.y;
        GLF_dead13_GLF_color = vec4<f32>((x_18868 / x_18870), (x_18873 / x_18875), 1.0, 1.0);
      } else {
        let x_18880 : f32 = GLF_dead13gl_FragCoord.x;
        if ((i32(x_18880) < 120)) {
          let x_18886 : f32 = donor_replacementGLF_dead13A_6[25];
          let x_18888 : f32 = x_728.GLF_dead13resolution.x;
          let x_18891 : f32 = donor_replacementGLF_dead13A_6[29];
          let x_18893 : f32 = x_728.GLF_dead13resolution.y;
          GLF_dead13_GLF_color = vec4<f32>((x_18886 / x_18888), (x_18891 / x_18893), 1.0, 1.0);
        } else {
          let x_18898 : f32 = GLF_dead13gl_FragCoord.x;
          if ((i32(x_18898) < 140)) {
            let x_18904 : f32 = donor_replacementGLF_dead13A_6[30];
            let x_18906 : f32 = x_728.GLF_dead13resolution.x;
            let x_18909 : f32 = donor_replacementGLF_dead13A_6[34];
            let x_18911 : f32 = x_728.GLF_dead13resolution.y;
            GLF_dead13_GLF_color = vec4<f32>((x_18904 / x_18906), (x_18909 / x_18911), 1.0, 1.0);
          } else {
            let x_18916 : f32 = GLF_dead13gl_FragCoord.x;
            if ((i32(x_18916) < 160)) {
              let x_18922 : f32 = donor_replacementGLF_dead13A_6[35];
              let x_18924 : f32 = x_728.GLF_dead13resolution.x;
              let x_18927 : f32 = donor_replacementGLF_dead13A_6[39];
              let x_18929 : f32 = x_728.GLF_dead13resolution.y;
              GLF_dead13_GLF_color = vec4<f32>((x_18922 / x_18924), (x_18927 / x_18929), 1.0, 1.0);
            } else {
              let x_18934 : f32 = GLF_dead13gl_FragCoord.x;
              if ((i32(x_18934) < 180)) {
                let x_18940 : f32 = donor_replacementGLF_dead13A_6[40];
                let x_18942 : f32 = x_728.GLF_dead13resolution.x;
                let x_18945 : f32 = donor_replacementGLF_dead13A_6[44];
                let x_18947 : f32 = x_728.GLF_dead13resolution.y;
                GLF_dead13_GLF_color = vec4<f32>((x_18940 / x_18942), (x_18945 / x_18947), 1.0, 1.0);
              } else {
                let x_18952 : f32 = GLF_dead13gl_FragCoord.x;
                if ((i32(x_18952) < 180)) {
                  let x_18958 : f32 = donor_replacementGLF_dead13A_6[45];
                  let x_18960 : f32 = x_728.GLF_dead13resolution.x;
                  let x_18963 : f32 = donor_replacementGLF_dead13A_6[49];
                  let x_18965 : f32 = x_728.GLF_dead13resolution.y;
                  GLF_dead13_GLF_color = vec4<f32>((x_18958 / x_18960), (x_18963 / x_18965), 1.0, 1.0);
                } else {
                  discard;
                }
              }
            }
          }
        }
      }
    }
  }
  let x_18971 : f32 = gl_FragCoord.y;
  if ((x_18971 < 0.0)) {
    let x_18976 : i32 = v_1;
    donor_replacementGLF_dead7pos = (vec2<i32>(x_18976, x_18976) ^ vec2<i32>(45400, -36839));
    if (false) {
      let x_18985 : vec4<f32> = GLF_dead15gl_FragCoord;
      GLF_dead15icoord_11 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_18985.x, x_18985.y)));
      let x_18991 : i32 = GLF_dead15icoord_11.x;
      GLF_dead15A_11 = select(-1, 0, ((x_18991 & 1) != 0));
      let x_18997 : i32 = GLF_dead15icoord_11.x;
      GLF_dead15B_11 = select(-1, 0, ((x_18997 & 2) != 0));
      let x_19003 : i32 = GLF_dead15icoord_11.x;
      GLF_dead15C_11 = select(-1, 0, ((x_19003 & 4) != 0));
      let x_19009 : i32 = GLF_dead15icoord_11.x;
      GLF_dead15D_11 = select(-1, 0, ((x_19009 & 8) != 0));
      let x_19015 : i32 = GLF_dead15icoord_11.x;
      GLF_dead15E_11 = select(-1, 0, ((x_19015 & 16) != 0));
      let x_19021 : i32 = GLF_dead15icoord_11.y;
      GLF_dead15F_11 = select(-1, 0, ((x_19021 & 1) != 0));
      let x_19027 : i32 = GLF_dead15icoord_11.y;
      GLF_dead15G_11 = select(-1, 0, ((x_19027 & 2) != 0));
      let x_19033 : i32 = GLF_dead15icoord_11.y;
      GLF_dead15H_11 = select(-1, 0, ((x_19033 & 4) != 0));
      let x_19039 : i32 = GLF_dead15icoord_11.y;
      GLF_dead15I_11 = select(-1, 0, ((x_19039 & 8) != 0));
      let x_19045 : i32 = GLF_dead15icoord_11.y;
      GLF_dead15J_11 = select(-1, 0, ((x_19045 & 16) != 0));
      let x_19050 : i32 = GLF_dead15A_11;
      let x_19051 : i32 = GLF_dead15C_11;
      let x_19054 : i32 = GLF_dead15D_11;
      let x_19057 : i32 = GLF_dead15E_11;
      let x_19060 : i32 = GLF_dead15F_11;
      let x_19062 : i32 = GLF_dead15G_11;
      let x_19064 : i32 = GLF_dead15H_11;
      let x_19066 : i32 = GLF_dead15I_11;
      let x_19069 : i32 = GLF_dead15J_11;
      let x_19072 : i32 = GLF_dead15B_11;
      let x_19073 : i32 = GLF_dead15C_11;
      let x_19076 : i32 = GLF_dead15D_11;
      let x_19079 : i32 = GLF_dead15E_11;
      let x_19082 : i32 = GLF_dead15F_11;
      let x_19084 : i32 = GLF_dead15G_11;
      let x_19086 : i32 = GLF_dead15H_11;
      let x_19088 : i32 = GLF_dead15I_11;
      let x_19091 : i32 = GLF_dead15J_11;
      let x_19095 : i32 = GLF_dead15A_11;
      let x_19097 : i32 = GLF_dead15C_11;
      let x_19099 : i32 = GLF_dead15D_11;
      let x_19102 : i32 = GLF_dead15E_11;
      let x_19105 : i32 = GLF_dead15F_11;
      let x_19107 : i32 = GLF_dead15H_11;
      let x_19110 : i32 = GLF_dead15I_11;
      let x_19112 : i32 = GLF_dead15J_11;
      let x_19116 : i32 = GLF_dead15A_11;
      let x_19117 : i32 = GLF_dead15B_11;
      let x_19120 : i32 = GLF_dead15D_11;
      let x_19123 : i32 = GLF_dead15E_11;
      let x_19126 : i32 = GLF_dead15G_11;
      let x_19128 : i32 = GLF_dead15H_11;
      let x_19131 : i32 = GLF_dead15I_11;
      let x_19133 : i32 = GLF_dead15J_11;
      GLF_dead15res_11 = (((((((((((x_19050 | ~(x_19051)) | ~(x_19054)) | ~(x_19057)) | x_19060) | x_19062) | x_19064) | ~(x_19066)) | ~(x_19069)) & ((((((((x_19072 | ~(x_19073)) | ~(x_19076)) | ~(x_19079)) | x_19082) | x_19084) | x_19086) | ~(x_19088)) | ~(x_19091))) & (((((((~(x_19095) | x_19097) | ~(x_19099)) | ~(x_19102)) | x_19105) | ~(x_19107)) | x_19110) | ~(x_19112))) & (((((((x_19116 | ~(x_19117)) | ~(x_19120)) | ~(x_19123)) | x_19126) | ~(x_19128)) | x_19131) | ~(x_19133)));
      let x_19137 : i32 = GLF_dead15A_11;
      let x_19138 : i32 = GLF_dead15B_11;
      let x_19140 : i32 = GLF_dead15C_11;
      let x_19143 : i32 = GLF_dead15D_11;
      let x_19145 : i32 = GLF_dead15E_11;
      let x_19148 : i32 = GLF_dead15F_11;
      let x_19150 : i32 = GLF_dead15G_11;
      let x_19152 : i32 = GLF_dead15H_11;
      let x_19155 : i32 = GLF_dead15I_11;
      let x_19157 : i32 = GLF_dead15J_11;
      let x_19160 : i32 = GLF_dead15B_11;
      let x_19161 : i32 = GLF_dead15C_11;
      let x_19164 : i32 = GLF_dead15D_11;
      let x_19167 : i32 = GLF_dead15E_11;
      let x_19170 : i32 = GLF_dead15F_11;
      let x_19173 : i32 = GLF_dead15G_11;
      let x_19176 : i32 = GLF_dead15H_11;
      let x_19178 : i32 = GLF_dead15I_11;
      let x_19180 : i32 = GLF_dead15J_11;
      let x_19184 : i32 = GLF_dead15A_11;
      let x_19185 : i32 = GLF_dead15C_11;
      let x_19187 : i32 = GLF_dead15D_11;
      let x_19190 : i32 = GLF_dead15E_11;
      let x_19193 : i32 = GLF_dead15G_11;
      let x_19196 : i32 = GLF_dead15H_11;
      let x_19198 : i32 = GLF_dead15I_11;
      let x_19200 : i32 = GLF_dead15J_11;
      let x_19204 : i32 = GLF_dead15A_11;
      let x_19205 : i32 = GLF_dead15C_11;
      let x_19207 : i32 = GLF_dead15D_11;
      let x_19210 : i32 = GLF_dead15E_11;
      let x_19213 : i32 = GLF_dead15F_11;
      let x_19216 : i32 = GLF_dead15H_11;
      let x_19218 : i32 = GLF_dead15I_11;
      let x_19220 : i32 = GLF_dead15J_11;
      let x_19224 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19224 & ((((((((((((x_19137 | x_19138) | ~(x_19140)) | x_19143) | ~(x_19145)) | x_19148) | x_19150) | ~(x_19152)) | x_19155) | ~(x_19157)) & ((((((((x_19160 | ~(x_19161)) | ~(x_19164)) | ~(x_19167)) | ~(x_19170)) | ~(x_19173)) | x_19176) | x_19178) | ~(x_19180))) & (((((((x_19184 | x_19185) | ~(x_19187)) | ~(x_19190)) | ~(x_19193)) | x_19196) | x_19198) | ~(x_19200))) & (((((((x_19204 | x_19205) | ~(x_19207)) | ~(x_19210)) | ~(x_19213)) | x_19216) | x_19218) | ~(x_19220))));
      let x_19226 : i32 = GLF_dead15A_11;
      let x_19227 : i32 = GLF_dead15B_11;
      let x_19229 : i32 = GLF_dead15C_11;
      let x_19232 : i32 = GLF_dead15D_11;
      let x_19234 : i32 = GLF_dead15E_11;
      let x_19237 : i32 = GLF_dead15G_11;
      let x_19240 : i32 = GLF_dead15H_11;
      let x_19242 : i32 = GLF_dead15I_11;
      let x_19244 : i32 = GLF_dead15J_11;
      let x_19247 : i32 = GLF_dead15A_11;
      let x_19249 : i32 = GLF_dead15C_11;
      let x_19251 : i32 = GLF_dead15D_11;
      let x_19253 : i32 = GLF_dead15E_11;
      let x_19256 : i32 = GLF_dead15G_11;
      let x_19259 : i32 = GLF_dead15H_11;
      let x_19261 : i32 = GLF_dead15I_11;
      let x_19263 : i32 = GLF_dead15J_11;
      let x_19267 : i32 = GLF_dead15A_11;
      let x_19269 : i32 = GLF_dead15B_11;
      let x_19272 : i32 = GLF_dead15C_11;
      let x_19275 : i32 = GLF_dead15D_11;
      let x_19278 : i32 = GLF_dead15E_11;
      let x_19280 : i32 = GLF_dead15G_11;
      let x_19283 : i32 = GLF_dead15H_11;
      let x_19285 : i32 = GLF_dead15I_11;
      let x_19287 : i32 = GLF_dead15J_11;
      let x_19291 : i32 = GLF_dead15A_11;
      let x_19292 : i32 = GLF_dead15B_11;
      let x_19295 : i32 = GLF_dead15D_11;
      let x_19297 : i32 = GLF_dead15E_11;
      let x_19300 : i32 = GLF_dead15G_11;
      let x_19302 : i32 = GLF_dead15H_11;
      let x_19304 : i32 = GLF_dead15I_11;
      let x_19306 : i32 = GLF_dead15J_11;
      let x_19310 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19310 & (((((((((((x_19226 | x_19227) | ~(x_19229)) | x_19232) | ~(x_19234)) | ~(x_19237)) | x_19240) | x_19242) | ~(x_19244)) & (((((((~(x_19247) | x_19249) | x_19251) | ~(x_19253)) | ~(x_19256)) | x_19259) | x_19261) | ~(x_19263))) & ((((((((~(x_19267) | ~(x_19269)) | ~(x_19272)) | ~(x_19275)) | x_19278) | ~(x_19280)) | x_19283) | x_19285) | ~(x_19287))) & (((((((x_19291 | ~(x_19292)) | x_19295) | ~(x_19297)) | x_19300) | x_19302) | x_19304) | ~(x_19306))));
      let x_19312 : i32 = GLF_dead15A_11;
      let x_19314 : i32 = GLF_dead15B_11;
      let x_19316 : i32 = GLF_dead15C_11;
      let x_19319 : i32 = GLF_dead15D_11;
      let x_19321 : i32 = GLF_dead15E_11;
      let x_19324 : i32 = GLF_dead15G_11;
      let x_19326 : i32 = GLF_dead15H_11;
      let x_19328 : i32 = GLF_dead15I_11;
      let x_19330 : i32 = GLF_dead15J_11;
      let x_19333 : i32 = GLF_dead15A_11;
      let x_19334 : i32 = GLF_dead15B_11;
      let x_19337 : i32 = GLF_dead15D_11;
      let x_19340 : i32 = GLF_dead15E_11;
      let x_19342 : i32 = GLF_dead15G_11;
      let x_19344 : i32 = GLF_dead15H_11;
      let x_19346 : i32 = GLF_dead15I_11;
      let x_19348 : i32 = GLF_dead15J_11;
      let x_19352 : i32 = GLF_dead15A_11;
      let x_19353 : i32 = GLF_dead15C_11;
      let x_19356 : i32 = GLF_dead15D_11;
      let x_19359 : i32 = GLF_dead15E_11;
      let x_19361 : i32 = GLF_dead15F_11;
      let x_19363 : i32 = GLF_dead15G_11;
      let x_19365 : i32 = GLF_dead15H_11;
      let x_19367 : i32 = GLF_dead15I_11;
      let x_19369 : i32 = GLF_dead15J_11;
      let x_19373 : i32 = GLF_dead15A_11;
      let x_19375 : i32 = GLF_dead15C_11;
      let x_19377 : i32 = GLF_dead15D_11;
      let x_19380 : i32 = GLF_dead15E_11;
      let x_19382 : i32 = GLF_dead15F_11;
      let x_19384 : i32 = GLF_dead15G_11;
      let x_19386 : i32 = GLF_dead15H_11;
      let x_19388 : i32 = GLF_dead15I_11;
      let x_19390 : i32 = GLF_dead15J_11;
      let x_19394 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19394 & (((((((((((~(x_19312) | x_19314) | ~(x_19316)) | x_19319) | ~(x_19321)) | x_19324) | x_19326) | x_19328) | ~(x_19330)) & (((((((x_19333 | ~(x_19334)) | ~(x_19337)) | x_19340) | x_19342) | x_19344) | x_19346) | ~(x_19348))) & ((((((((x_19352 | ~(x_19353)) | ~(x_19356)) | x_19359) | x_19361) | x_19363) | x_19365) | x_19367) | ~(x_19369))) & ((((((((~(x_19373) | x_19375) | ~(x_19377)) | x_19380) | x_19382) | x_19384) | x_19386) | x_19388) | ~(x_19390))));
      let x_19396 : i32 = GLF_dead15A_11;
      let x_19398 : i32 = GLF_dead15B_11;
      let x_19401 : i32 = GLF_dead15C_11;
      let x_19403 : i32 = GLF_dead15D_11;
      let x_19406 : i32 = GLF_dead15E_11;
      let x_19409 : i32 = GLF_dead15F_11;
      let x_19412 : i32 = GLF_dead15G_11;
      let x_19415 : i32 = GLF_dead15H_11;
      let x_19418 : i32 = GLF_dead15I_11;
      let x_19421 : i32 = GLF_dead15J_11;
      let x_19423 : i32 = GLF_dead15A_11;
      let x_19424 : i32 = GLF_dead15B_11;
      let x_19427 : i32 = GLF_dead15C_11;
      let x_19429 : i32 = GLF_dead15D_11;
      let x_19431 : i32 = GLF_dead15E_11;
      let x_19434 : i32 = GLF_dead15F_11;
      let x_19437 : i32 = GLF_dead15G_11;
      let x_19440 : i32 = GLF_dead15H_11;
      let x_19443 : i32 = GLF_dead15I_11;
      let x_19446 : i32 = GLF_dead15J_11;
      let x_19449 : i32 = GLF_dead15A_11;
      let x_19451 : i32 = GLF_dead15B_11;
      let x_19453 : i32 = GLF_dead15C_11;
      let x_19455 : i32 = GLF_dead15D_11;
      let x_19457 : i32 = GLF_dead15E_11;
      let x_19460 : i32 = GLF_dead15G_11;
      let x_19463 : i32 = GLF_dead15H_11;
      let x_19466 : i32 = GLF_dead15I_11;
      let x_19469 : i32 = GLF_dead15J_11;
      let x_19472 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19472 & (((((((((((~(x_19396) | ~(x_19398)) | x_19401) | ~(x_19403)) | ~(x_19406)) | ~(x_19409)) | ~(x_19412)) | ~(x_19415)) | ~(x_19418)) | x_19421) & (((((((((x_19423 | ~(x_19424)) | x_19427) | x_19429) | ~(x_19431)) | ~(x_19434)) | ~(x_19437)) | ~(x_19440)) | ~(x_19443)) | x_19446)) & ((((((((~(x_19449) | x_19451) | x_19453) | x_19455) | ~(x_19457)) | ~(x_19460)) | ~(x_19463)) | ~(x_19466)) | x_19469)));
      let x_19474 : i32 = GLF_dead15C_11;
      let x_19476 : i32 = GLF_dead15D_11;
      let x_19479 : i32 = GLF_dead15E_11;
      let x_19481 : i32 = GLF_dead15F_11;
      let x_19484 : i32 = GLF_dead15G_11;
      let x_19487 : i32 = GLF_dead15H_11;
      let x_19490 : i32 = GLF_dead15I_11;
      let x_19493 : i32 = GLF_dead15J_11;
      let x_19495 : i32 = GLF_dead15A_11;
      let x_19497 : i32 = GLF_dead15C_11;
      let x_19500 : i32 = GLF_dead15D_11;
      let x_19503 : i32 = GLF_dead15E_11;
      let x_19505 : i32 = GLF_dead15G_11;
      let x_19508 : i32 = GLF_dead15H_11;
      let x_19511 : i32 = GLF_dead15I_11;
      let x_19514 : i32 = GLF_dead15J_11;
      let x_19517 : i32 = GLF_dead15B_11;
      let x_19518 : i32 = GLF_dead15D_11;
      let x_19521 : i32 = GLF_dead15E_11;
      let x_19523 : i32 = GLF_dead15F_11;
      let x_19526 : i32 = GLF_dead15H_11;
      let x_19529 : i32 = GLF_dead15I_11;
      let x_19532 : i32 = GLF_dead15J_11;
      let x_19535 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19535 & (((((((((~(x_19474) | ~(x_19476)) | x_19479) | ~(x_19481)) | ~(x_19484)) | ~(x_19487)) | ~(x_19490)) | x_19493) & (((((((~(x_19495) | ~(x_19497)) | ~(x_19500)) | x_19503) | ~(x_19505)) | ~(x_19508)) | ~(x_19511)) | x_19514)) & ((((((x_19517 | ~(x_19518)) | x_19521) | ~(x_19523)) | ~(x_19526)) | ~(x_19529)) | x_19532)));
      let x_19537 : i32 = GLF_dead15A_11;
      let x_19538 : i32 = GLF_dead15B_11;
      let x_19540 : i32 = GLF_dead15C_11;
      let x_19542 : i32 = GLF_dead15D_11;
      let x_19545 : i32 = GLF_dead15E_11;
      let x_19547 : i32 = GLF_dead15G_11;
      let x_19550 : i32 = GLF_dead15H_11;
      let x_19553 : i32 = GLF_dead15I_11;
      let x_19556 : i32 = GLF_dead15J_11;
      let x_19558 : i32 = GLF_dead15B_11;
      let x_19559 : i32 = GLF_dead15C_11;
      let x_19561 : i32 = GLF_dead15D_11;
      let x_19563 : i32 = GLF_dead15E_11;
      let x_19566 : i32 = GLF_dead15F_11;
      let x_19568 : i32 = GLF_dead15G_11;
      let x_19571 : i32 = GLF_dead15H_11;
      let x_19574 : i32 = GLF_dead15I_11;
      let x_19577 : i32 = GLF_dead15J_11;
      let x_19580 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19580 & (((((((((x_19537 | x_19538) | x_19540) | ~(x_19542)) | x_19545) | ~(x_19547)) | ~(x_19550)) | ~(x_19553)) | x_19556) & ((((((((x_19558 | x_19559) | x_19561) | ~(x_19563)) | x_19566) | ~(x_19568)) | ~(x_19571)) | ~(x_19574)) | x_19577)));
      let x_19582 : i32 = GLF_dead15A_11;
      let x_19583 : i32 = GLF_dead15C_11;
      let x_19586 : i32 = GLF_dead15D_11;
      let x_19588 : i32 = GLF_dead15E_11;
      let x_19590 : i32 = GLF_dead15F_11;
      let x_19592 : i32 = GLF_dead15G_11;
      let x_19595 : i32 = GLF_dead15H_11;
      let x_19598 : i32 = GLF_dead15I_11;
      let x_19601 : i32 = GLF_dead15J_11;
      let x_19603 : i32 = GLF_dead15B_11;
      let x_19604 : i32 = GLF_dead15C_11;
      let x_19607 : i32 = GLF_dead15D_11;
      let x_19609 : i32 = GLF_dead15E_11;
      let x_19611 : i32 = GLF_dead15F_11;
      let x_19613 : i32 = GLF_dead15G_11;
      let x_19616 : i32 = GLF_dead15H_11;
      let x_19619 : i32 = GLF_dead15J_11;
      let x_19622 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19622 & (((((((((x_19582 | ~(x_19583)) | x_19586) | x_19588) | x_19590) | ~(x_19592)) | ~(x_19595)) | ~(x_19598)) | x_19601) & (((((((x_19603 | ~(x_19604)) | x_19607) | x_19609) | x_19611) | ~(x_19613)) | ~(x_19616)) | x_19619)));
      let x_19624 : i32 = GLF_dead15A_11;
      let x_19626 : i32 = GLF_dead15B_11;
      let x_19629 : i32 = GLF_dead15C_11;
      let x_19631 : i32 = GLF_dead15D_11;
      let x_19633 : i32 = GLF_dead15E_11;
      let x_19635 : i32 = GLF_dead15F_11;
      let x_19637 : i32 = GLF_dead15G_11;
      let x_19640 : i32 = GLF_dead15H_11;
      let x_19643 : i32 = GLF_dead15I_11;
      let x_19646 : i32 = GLF_dead15J_11;
      let x_19648 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19648 & (((((((((~(x_19624) | ~(x_19626)) | x_19629) | x_19631) | x_19633) | x_19635) | ~(x_19637)) | ~(x_19640)) | ~(x_19643)) | x_19646));
      let x_19650 : i32 = GLF_dead15A_11;
      let x_19651 : i32 = GLF_dead15B_11;
      let x_19653 : i32 = GLF_dead15C_11;
      let x_19656 : i32 = GLF_dead15D_11;
      let x_19659 : i32 = GLF_dead15E_11;
      let x_19661 : i32 = GLF_dead15G_11;
      let x_19663 : i32 = GLF_dead15H_11;
      let x_19666 : i32 = GLF_dead15I_11;
      let x_19669 : i32 = GLF_dead15J_11;
      let x_19671 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19671 & ((((((((x_19650 | x_19651) | ~(x_19653)) | ~(x_19656)) | x_19659) | x_19661) | ~(x_19663)) | ~(x_19666)) | x_19669));
      let x_19673 : i32 = GLF_dead15B_11;
      let x_19675 : i32 = GLF_dead15D_11;
      let x_19677 : i32 = GLF_dead15E_11;
      let x_19679 : i32 = GLF_dead15F_11;
      let x_19682 : i32 = GLF_dead15G_11;
      let x_19684 : i32 = GLF_dead15H_11;
      let x_19687 : i32 = GLF_dead15I_11;
      let x_19690 : i32 = GLF_dead15J_11;
      let x_19692 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19692 & (((((((~(x_19673) | x_19675) | x_19677) | ~(x_19679)) | x_19682) | ~(x_19684)) | ~(x_19687)) | x_19690));
      let x_19694 : i32 = GLF_dead15B_11;
      let x_19696 : i32 = GLF_dead15C_11;
      let x_19698 : i32 = GLF_dead15D_11;
      let x_19701 : i32 = GLF_dead15E_11;
      let x_19703 : i32 = GLF_dead15F_11;
      let x_19705 : i32 = GLF_dead15G_11;
      let x_19707 : i32 = GLF_dead15H_11;
      let x_19710 : i32 = GLF_dead15I_11;
      let x_19713 : i32 = GLF_dead15J_11;
      let x_19715 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19715 & ((((((((~(x_19694) | x_19696) | ~(x_19698)) | x_19701) | x_19703) | x_19705) | ~(x_19707)) | ~(x_19710)) | x_19713));
      let x_19717 : i32 = GLF_dead15A_11;
      let x_19719 : i32 = GLF_dead15B_11;
      let x_19722 : i32 = GLF_dead15C_11;
      let x_19725 : i32 = GLF_dead15D_11;
      let x_19727 : i32 = GLF_dead15E_11;
      let x_19729 : i32 = GLF_dead15F_11;
      let x_19731 : i32 = GLF_dead15G_11;
      let x_19733 : i32 = GLF_dead15I_11;
      let x_19736 : i32 = GLF_dead15J_11;
      let x_19738 : i32 = GLF_dead15B_11;
      let x_19740 : i32 = GLF_dead15C_11;
      let x_19743 : i32 = GLF_dead15D_11;
      let x_19745 : i32 = GLF_dead15E_11;
      let x_19747 : i32 = GLF_dead15F_11;
      let x_19750 : i32 = GLF_dead15G_11;
      let x_19753 : i32 = GLF_dead15H_11;
      let x_19755 : i32 = GLF_dead15I_11;
      let x_19758 : i32 = GLF_dead15J_11;
      let x_19761 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19761 & (((((((((~(x_19717) | ~(x_19719)) | ~(x_19722)) | x_19725) | x_19727) | x_19729) | x_19731) | ~(x_19733)) | x_19736) & ((((((((~(x_19738) | ~(x_19740)) | x_19743) | x_19745) | ~(x_19747)) | ~(x_19750)) | x_19753) | ~(x_19755)) | x_19758)));
      let x_19763 : i32 = GLF_dead15A_11;
      let x_19765 : i32 = GLF_dead15B_11;
      let x_19767 : i32 = GLF_dead15C_11;
      let x_19769 : i32 = GLF_dead15D_11;
      let x_19771 : i32 = GLF_dead15E_11;
      let x_19773 : i32 = GLF_dead15H_11;
      let x_19775 : i32 = GLF_dead15I_11;
      let x_19778 : i32 = GLF_dead15J_11;
      let x_19780 : i32 = GLF_dead15B_11;
      let x_19781 : i32 = GLF_dead15C_11;
      let x_19783 : i32 = GLF_dead15D_11;
      let x_19785 : i32 = GLF_dead15E_11;
      let x_19787 : i32 = GLF_dead15F_11;
      let x_19789 : i32 = GLF_dead15G_11;
      let x_19792 : i32 = GLF_dead15H_11;
      let x_19794 : i32 = GLF_dead15I_11;
      let x_19797 : i32 = GLF_dead15J_11;
      let x_19800 : i32 = GLF_dead15A_11;
      let x_19801 : i32 = GLF_dead15B_11;
      let x_19803 : i32 = GLF_dead15C_11;
      let x_19805 : i32 = GLF_dead15D_11;
      let x_19808 : i32 = GLF_dead15E_11;
      let x_19810 : i32 = GLF_dead15F_11;
      let x_19812 : i32 = GLF_dead15G_11;
      let x_19814 : i32 = GLF_dead15H_11;
      let x_19816 : i32 = GLF_dead15I_11;
      let x_19819 : i32 = GLF_dead15J_11;
      let x_19822 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19822 & (((((((((~(x_19763) | x_19765) | x_19767) | x_19769) | x_19771) | x_19773) | ~(x_19775)) | x_19778) & ((((((((x_19780 | x_19781) | x_19783) | x_19785) | x_19787) | ~(x_19789)) | x_19792) | ~(x_19794)) | x_19797)) & (((((((((x_19800 | x_19801) | x_19803) | ~(x_19805)) | x_19808) | x_19810) | x_19812) | x_19814) | ~(x_19816)) | x_19819)));
      let x_19824 : i32 = GLF_dead15A_11;
      let x_19825 : i32 = GLF_dead15B_11;
      let x_19828 : i32 = GLF_dead15C_11;
      let x_19830 : i32 = GLF_dead15D_11;
      let x_19832 : i32 = GLF_dead15E_11;
      let x_19834 : i32 = GLF_dead15F_11;
      let x_19836 : i32 = GLF_dead15G_11;
      let x_19838 : i32 = GLF_dead15H_11;
      let x_19840 : i32 = GLF_dead15I_11;
      let x_19843 : i32 = GLF_dead15J_11;
      let x_19845 : i32 = GLF_dead15B_11;
      let x_19847 : i32 = GLF_dead15D_11;
      let x_19849 : i32 = GLF_dead15E_11;
      let x_19851 : i32 = GLF_dead15F_11;
      let x_19854 : i32 = GLF_dead15G_11;
      let x_19857 : i32 = GLF_dead15H_11;
      let x_19860 : i32 = GLF_dead15I_11;
      let x_19862 : i32 = GLF_dead15J_11;
      let x_19865 : i32 = GLF_dead15A_11;
      let x_19867 : i32 = GLF_dead15B_11;
      let x_19870 : i32 = GLF_dead15C_11;
      let x_19872 : i32 = GLF_dead15E_11;
      let x_19875 : i32 = GLF_dead15G_11;
      let x_19878 : i32 = GLF_dead15H_11;
      let x_19881 : i32 = GLF_dead15I_11;
      let x_19883 : i32 = GLF_dead15J_11;
      let x_19887 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19887 & (((((((((((x_19824 | ~(x_19825)) | x_19828) | x_19830) | x_19832) | x_19834) | x_19836) | x_19838) | ~(x_19840)) | x_19843) & (((((((~(x_19845) | x_19847) | x_19849) | ~(x_19851)) | ~(x_19854)) | ~(x_19857)) | x_19860) | x_19862)) & (((((((~(x_19865) | ~(x_19867)) | x_19870) | ~(x_19872)) | ~(x_19875)) | ~(x_19878)) | x_19881) | ~(x_19883))));
      let x_19889 : i32 = GLF_dead15A_11;
      let x_19891 : i32 = GLF_dead15D_11;
      let x_19894 : i32 = GLF_dead15E_11;
      let x_19897 : i32 = GLF_dead15F_11;
      let x_19900 : i32 = GLF_dead15G_11;
      let x_19902 : i32 = GLF_dead15H_11;
      let x_19905 : i32 = GLF_dead15I_11;
      let x_19907 : i32 = GLF_dead15J_11;
      let x_19910 : i32 = GLF_dead15A_11;
      let x_19911 : i32 = GLF_dead15B_11;
      let x_19913 : i32 = GLF_dead15E_11;
      let x_19916 : i32 = GLF_dead15F_11;
      let x_19919 : i32 = GLF_dead15G_11;
      let x_19922 : i32 = GLF_dead15H_11;
      let x_19924 : i32 = GLF_dead15I_11;
      let x_19926 : i32 = GLF_dead15J_11;
      let x_19930 : i32 = GLF_dead15B_11;
      let x_19932 : i32 = GLF_dead15C_11;
      let x_19934 : i32 = GLF_dead15D_11;
      let x_19936 : i32 = GLF_dead15E_11;
      let x_19939 : i32 = GLF_dead15F_11;
      let x_19941 : i32 = GLF_dead15G_11;
      let x_19944 : i32 = GLF_dead15H_11;
      let x_19946 : i32 = GLF_dead15I_11;
      let x_19948 : i32 = GLF_dead15J_11;
      let x_19952 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_19952 & (((((((((~(x_19889) | ~(x_19891)) | ~(x_19894)) | ~(x_19897)) | x_19900) | ~(x_19902)) | x_19905) | ~(x_19907)) & (((((((x_19910 | x_19911) | ~(x_19913)) | ~(x_19916)) | ~(x_19919)) | x_19922) | x_19924) | ~(x_19926))) & ((((((((~(x_19930) | x_19932) | x_19934) | ~(x_19936)) | x_19939) | ~(x_19941)) | x_19944) | x_19946) | ~(x_19948))));
      let x_19954 : i32 = GLF_dead15B_11;
      let x_19956 : i32 = GLF_dead15C_11;
      let x_19959 : i32 = GLF_dead15D_11;
      let x_19962 : i32 = GLF_dead15E_11;
      let x_19964 : i32 = GLF_dead15F_11;
      let x_19966 : i32 = GLF_dead15G_11;
      let x_19969 : i32 = GLF_dead15H_11;
      let x_19971 : i32 = GLF_dead15I_11;
      let x_19973 : i32 = GLF_dead15J_11;
      let x_19976 : i32 = GLF_dead15A_11;
      let x_19978 : i32 = GLF_dead15B_11;
      let x_19981 : i32 = GLF_dead15C_11;
      let x_19983 : i32 = GLF_dead15D_11;
      let x_19986 : i32 = GLF_dead15G_11;
      let x_19988 : i32 = GLF_dead15H_11;
      let x_19990 : i32 = GLF_dead15I_11;
      let x_19992 : i32 = GLF_dead15J_11;
      let x_19996 : i32 = GLF_dead15C_11;
      let x_19998 : i32 = GLF_dead15D_11;
      let x_20000 : i32 = GLF_dead15E_11;
      let x_20003 : i32 = GLF_dead15F_11;
      let x_20006 : i32 = GLF_dead15G_11;
      let x_20008 : i32 = GLF_dead15H_11;
      let x_20010 : i32 = GLF_dead15I_11;
      let x_20012 : i32 = GLF_dead15J_11;
      let x_20016 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_20016 & ((((((((((~(x_19954) | ~(x_19956)) | ~(x_19959)) | x_19962) | x_19964) | ~(x_19966)) | x_19969) | x_19971) | ~(x_19973)) & (((((((~(x_19976) | ~(x_19978)) | x_19981) | ~(x_19983)) | x_19986) | x_19988) | x_19990) | ~(x_19992))) & (((((((~(x_19996) | x_19998) | ~(x_20000)) | ~(x_20003)) | x_20006) | x_20008) | x_20010) | ~(x_20012))));
      let x_20018 : i32 = GLF_dead15A_11;
      let x_20020 : i32 = GLF_dead15B_11;
      let x_20022 : i32 = GLF_dead15C_11;
      let x_20024 : i32 = GLF_dead15E_11;
      let x_20026 : i32 = GLF_dead15F_11;
      let x_20028 : i32 = GLF_dead15G_11;
      let x_20030 : i32 = GLF_dead15H_11;
      let x_20033 : i32 = GLF_dead15I_11;
      let x_20036 : i32 = GLF_dead15J_11;
      let x_20038 : i32 = GLF_dead15A_11;
      let x_20040 : i32 = GLF_dead15B_11;
      let x_20042 : i32 = GLF_dead15D_11;
      let x_20044 : i32 = GLF_dead15E_11;
      let x_20046 : i32 = GLF_dead15G_11;
      let x_20049 : i32 = GLF_dead15H_11;
      let x_20051 : i32 = GLF_dead15I_11;
      let x_20054 : i32 = GLF_dead15J_11;
      let x_20057 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_20057 & (((((((((~(x_20018) | x_20020) | x_20022) | x_20024) | x_20026) | x_20028) | ~(x_20030)) | ~(x_20033)) | x_20036) & (((((((~(x_20038) | x_20040) | x_20042) | x_20044) | ~(x_20046)) | x_20049) | ~(x_20051)) | x_20054)));
      let x_20059 : i32 = GLF_dead15A_11;
      let x_20060 : i32 = GLF_dead15B_11;
      let x_20062 : i32 = GLF_dead15C_11;
      let x_20065 : i32 = GLF_dead15D_11;
      let x_20068 : i32 = GLF_dead15E_11;
      let x_20071 : i32 = GLF_dead15F_11;
      let x_20074 : i32 = GLF_dead15H_11;
      let x_20077 : i32 = GLF_dead15I_11;
      let x_20079 : i32 = GLF_dead15J_11;
      let x_20082 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_20082 & ((((((((x_20059 | x_20060) | ~(x_20062)) | ~(x_20065)) | ~(x_20068)) | ~(x_20071)) | ~(x_20074)) | x_20077) | ~(x_20079)));
      let x_20084 : i32 = GLF_dead15A_11;
      let x_20086 : i32 = GLF_dead15C_11;
      let x_20089 : i32 = GLF_dead15E_11;
      let x_20092 : i32 = GLF_dead15F_11;
      let x_20095 : i32 = GLF_dead15G_11;
      let x_20097 : i32 = GLF_dead15H_11;
      let x_20100 : i32 = GLF_dead15I_11;
      let x_20102 : i32 = GLF_dead15J_11;
      let x_20105 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_20105 & (((((((~(x_20084) | ~(x_20086)) | ~(x_20089)) | ~(x_20092)) | x_20095) | ~(x_20097)) | x_20100) | ~(x_20102)));
      let x_20107 : i32 = GLF_dead15A_11;
      let x_20108 : i32 = GLF_dead15B_11;
      let x_20111 : i32 = GLF_dead15C_11;
      let x_20114 : i32 = GLF_dead15D_11;
      let x_20116 : i32 = GLF_dead15E_11;
      let x_20119 : i32 = GLF_dead15F_11;
      let x_20122 : i32 = GLF_dead15H_11;
      let x_20125 : i32 = GLF_dead15I_11;
      let x_20127 : i32 = GLF_dead15J_11;
      let x_20130 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_20130 & ((((((((x_20107 | ~(x_20108)) | ~(x_20111)) | x_20114) | ~(x_20116)) | ~(x_20119)) | ~(x_20122)) | x_20125) | ~(x_20127)));
      let x_20132 : i32 = GLF_dead15B_11;
      let x_20133 : i32 = GLF_dead15C_11;
      let x_20136 : i32 = GLF_dead15D_11;
      let x_20138 : i32 = GLF_dead15E_11;
      let x_20141 : i32 = GLF_dead15F_11;
      let x_20144 : i32 = GLF_dead15G_11;
      let x_20147 : i32 = GLF_dead15H_11;
      let x_20150 : i32 = GLF_dead15I_11;
      let x_20152 : i32 = GLF_dead15J_11;
      let x_20155 : i32 = GLF_dead15A_11;
      let x_20157 : i32 = GLF_dead15B_11;
      let x_20160 : i32 = GLF_dead15C_11;
      let x_20163 : i32 = GLF_dead15D_11;
      let x_20165 : i32 = GLF_dead15E_11;
      let x_20168 : i32 = GLF_dead15F_11;
      let x_20170 : i32 = GLF_dead15H_11;
      let x_20173 : i32 = GLF_dead15I_11;
      let x_20175 : i32 = GLF_dead15J_11;
      let x_20179 : i32 = GLF_dead15B_11;
      let x_20181 : i32 = GLF_dead15C_11;
      let x_20184 : i32 = GLF_dead15D_11;
      let x_20186 : i32 = GLF_dead15E_11;
      let x_20189 : i32 = GLF_dead15F_11;
      let x_20191 : i32 = GLF_dead15G_11;
      let x_20194 : i32 = GLF_dead15H_11;
      let x_20197 : i32 = GLF_dead15I_11;
      let x_20199 : i32 = GLF_dead15J_11;
      let x_20203 : i32 = GLF_dead15res_11;
      GLF_dead15res_11 = (x_20203 & ((((((((((x_20132 | ~(x_20133)) | x_20136) | ~(x_20138)) | ~(x_20141)) | ~(x_20144)) | ~(x_20147)) | x_20150) | ~(x_20152)) & ((((((((~(x_20155) | ~(x_20157)) | ~(x_20160)) | x_20163) | ~(x_20165)) | x_20168) | ~(x_20170)) | x_20173) | ~(x_20175))) & ((((((((~(x_20179) | ~(x_20181)) | x_20184) | ~(x_20186)) | x_20189) | ~(x_20191)) | ~(x_20194)) | x_20197) | ~(x_20199))));
      let x_20205 : i32 = GLF_dead15res_11;
      let x_20207 : f32 = select(1.0, 0.0, (x_20205 == 0));
      let x_20208 : vec3<f32> = vec3<f32>(x_20207, x_20207, x_20207);
      GLF_dead15_GLF_color = vec4<f32>(x_20208.x, x_20208.y, x_20208.z, 1.0);
    }
    let x_20216 : i32 = donor_replacementGLF_dead7pos.x;
    let x_20359 : i32 = donor_replacementGLF_dead7pos.y;
    indexable_4 = array<i32, 256u>(115, 133, 150, 164, 176, 184, 190, 192, 191, 187, 181, 172, 163, 153, 143, 134, 126, 120, 116, 114, 114, 117, 121, 127, 134, 141, 148, 154, 159, 162, 163, 161, 157, 151, 143, 134, 124, 113, 103, 94, 87, 82, 79, 80, 84, 91, 101, 114, 130, 146, 164, 182, 199, 215, 229, 240, 249, 254, 256, 254, 250, 243, 233, 223, 212, 200, 190, 180, 172, 166, 163, 161, 162, 164, 169, 174, 179, 185, 190, 193, 195, 195, 192, 188, 180, 171, 161, 149, 137, 125, 114, 105, 97, 93, 91, 93, 98, 106, 117, 130, 145, 161, 177, 193, 208, 221, 231, 239, 243, 244, 242, 236, 228, 218, 207, 194, 181, 169, 158, 148, 141, 135, 132, 131, 132, 135, 138, 143, 147, 151, 154, 155, 155, 152, 146, 139, 129, 118, 106, 93, 80, 68, 58, 49, 43, 40, 41, 44, 51, 61, 73, 87, 103, 119, 134, 149, 162, 173, 181, 186, 188, 186, 181, 174, 164, 153, 141, 128, 116, 104, 94, 86, 81, 77, 76, 77, 80, 84, 89, 94, 98, 102, 104, 104, 102, 98, 92, 83, 73, 62, 50, 38, 26, 16, 8, 2, 0, 0, 4, 11, 21, 33, 48, 64, 81, 98, 114, 129, 141, 151, 158, 161, 161, 158, 152, 144, 134, 123, 112, 100, 90, 81, 73, 68, 65, 65, 67, 70, 75, 81, 87, 92, 97, 101, 103, 102, 100, 95, 88, 79, 69, 58, 47, 36, 26, 18, 13, 11, 11, 15, 22, 32, 45, 60, 77, 94);
    let x_20364 : i32 = indexable_4[clamp(x_20359, 0, 255)];
    GLF_dead7p = ((15.0 - abs(f32((x_20216 - x_20364)))) / 15.0);
    let x_20370 : f32 = GLF_dead7p;
    let x_20371 : f32 = GLF_dead7p;
    let x_20372 : f32 = GLF_dead7p;
    let x_20373 : vec4<f32> = vec4<f32>(x_20370, x_20371, x_20372, 1.0);
  }
  let x_20375 : vec4<f32> = x_GLF_color;
  x_GLF_outVarBackup_GLF_color_34 = x_20375;
  x_GLF_color = vec4<f32>(-164.772003174, -20.5, -922.87097168, -39.380001068);
  let x_20382 : f32 = gl_FragCoord.x;
  if ((x_20382 >= 0.0)) {
    let x_20386 : vec4<f32> = x_GLF_outVarBackup_GLF_color_34;
    x_GLF_color = x_20386;
    if (false) {
      donor_replacementGLF_dead14result_5 = 1.100000024;
      donor_replacementGLF_dead14thirty_two_4 = -22.680000305;
      let x_20392 : i32 = v_1;
      let x_20394 : f32 = donor_replacementGLF_dead14thirty_two_4;
      if (((f32(x_20392) - (round(x_20394) * floor((f32(x_20392) / round(x_20394))))) <= 0.01)) {
        let x_20400 : f32 = donor_replacementGLF_dead14result_5;
        donor_replacementGLF_dead14result_5 = (x_20400 + 100.0);
      }
    }
  }
  if (true) {
    if (false) {
      donor_replacementGLF_dead9alpha3_1 = -0.200000003;
      let x_20409 : i32 = GLF_dead9MATRIX_N;
      GLF_dead9b = (x_20409 - 1);
      loop {
        let x_20416 : i32 = GLF_dead9b;
        let x_20417 : i32 = v_1;
        if ((x_20416 >= x_20417)) {
        } else {
          break;
        }
        let x_20419 : i32 = GLF_dead9b;
        let x_20422 : f32 = GLF_dead3_GLF_color[clamp(x_20419, 0, 3)];
        let x_20423 : i32 = GLF_dead9b;
        let x_20426 : f32 = GLF_dead3_GLF_color[clamp(x_20423, 0, 3)];
        let x_20428 : f32 = donor_replacementGLF_dead9alpha3_1;
        donor_replacementGLF_dead9alpha3_1 = (x_20428 + (x_20422 * x_20426));

        continuing {
          let x_20430 : i32 = GLF_dead9b;
          GLF_dead9b = (x_20430 - 1);
        }
      }
    }
    let x_20433 : f32 = x_525.injectionSwitch.x;
    let x_20435 : f32 = x_525.injectionSwitch.y;
    if ((x_20433 > x_20435)) {
      let x_20440 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_35 = x_20440;
      let x_20442 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_36 = x_20442;
      x_GLF_color = bitcast<vec4<f32>>(vec4<i32>(81440, -56831, 57496, 8352));
      let x_20451 : f32 = gl_FragCoord.x;
      if ((x_20451 >= 0.0)) {
        let x_20455 : vec4<f32> = x_GLF_outVarBackup_GLF_color_36;
        x_GLF_color = x_20455;
      }
      x_GLF_color = vec4<f32>(0.800000012, -68.029998779, 450.850006104, -25.829999924);
      if (true) {
        let x_20463 : f32 = gl_FragCoord.y;
        if ((x_20463 < 0.0)) {
          donor_replacementGLF_dead12m_2 = vec3<f32>(-6.699999809, 2.200000048, -578.952026367);
          GLF_dead12k_2 = 1;
          loop {
            let x_20477 : i32 = GLF_dead12k_2;
            if ((x_20477 >= 0)) {
            } else {
              break;
            }
            let x_20479 : vec2<f32> = lin;
            let x_20480 : vec2<f32> = lin;
            lin = (x_20479 + x_20480);
            let x_20482 : i32 = GLF_dead12k_2;
            GLF_dead12k_2 = (x_20482 - 1);
          }
          let x_20485 : f32 = x_326.GLF_dead12injectionSwitch.x;
          let x_20486 : vec2<f32> = lin;
          let x_20487 : vec2<f32> = cos(x_20486);
          donor_replacementGLF_dead12m_2 = vec3<f32>(x_20485, x_20487.x, x_20487.y);
        }
        let x_20491 : vec4<f32> = x_GLF_outVarBackup_GLF_color_35;
        x_GLF_color = x_20491;
      }
      donor_replacementGLF_dead4c_im = -77726;
      let x_20494 : i32 = v_1;
      let x_20495 : i32 = v_1;
      let x_20497 : i32 = v_1;
      let x_20498 : i32 = v_1;
      if ((((x_20494 * x_20495) + (x_20497 * x_20498)) > 262144)) {
      }
      let x_20506 : i32 = v_1;
      let x_20507 : i32 = v_1;
      let x_20509 : i32 = v_1;
      let x_20510 : i32 = v_1;
      let x_20514 : i32 = v_1;
      GLF_dead4x_new = ((((x_20506 * x_20507) - (x_20509 * x_20510)) / 256) + x_20514);
      let x_20517 : f32 = gl_FragCoord.y;
      if ((x_20517 < 0.0)) {
        donor_replacementGLF_dead11grey = -6.099999905;
        let x_20523 : f32 = GLF_dead11gl_FragCoord.y;
        if ((i32(x_20523) < 240)) {
          let x_20529 : i32 = GLF_dead11data[7];
          donor_replacementGLF_dead11grey = (0.5 + (f32(x_20529) / 10.0));
        } else {
          let x_20535 : f32 = GLF_dead11gl_FragCoord.y;
          if ((i32(x_20535) < 270)) {
            let x_20541 : i32 = GLF_dead11data[8];
            donor_replacementGLF_dead11grey = (0.5 + (f32(x_20541) / 10.0));
          } else {
            discard;
          }
        }
      }
      let x_20547 : i32 = v_1;
      let x_20549 : i32 = v_1;
      let x_20552 : i32 = donor_replacementGLF_dead4c_im;
      v_1 = ((((2 * x_20547) * x_20549) / 256) + x_20552);
      let x_20554 : i32 = GLF_dead4x_new;
      v_1 = x_20554;
      let x_20555 : i32 = v_1;
      v_1 = (x_20555 + 1);
      let x_20558 : vec4<f32> = x_GLF_color;
      x_GLF_outVarBackup_GLF_color_37 = x_20558;
      x_GLF_color = vec4<f32>(-349.696990967, -4621.708984375, 73.680000305, 6.599999905);
      let x_20564 : f32 = gl_FragCoord.x;
      if ((x_20564 >= 0.0)) {
        let x_20568 : vec4<f32> = x_GLF_outVarBackup_GLF_color_37;
        x_GLF_color = x_20568;
      }
    }
    let x_20569 : vec4<f32> = x_GLF_outVarBackup_GLF_color_26;
    x_GLF_color = x_20569;
    let x_20571 : f32 = gl_FragCoord.y;
    if ((x_20571 < 0.0)) {
      let x_20577 : f32 = x_655.GLF_dead8one;
      let x_20581 : f32 = x_655.GLF_dead8one;
      let x_20583 : bool = GLF_dead8gl_FrontFacing;
      let x_20586 : f32 = x_655.GLF_dead8one;
      let x_20588 : f32 = x_655.GLF_dead8one;
      let x_20589 : vec2<f32> = GLF_dead8gl_PointCoord;
      let x_20591 : vec2<f32> = x_13226.resolution;
      let x_20594 : f32 = x_655.GLF_dead8one;
      let x_20598 : f32 = x_655.GLF_dead8one;
      let x_20600 : f32 = x_655.GLF_dead8one;
      let x_20602 : f32 = x_655.GLF_dead8one;
      let x_20604 : f32 = x_655.GLF_dead8one;
      let x_20606 : f32 = x_655.GLF_dead8one;
      let x_20614 : f32 = x_655.GLF_dead8one;
      let x_20616 : f32 = x_655.GLF_dead8one;
      let x_20618 : f32 = x_655.GLF_dead8one;
      let x_20620 : f32 = x_655.GLF_dead8one;
      let x_20622 : f32 = x_655.GLF_dead8one;
      let x_20624 : f32 = x_655.GLF_dead8one;
      let x_20627 : f32 = x_655.GLF_dead8one;
      let x_20629 : f32 = x_655.GLF_dead8one;
      let x_20631 : f32 = x_655.GLF_dead8one;
      let x_20634 : f32 = x_655.GLF_dead8one;
      let x_20636 : f32 = x_655.GLF_dead8one;
      let x_20639 : f32 = x_655.GLF_dead8one;
      let x_20640 : bool = GLF_dead8gl_FrontFacing;
      let x_20642 : vec2<f32> = GLF_dead8gl_PointCoord;
      let x_20644 : vec2<f32> = x_13226.resolution;
      let x_20646 : vec2<f32> = GLF_dead8gl_PointCoord;
      let x_20648 : vec2<f32> = x_13226.resolution;
      let x_20651 : f32 = x_655.GLF_dead8one;
      let x_20653 : f32 = x_655.GLF_dead8one;
      let x_20656 : f32 = x_655.GLF_dead8one;
      let x_20658 : f32 = x_655.GLF_dead8one;
      let x_20659 : bool = GLF_dead8gl_FrontFacing;
      donor_replacementGLF_dead12A_10 = array<f32, 50u>(asin(x_20577), 185.195007324, select(x_20581, 0.494113356, x_20583), -9.899999619, x_20586, x_20588, dot(x_20589, x_20591), x_20594, 70.61000061, 15.890000343, x_20598, x_20600, x_20602, (x_20604 / x_20606), -7.900000095, -4393.283203125, bitcast<f32>(68890u), -3415.038574219, x_20614, 0x1.8p+128, x_20616, x_20618, 70.61000061, 185.195007324, -3415.038574219, -4393.283203125, x_20620, (x_20622 / x_20624), x_20627, 15.890000343, x_20629, asin(x_20631), 0x1.8p+128, x_20634, x_20636, bitcast<f32>(68890u), select(x_20639, 0.494113356, x_20640), dot(x_20642, x_20644), -9.899999619, -7.900000095, -9.899999619, 70.61000061, dot(x_20646, x_20648), x_20651, 0x1.8p+128, asin(x_20653), x_20656, 185.195007324, -3415.038574219, select(x_20658, 0.494113356, x_20659));
      donor_replacementGLF_dead12col_8 = vec3<f32>(-8829.655273438, 634.190979004, -399.763000488);
      let x_20668 : f32 = GLF_dead12gl_FragCoord.y;
      if ((i32(x_20668) < 120)) {
        let x_20674 : f32 = lin.y;
        let x_20676 : f32 = x_8265.GLF_dead12resolution.x;
        let x_20678 : f32 = donor_replacementGLF_dead12A_10[39];
        let x_20680 : f32 = x_8265.GLF_dead12resolution.x;
        donor_replacementGLF_dead12col_8 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_20674, x_20674, x_20674) + vec3<f32>(x_20676, ((x_20678 / x_20680) + 50.0), 22.0))));
      } else {
        let x_20691 : f32 = GLF_dead12gl_FragCoord.y;
        if ((i32(x_20691) < 140)) {
          let x_20697 : f32 = lin.y;
          let x_20699 : f32 = x_8265.GLF_dead12resolution.x;
          let x_20701 : f32 = donor_replacementGLF_dead12A_10[39];
          let x_20703 : f32 = x_8265.GLF_dead12resolution.x;
          donor_replacementGLF_dead12col_8 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_20697, x_20697, x_20697) + vec3<f32>(x_20699, ((x_20701 / x_20703) + 50.0), 22.0))));
        } else {
          let x_20714 : f32 = GLF_dead12gl_FragCoord.y;
          if ((i32(x_20714) < 160)) {
            let x_20720 : f32 = lin.y;
            let x_20722 : f32 = x_8265.GLF_dead12resolution.x;
            let x_20724 : f32 = donor_replacementGLF_dead12A_10[39];
            let x_20726 : f32 = x_8265.GLF_dead12resolution.x;
            donor_replacementGLF_dead12col_8 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_20720, x_20720, x_20720) + vec3<f32>(x_20722, ((x_20724 / x_20726) + 50.0), 22.0))));
          } else {
            let x_20737 : f32 = GLF_dead12gl_FragCoord.y;
            if ((i32(x_20737) < 180)) {
              let x_20743 : f32 = lin.y;
              let x_20745 : f32 = x_8265.GLF_dead12resolution.x;
              let x_20747 : f32 = donor_replacementGLF_dead12A_10[44];
              let x_20749 : f32 = x_8265.GLF_dead12resolution.x;
              donor_replacementGLF_dead12col_8 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_20743, x_20743, x_20743) + vec3<f32>(x_20745, ((x_20747 / x_20749) + 50.0), 22.0))));
            } else {
              let x_20760 : f32 = GLF_dead12gl_FragCoord.y;
              if ((i32(x_20760) < 200)) {
                let x_20766 : f32 = lin.y;
                let x_20768 : f32 = x_8265.GLF_dead12resolution.x;
                let x_20770 : f32 = donor_replacementGLF_dead12A_10[49];
                let x_20772 : f32 = x_8265.GLF_dead12resolution.x;
                donor_replacementGLF_dead12col_8 = (vec3<f32>(0.5, 0.5, 0.5) + cos((vec3<f32>(x_20766, x_20766, x_20766) + vec3<f32>(x_20768, ((x_20770 / x_20772) + 50.0), 22.0))));
              } else {
                discard;
              }
            }
          }
        }
      }
    }
  }
  let x_20784 : vec4<f32> = x_GLF_color;
  x_GLF_outVarBackup_GLF_color_38 = x_20784;
  x_GLF_color = vec4<f32>(3745.596435547, -321.160003662, -5852.868652344, 3235.692382812);
  if (false) {
    let x_20794 : vec2<f32> = x_13226.resolution;
    donor_replacementGLF_dead14result_6 = length(x_20794);
  }
  if (true) {
    let x_20798 : vec4<f32> = x_GLF_outVarBackup_GLF_color_38;
    x_GLF_color = x_20798;
  }
  if (false) {
    donor_replacementGLF_dead10pos_1 = vec2<f32>(-7768.087402344, 4.599999905);
    let x_20805 : f32 = donor_replacementGLF_dead10pos_1.x;
    let x_20807 : f32 = GLF_dead5color.x;
    let x_20809 : f32 = GLF_dead5color.z;
    if ((x_20805 > (x_20807 + x_20809))) {
    }
    if (false) {
      let x_20819 : f32 = x_655.GLF_dead8one;
      let x_20821 : f32 = x_655.GLF_dead8one;
      let x_20823 : f32 = x_655.GLF_dead8one;
      let x_20825 : f32 = x_655.GLF_dead8one;
      let x_20829 : f32 = x_655.GLF_dead8one;
      let x_20831 : f32 = x_655.GLF_dead8one;
      let x_20836 : f32 = x_655.GLF_dead8one;
      let x_20838 : f32 = x_655.GLF_dead8one;
      let x_20840 : f32 = x_655.GLF_dead8one;
      let x_20841 : vec4<f32> = GLF_dead11gl_FragCoord;
      let x_20844 : f32 = x_655.GLF_dead8one;
      let x_20846 : f32 = x_655.GLF_dead8one;
      let x_20848 : f32 = x_655.GLF_dead8one;
      let x_20850 : f32 = x_655.GLF_dead8one;
      let x_20852 : f32 = x_655.GLF_dead8one;
      let x_20854 : f32 = x_655.GLF_dead8one;
      let x_20856 : f32 = x_655.GLF_dead8one;
      let x_20857 : vec4<f32> = GLF_dead11gl_FragCoord;
      let x_20860 : f32 = x_655.GLF_dead8one;
      let x_20862 : f32 = x_655.GLF_dead8one;
      let x_20864 : f32 = x_655.GLF_dead8one;
      let x_20866 : f32 = x_655.GLF_dead8one;
      let x_20868 : f32 = x_655.GLF_dead8one;
      let x_20870 : f32 = x_655.GLF_dead8one;
      let x_20872 : f32 = x_655.GLF_dead8one;
      let x_20874 : f32 = x_655.GLF_dead8one;
      let x_20876 : f32 = x_655.GLF_dead8one;
      let x_20878 : f32 = x_655.GLF_dead8one;
      let x_20880 : f32 = x_655.GLF_dead8one;
      let x_20882 : f32 = x_655.GLF_dead8one;
      let x_20884 : f32 = x_655.GLF_dead8one;
      donor_replacementGLF_dead13A_7 = array<f32, 50u>(-3.799999952, x_20819, x_20821, 0.0, x_20823, x_20825, -174.554992676, -27.200000763, x_20829, 7.0, x_20831, -12.100000381, -7350.274414062, 2.900000095, x_20836, x_20838, x_20840, length(x_20841), x_20844, x_20846, x_20848, 7.0, x_20850, -27.200000763, -7350.274414062, x_20852, x_20854, x_20856, -174.554992676, length(x_20857), 0.0, x_20860, -12.100000381, x_20862, x_20864, 2.900000095, -3.799999952, x_20866, x_20868, x_20870, x_20872, x_20874, x_20876, x_20878, x_20880, x_20882, -12.100000381, -3.799999952, x_20884, -7350.274414062);
      let x_20887 : f32 = donor_replacementGLF_dead13A_7[40];
      let x_20889 : f32 = x_728.GLF_dead13resolution.x;
      let x_20892 : f32 = donor_replacementGLF_dead13A_7[44];
      let x_20894 : f32 = x_728.GLF_dead13resolution.y;
      GLF_dead13_GLF_color = vec4<f32>((x_20887 / x_20889), (x_20892 / x_20894), 1.0, 1.0);
    }
  }
  let x_20898 : i32 = v_1;
  param_2 = x_20898;
  let x_20899 : i32 = collatz_i1_(&(param_2));
  indexable_5 = array<vec4<f32>, 16u>(vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(0.5, 0.0, 0.0, 1.0), vec4<f32>(0.0, 0.5, 0.0, 1.0), vec4<f32>(0.5, 0.5, 0.0, 1.0), vec4<f32>(0.0, 0.0, 0.5, 1.0), vec4<f32>(0.5, 0.0, 0.5, 1.0), vec4<f32>(0.0, 0.5, 0.5, 1.0), vec4<f32>(0.5, 0.5, 0.5, 1.0), vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(1.0, 0.0, 0.0, 1.0), vec4<f32>(0.0, 1.0, 0.0, 1.0), vec4<f32>(1.0, 1.0, 0.0, 1.0), vec4<f32>(0.0, 0.0, 1.0, 1.0), vec4<f32>(1.0, 0.0, 1.0, 1.0), vec4<f32>(0.0, 1.0, 1.0, 1.0), vec4<f32>(1.0, 1.0, 1.0, 1.0));
  let x_20903 : vec4<f32> = indexable_5[(x_20899 % 16)];
  x_GLF_color = x_20903;
  if (false) {
    loop {
      let x_20911 : i32 = GLF_dead9MATRIX_N;
      if ((x_20911 >= 0)) {
      } else {
        break;
      }
      let x_20913 : vec2<f32> = lin;
      let x_20914 : vec2<f32> = lin;
      lin = (x_20913 + x_20914);
      let x_20916 : i32 = GLF_dead9MATRIX_N;
      GLF_dead9MATRIX_N = (x_20916 - 1);
    }
  }
  return;
}

struct main_out {
  [[location(0)]]
  x_GLF_color_1 : vec4<f32>;
};

[[stage(fragment)]]
fn main([[builtin(position)]] gl_FragCoord_param : vec4<f32>) -> main_out {
  gl_FragCoord = gl_FragCoord_param;
  main_1();
  return main_out(x_GLF_color);
}
