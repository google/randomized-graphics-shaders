struct BST {
  data : i32;
  leftIndex : i32;
  rightIndex : i32;
};

[[block]]
struct buf0 {
  injectionSwitch : vec2<f32>;
};

[[block]]
struct buf1 {
  GLF_live1resolution : vec2<f32>;
};

var<private> GLF_live8MATRIX_N : i32;

var<private> GLF_live6_GLF_color : vec4<f32>;

var<private> GLF_live5gl_FragCoord : vec4<f32>;

var<private> GLF_live5_GLF_color : vec4<f32>;

var<private> GLF_live1_GLF_color : vec4<f32>;

[[group(0), binding(0)]] var<uniform> x_168 : buf0;

var<private> x_GLF_color : vec4<f32>;

var<private> tree_1 : array<BST, 10u>;

var<private> gl_FragCoord : vec4<f32>;

[[group(0), binding(1)]] var<uniform> x_3704 : buf1;

fn makeTreeNode_struct_BST_i1_i1_i11_i1_(tree : ptr<function, BST>, data : ptr<function, i32>) {
  if (false) {
    x_GLF_color = vec4<f32>(687.791992188, 702.892028809, 694.392028809, 687.192016602);
  }
  let x_344 : i32 = *(data);
  (*(tree)).data = x_344;
  (*(tree)).leftIndex = -1;
  (*(tree)).rightIndex = -1;
  return;
}

fn insert_i1_i1_(treeIndex : ptr<function, i32>, data_1 : ptr<function, i32>) {
  var baseIndex : i32;
  var param_6 : BST;
  var param_7 : i32;
  var param_8 : BST;
  var param_9 : i32;
  var GLF_live9i : i32;
  var GLF_live9_looplimiter0 : i32;
  var GLF_live9res : vec4<f32>;
  var GLF_live9pos_1 : vec2<f32>;
  var param_10 : vec2<f32>;
  var param_11 : vec4<f32>;
  var indexable : array<vec4<f32>, 8u>;
  var x_525 : i32;
  var indexable_1 : array<vec4<f32>, 8u>;
  var indexable_2 : array<vec4<f32>, 8u>;
  var indexable_3 : array<vec4<f32>, 16u>;
  var GLF_live10thirty_two : f32;
  var GLF_live10i : i32;
  var GLF_live10result : f32;
  baseIndex = 0;
  loop {
    let x_356 : i32 = baseIndex;
    let x_357 : i32 = *(treeIndex);
    if ((x_356 <= x_357)) {
    } else {
      break;
    }
    let x_359 : i32 = *(data_1);
    let x_364 : i32 = baseIndex;
    let x_366 : i32 = tree_1[x_364].data;
    if (((x_359 <= x_366) | false)) {
      let x_371 : i32 = baseIndex;
      let x_373 : i32 = tree_1[x_371].leftIndex;
      let x_374 : i32 = baseIndex;
      let x_376 : i32 = tree_1[x_374].leftIndex;
      let x_377 : i32 = baseIndex;
      let x_379 : i32 = tree_1[x_377].leftIndex;
      let x_386 : f32 = x_168.injectionSwitch.x;
      if ((~(~((vec4<i32>((clamp(x_373, x_376, x_379) - 0), 0, 0, 0).x | i32(x_386)))) == -1)) {
        let x_394 : i32 = baseIndex;
        let x_395 : i32 = *(treeIndex);
        tree_1[x_394].leftIndex = x_395;
        let x_397 : i32 = *(treeIndex);
        let x_401 : BST = tree_1[x_397];
        param_6 = x_401;
        let x_403 : i32 = *(data_1);
        param_7 = x_403;
        makeTreeNode_struct_BST_i1_i1_i11_i1_(&(param_6), &(param_7));
        let x_405 : BST = param_6;
        tree_1[x_397] = x_405;
        return;
      } else {
        let x_409 : i32 = baseIndex;
        let x_411 : i32 = tree_1[x_409].leftIndex;
        baseIndex = x_411;
        continue;
      }
    } else {
      let x_414 : i32 = baseIndex;
      let x_416 : i32 = tree_1[x_414].rightIndex;
      if ((x_416 == -1)) {
        let x_420 : i32 = baseIndex;
        let x_421 : i32 = *(treeIndex);
        tree_1[x_420].rightIndex = x_421;
        let x_423 : i32 = *(treeIndex);
        let x_426 : BST = tree_1[x_423];
        param_8 = x_426;
        let x_428 : i32 = *(data_1);
        param_9 = x_428;
        makeTreeNode_struct_BST_i1_i1_i11_i1_(&(param_8), &(param_9));
        let x_430 : BST = param_8;
        tree_1[x_423] = x_430;
        return;
      } else {
        let x_599 : i32 = baseIndex;
        let x_601 : i32 = tree_1[x_599].rightIndex;
        baseIndex = x_601;
        continue;
      }
    }
  }
  return;
}

fn GLF_live6cross2d_vf2_vf2_(GLF_live6a : ptr<function, vec2<f32>>, GLF_live6b : ptr<function, vec2<f32>>) -> f32 {
  var GLF_live8_looplimiter4 : i32;
  GLF_live8_looplimiter4 = 0;
  let x_137 : i32 = GLF_live8_looplimiter4;
  if ((x_137 >= 5)) {
  }
  let x_144 : f32 = (*(GLF_live6a)).x;
  let x_146 : f32 = (*(GLF_live6b)).y;
  let x_149 : f32 = (*(GLF_live6b)).x;
  let x_151 : f32 = (*(GLF_live6b)).x;
  let x_154 : f32 = (*(GLF_live6a)).y;
  return ((x_144 * x_146) - (max(x_149, x_151) * x_154));
}

fn GLF_live6pointInTriangle_vf2_vf2_vf2_vf2_(GLF_live6p : ptr<function, vec2<f32>>, GLF_live6a_1 : ptr<function, vec2<f32>>, GLF_live6b_1 : ptr<function, vec2<f32>>, GLF_live6c : ptr<function, vec2<f32>>) -> i32 {
  var GLF_live6pab : f32;
  var param : vec2<f32>;
  var param_1 : vec2<f32>;
  var GLF_live6pbc : f32;
  var param_2 : vec2<f32>;
  var param_3 : vec2<f32>;
  var GLF_live6pca : f32;
  var param_4 : vec2<f32>;
  var param_5 : vec2<f32>;
  var x_259 : bool;
  var x_303 : bool;
  var x_312 : bool;
  var x_260_phi : bool;
  var x_304_phi : bool;
  var x_313_phi : bool;
  let x_162 : f32 = (*(GLF_live6p)).x;
  let x_164 : f32 = (*(GLF_live6a_1)).x;
  let x_171 : f32 = x_168.injectionSwitch.x;
  let x_173 : f32 = x_168.injectionSwitch.y;
  let x_179 : f32 = (*(GLF_live6p)).y;
  let x_181 : f32 = (*(GLF_live6a_1)).y;
  let x_188 : f32 = (*(GLF_live6b_1)).x;
  let x_190 : f32 = (*(GLF_live6b_1)).y;
  let x_197 : f32 = (*(GLF_live6a_1)).x;
  let x_200 : f32 = (*(GLF_live6b_1)).y;
  let x_202 : f32 = (*(GLF_live6a_1)).y;
  param = vec2<f32>(select(-7.300000191, (x_162 - x_164), !(!((x_171 < x_173)))), (x_179 - x_181));
  param_1 = vec2<f32>((select(vec2<f32>(79.300003052, 8570.34375), vec2<f32>(x_188, x_190), vec2<bool>(true, true)).x - x_197), (x_200 - x_202));
  let x_207 : f32 = GLF_live6cross2d_vf2_vf2_(&(param), &(param_1));
  GLF_live6pab = x_207;
  let x_211 : vec2<f32> = *(GLF_live6p);
  let x_212 : vec2<f32> = *(GLF_live6p);
  let x_216 : f32 = (*(GLF_live6p)).x;
  let x_218 : f32 = (*(GLF_live6p)).y;
  let x_225 : f32 = (*(GLF_live6b_1)).x;
  let x_228 : f32 = (*(GLF_live6p)).y;
  let x_230 : f32 = (*(GLF_live6b_1)).y;
  let x_234 : f32 = (*(GLF_live6c)).x;
  let x_236 : f32 = (*(GLF_live6b_1)).x;
  let x_239 : f32 = (*(GLF_live6c)).y;
  let x_241 : f32 = (*(GLF_live6b_1)).y;
  param_2 = vec2<f32>((((vec2<f32>(0.0, 0.0) + clamp(x_211, x_212, select(vec2<f32>(-765.283996582, -3.900000095), vec2<f32>(x_216, x_218), vec2<bool>(true, true))))).x - x_225), (x_228 - x_230));
  param_3 = vec2<f32>((x_234 - x_236), (x_239 - x_241));
  let x_246 : f32 = GLF_live6cross2d_vf2_vf2_(&(param_2), &(param_3));
  GLF_live6pbc = x_246;
  let x_247 : f32 = GLF_live6pab;
  let x_249 : f32 = GLF_live6pbc;
  let x_251 : bool = ((x_247 < 0.0) & (x_249 < 0.0));
  x_260_phi = x_251;
  if (!(x_251)) {
    let x_255 : f32 = GLF_live6pab;
    let x_257 : f32 = GLF_live6pbc;
    x_259 = ((x_255 >= 0.0) & (x_257 >= 0.0));
    x_260_phi = x_259;
  }
  let x_260 : bool = x_260_phi;
  if (!(x_260)) {
    return 0;
  }
  var x_302 : bool;
  var x_303_phi : bool;
  let x_267 : f32 = (*(GLF_live6p)).x;
  let x_269 : f32 = (*(GLF_live6c)).x;
  let x_272 : f32 = (*(GLF_live6p)).y;
  let x_274 : f32 = (*(GLF_live6c)).y;
  let x_278 : f32 = (*(GLF_live6a_1)).x;
  let x_280 : f32 = (*(GLF_live6c)).x;
  let x_283 : f32 = (*(GLF_live6a_1)).y;
  let x_285 : f32 = (*(GLF_live6c)).y;
  param_4 = vec2<f32>((x_267 - x_269), (x_272 - x_274));
  param_5 = vec2<f32>((x_278 - x_280), (x_283 - x_285));
  let x_290 : f32 = GLF_live6cross2d_vf2_vf2_(&(param_4), &(param_5));
  let x_292 : f32 = x_168.injectionSwitch.x;
  GLF_live6pca = (x_290 - x_292);
  x_304_phi = true;
  if (true) {
    x_303_phi = true;
    if (true) {
      let x_298 : f32 = GLF_live6pab;
      let x_300 : f32 = GLF_live6pca;
      x_302 = ((x_298 < 0.0) & (x_300 < 0.0));
      x_303_phi = x_302;
    }
    x_303 = x_303_phi;
    x_304_phi = x_303;
  }
  let x_304 : bool = x_304_phi;
  x_313_phi = x_304;
  if (!(x_304)) {
    let x_308 : f32 = GLF_live6pab;
    let x_310 : f32 = GLF_live6pca;
    x_312 = ((x_308 >= 0.0) & (x_310 >= 0.0));
    x_313_phi = x_312;
  }
  let x_313 : bool = x_313_phi;
  if (!(x_313)) {
    return 0;
  }
  return 1;
}

fn search_i1_(target : ptr<function, i32>) -> i32 {
  var GLF_live11_looplimiter0 : i32;
  var index : i32;
  var currentNode : BST;
  var GLF_live5icoord : vec2<i32>;
  var GLF_live5A : i32;
  var GLF_live5B : i32;
  var GLF_live5C : i32;
  var GLF_live5D : i32;
  var GLF_live5E : i32;
  var GLF_live5F : i32;
  var GLF_live5G : i32;
  var GLF_live5H : i32;
  var GLF_live5I : i32;
  var GLF_live5J : i32;
  var GLF_live5res : i32;
  var x_775 : i32;
  var x_2136 : i32;
  var GLF_live5icoord_1 : vec2<i32>;
  var GLF_live5A_1 : i32;
  var GLF_live5B_1 : i32;
  var GLF_live5C_1 : i32;
  var GLF_live5D_1 : i32;
  var GLF_live5E_1 : i32;
  var GLF_live5F_1 : i32;
  var GLF_live5G_1 : i32;
  var GLF_live5H_1 : i32;
  var GLF_live5I_1 : i32;
  var GLF_live5J_1 : i32;
  var GLF_live5res_1 : i32;
  var x_2621 : i32;
  var x_2780 : i32;
  var x_3296 : i32;
  var GLF_live8matrix_u : vec4<f32>;
  var GLF_live8alpha1 : f32;
  var GLF_live8u : i32;
  var GLF_live8_looplimiter1 : i32;
  var GLF_live1A : array<f32, 50u>;
  var x_3733 : f32;
  var GLF_live2v : i32;
  var GLF_live2count : i32;
  var GLF_live2_looplimiter0 : i32;
  let x_605 : f32 = gl_FragCoord.x;
  let x_607 : f32 = x_168.injectionSwitch.x;
  let x_609 : i32 = *(target);
  GLF_live11_looplimiter0 = select(0, x_609, (x_605 < x_607));
  let x_611 : i32 = GLF_live11_looplimiter0;
  if ((x_611 >= 6)) {
  }
  index = 0;
  loop {
    let x_622 : i32 = index;
    if ((x_622 != -1)) {
    } else {
      break;
    }
    let x_625 : i32 = index;
    let x_627 : BST = tree_1[x_625];
    currentNode = x_627;
    let x_629 : i32 = currentNode.data;
    let x_630 : i32 = *(target);
    if ((x_629 == x_630)) {
      let x_639 : vec4<f32> = GLF_live5gl_FragCoord;
      GLF_live5icoord = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_639.x, x_639.y)));
      let x_645 : i32 = GLF_live5icoord.x;
      GLF_live5A = select(-1, 0, ((x_645 & 1) != 0));
      let x_651 : i32 = GLF_live5icoord.x;
      GLF_live5B = select(-1, 0, ((x_651 & 2) != 0));
      let x_657 : i32 = GLF_live5icoord.x;
      GLF_live5C = select(-1, 0, ((x_657 & 4) != 0));
      let x_663 : i32 = GLF_live5icoord.x;
      GLF_live5D = select(-1, 0, ((x_663 & 8) != 0));
      let x_669 : i32 = GLF_live5icoord.x;
      GLF_live5E = select(-1, 0, ((x_669 & 16) != 0));
      let x_675 : i32 = GLF_live5icoord.y;
      GLF_live5F = select(-1, 0, ((x_675 & 1) != 0));
      let x_681 : i32 = GLF_live5icoord.y;
      GLF_live5G = select(-1, 0, ((x_681 & 2) != 0));
      let x_687 : i32 = GLF_live5icoord.y;
      GLF_live5H = select(-1, 0, ((x_687 & 4) != 0));
      let x_693 : vec2<i32> = GLF_live5icoord;
      GLF_live5I = select(-1, 0, ((((vec2<i32>(0, 0) | x_693)).y & 8) != 0));
      let x_701 : i32 = GLF_live5icoord.y;
      GLF_live5J = select(-1, 0, ((x_701 & 16) != 0));
      let x_706 : i32 = GLF_live5A;
      let x_707 : i32 = GLF_live5C;
      let x_710 : i32 = GLF_live5D;
      let x_713 : i32 = GLF_live5E;
      let x_716 : i32 = GLF_live5F;
      let x_718 : i32 = GLF_live5G;
      let x_720 : i32 = GLF_live5H;
      let x_722 : i32 = GLF_live5I;
      let x_725 : i32 = GLF_live5J;
      let x_728 : i32 = GLF_live5B;
      let x_729 : i32 = GLF_live5C;
      let x_732 : i32 = GLF_live5D;
      let x_735 : i32 = GLF_live5E;
      let x_736 : i32 = GLF_live5E;
      let x_740 : i32 = GLF_live5F;
      let x_742 : i32 = GLF_live5G;
      let x_744 : i32 = GLF_live5H;
      let x_746 : i32 = GLF_live5I;
      let x_749 : i32 = GLF_live5J;
      let x_753 : i32 = GLF_live5A;
      let x_755 : i32 = GLF_live5C;
      let x_757 : i32 = GLF_live5D;
      let x_760 : i32 = GLF_live5E;
      let x_763 : i32 = GLF_live5F;
      let x_765 : i32 = GLF_live5H;
      let x_768 : i32 = GLF_live5I;
      let x_770 : i32 = GLF_live5J;
      let x_774 : i32 = ((((((((((x_706 | ~(x_707)) | ~(x_710)) | ~(x_713)) | x_716) | x_718) | x_720) | ~(x_722)) | ~(x_725)) & ((((((((x_728 | ~(x_729)) | ~(x_732)) | ~((x_735 | x_736))) | x_740) | x_742) | x_744) | ~(x_746)) | ~(x_749))) & (((((((~(x_753) | x_755) | ~(x_757)) | ~(x_760)) | x_763) | ~(x_765)) | x_768) | ~((x_770 - 0))));
      if (false) {
        x_775 = -41056;
      } else {
        let x_780 : i32 = GLF_live5A;
        let x_781 : i32 = GLF_live5B;
        let x_784 : i32 = GLF_live5D;
        x_775 = ((x_780 | ~(x_781)) | ~(x_784));
      }
      let x_787 : i32 = x_775;
      let x_788 : i32 = GLF_live5E;
      let x_791 : i32 = GLF_live5G;
      let x_793 : i32 = GLF_live5H;
      let x_796 : i32 = GLF_live5I;
      let x_798 : i32 = GLF_live5J;
      GLF_live5res = (x_774 & (((((x_787 | ~(x_788)) | x_791) | ~(x_793)) | x_796) | ~(x_798)));
      let x_802 : i32 = GLF_live5A;
      let x_803 : i32 = GLF_live5B;
      let x_806 : i32 = GLF_live5C;
      let x_809 : i32 = GLF_live5D;
      let x_811 : i32 = GLF_live5E;
      let x_814 : i32 = GLF_live5F;
      let x_816 : i32 = GLF_live5G;
      let x_818 : i32 = GLF_live5H;
      let x_821 : i32 = GLF_live5I;
      let x_823 : i32 = GLF_live5J;
      let x_826 : i32 = GLF_live5B;
      let x_827 : i32 = GLF_live5D;
      let x_828 : i32 = GLF_live5C;
      let x_832 : i32 = GLF_live5D;
      let x_835 : i32 = GLF_live5E;
      let x_838 : i32 = GLF_live5F;
      let x_841 : i32 = GLF_live5G;
      let x_844 : i32 = GLF_live5H;
      let x_846 : i32 = GLF_live5I;
      let x_848 : i32 = GLF_live5J;
      let x_849 : i32 = GLF_live5J;
      let x_852 : i32 = GLF_live5J;
      let x_853 : i32 = GLF_live5J;
      let x_858 : i32 = GLF_live5A;
      let x_859 : i32 = GLF_live5C;
      let x_861 : i32 = GLF_live5D;
      let x_864 : i32 = GLF_live5E;
      let x_867 : i32 = GLF_live5G;
      let x_870 : i32 = GLF_live5H;
      let x_872 : i32 = GLF_live5I;
      let x_874 : i32 = GLF_live5J;
      let x_878 : i32 = GLF_live5A;
      let x_879 : i32 = GLF_live5C;
      let x_881 : i32 = GLF_live5D;
      let x_884 : i32 = GLF_live5E;
      let x_887 : i32 = GLF_live5F;
      let x_890 : i32 = GLF_live5H;
      let x_892 : i32 = GLF_live5I;
      let x_894 : i32 = GLF_live5J;
      let x_899 : i32 = GLF_live5res;
      GLF_live5res = (x_899 & (((((((((((((x_802 | (x_803 << bitcast<u32>(0))) | ~(x_806)) | x_809) | ~(x_811)) | x_814) | x_816) | ~(x_818)) | x_821) | ~(x_823)) & ((((((((x_826 | ~(select(x_828, x_827, false))) | ~(x_832)) | ~(x_835)) | ~(x_838)) | ~(x_841)) | x_844) | x_846) | ~(clamp(max(x_848, (x_849 * 1)), x_852, x_853)))) & (((((((x_858 | x_859) | ~(x_861)) | ~(x_864)) | ~(x_867)) | x_870) | x_872) | ~(x_874))) & (((((((x_878 | x_879) | ~(x_881)) | ~(x_884)) | ~(x_887)) | x_890) | x_892) | ~(x_894))) << bitcast<u32>(0)));
      let x_901 : i32 = GLF_live5A;
      let x_902 : i32 = GLF_live5B;
      let x_904 : i32 = GLF_live5C;
      let x_907 : i32 = GLF_live5D;
      let x_909 : i32 = GLF_live5E;
      let x_912 : i32 = GLF_live5G;
      let x_920 : i32 = GLF_live5H;
      let x_922 : i32 = GLF_live5I;
      let x_924 : i32 = GLF_live5J;
      let x_927 : i32 = GLF_live5A;
      let x_929 : i32 = GLF_live5A;
      let x_932 : i32 = GLF_live5A;
      let x_936 : i32 = GLF_live5C;
      let x_938 : i32 = GLF_live5D;
      let x_940 : i32 = GLF_live5E;
      let x_943 : i32 = GLF_live5G;
      let x_946 : i32 = GLF_live5H;
      let x_948 : i32 = GLF_live5I;
      let x_950 : i32 = GLF_live5J;
      let x_954 : i32 = GLF_live5A;
      let x_956 : i32 = GLF_live5B;
      let x_959 : i32 = GLF_live5C;
      let x_962 : i32 = GLF_live5D;
      let x_965 : i32 = GLF_live5D;
      let x_971 : f32 = x_168.injectionSwitch.x;
      let x_975 : i32 = GLF_live5E;
      let x_977 : i32 = GLF_live5G;
      let x_980 : i32 = GLF_live5H;
      let x_982 : i32 = GLF_live5I;
      let x_984 : i32 = GLF_live5J;
      let x_988 : i32 = GLF_live5A;
      let x_989 : i32 = GLF_live5B;
      let x_992 : i32 = GLF_live5D;
      let x_994 : i32 = GLF_live5E;
      let x_998 : i32 = GLF_live5G;
      let x_1000 : i32 = GLF_live5H;
      let x_1002 : i32 = GLF_live5I;
      let x_1004 : i32 = GLF_live5J;
      let x_1008 : i32 = GLF_live5res;
      GLF_live5res = (x_1008 & (((((((((((x_901 | x_902) | ~(x_904)) | x_907) | ~(x_909)) | ~(((0 ^ vec3<i32>(x_912, 1, 0).x) - 0))) | x_920) | x_922) | ~(x_924)) & (((((((min(max(~(x_927), ~(x_929)), ~((x_932 / 1))) | x_936) | x_938) | ~(x_940)) | ~(x_943)) | x_946) | x_948) | ~(x_950))) & ((((((((~(x_954) | ~(x_956)) | ~(x_959)) | (max(vec2<i32>(~(x_962), 0), vec2<i32>(~(x_965), 0)).x >> bitcast<u32>(i32(x_971)))) | x_975) | ~(x_977)) | x_980) | x_982) | ~(x_984))) & (((((((x_988 | ~(x_989)) | x_992) | ~((x_994 - 0))) | x_998) | x_1000) | x_1002) | ~(x_1004))));
      let x_1010 : i32 = GLF_live5A;
      let x_1012 : i32 = GLF_live5B;
      let x_1014 : i32 = GLF_live5C;
      let x_1017 : i32 = GLF_live5D;
      let x_1019 : i32 = GLF_live5E;
      let x_1022 : i32 = GLF_live5G;
      let x_1024 : i32 = GLF_live5H;
      let x_1026 : i32 = GLF_live5I;
      let x_1028 : i32 = GLF_live5J;
      let x_1031 : i32 = GLF_live5A;
      let x_1032 : i32 = GLF_live5B;
      let x_1035 : i32 = GLF_live5D;
      let x_1038 : i32 = GLF_live5E;
      let x_1040 : i32 = GLF_live5G;
      let x_1042 : i32 = GLF_live5H;
      let x_1044 : i32 = GLF_live5I;
      let x_1046 : i32 = GLF_live5J;
      let x_1050 : i32 = GLF_live5A;
      let x_1051 : i32 = GLF_live5C;
      let x_1054 : i32 = GLF_live5D;
      let x_1057 : i32 = GLF_live5E;
      let x_1059 : i32 = GLF_live5F;
      let x_1061 : i32 = GLF_live5G;
      let x_1063 : i32 = GLF_live5H;
      let x_1065 : i32 = GLF_live5I;
      let x_1067 : i32 = GLF_live5J;
      let x_1071 : i32 = GLF_live5A;
      let x_1073 : i32 = GLF_live5C;
      let x_1075 : i32 = GLF_live5D;
      let x_1078 : i32 = GLF_live5E;
      let x_1080 : i32 = GLF_live5F;
      let x_1082 : i32 = GLF_live5G;
      let x_1085 : i32 = GLF_live5H;
      let x_1087 : i32 = GLF_live5I;
      let x_1089 : i32 = GLF_live5J;
      let x_1093 : i32 = GLF_live5res;
      GLF_live5res = (x_1093 & (((((((((((~(x_1010) | x_1012) | ~(x_1014)) | x_1017) | ~(x_1019)) | x_1022) | x_1024) | x_1026) | ~(x_1028)) & (((((((x_1031 | ~(x_1032)) | ~(x_1035)) | x_1038) | x_1040) | x_1042) | x_1044) | ~(x_1046))) & ((((((((x_1050 | ~(x_1051)) | ~(x_1054)) | x_1057) | x_1059) | x_1061) | x_1063) | x_1065) | ~(x_1067))) & (((((((((~(x_1071) | x_1073) | ~(x_1075)) | x_1078) | x_1080) | x_1082) | 0) | x_1085) | x_1087) | ~(x_1089))));
      if (false) {
        x_GLF_color = vec4<f32>(81.580001831, 49.63999939, 72.790000916, 39.61000061);
      }
      let x_1102 : i32 = GLF_live5A;
      let x_1104 : i32 = GLF_live5B;
      let x_1107 : i32 = GLF_live5C;
      let x_1109 : i32 = GLF_live5D;
      let x_1112 : i32 = GLF_live5E;
      let x_1115 : i32 = GLF_live5F;
      let x_1118 : i32 = GLF_live5G;
      let x_1124 : i32 = GLF_live5H;
      let x_1125 : i32 = GLF_live5H;
      let x_1129 : i32 = GLF_live5I;
      let x_1132 : i32 = GLF_live5J;
      let x_1134 : i32 = GLF_live5A;
      let x_1135 : i32 = GLF_live5B;
      let x_1138 : i32 = GLF_live5C;
      let x_1140 : i32 = GLF_live5D;
      let x_1142 : i32 = GLF_live5E;
      let x_1145 : i32 = GLF_live5F;
      let x_1148 : i32 = GLF_live5G;
      let x_1151 : i32 = GLF_live5H;
      let x_1154 : i32 = GLF_live5I;
      let x_1157 : i32 = GLF_live5J;
      let x_1160 : i32 = GLF_live5A;
      let x_1162 : i32 = GLF_live5B;
      let x_1164 : i32 = GLF_live5C;
      let x_1166 : i32 = GLF_live5D;
      let x_1168 : i32 = GLF_live5E;
      let x_1171 : i32 = GLF_live5G;
      let x_1174 : i32 = GLF_live5H;
      let x_1177 : i32 = GLF_live5A;
      let x_1179 : i32 = GLF_live5B;
      let x_1181 : i32 = GLF_live5C;
      let x_1183 : i32 = GLF_live5D;
      let x_1185 : i32 = GLF_live5E;
      let x_1188 : i32 = GLF_live5G;
      let x_1191 : i32 = GLF_live5H;
      let x_1195 : i32 = GLF_live5I;
      let x_1198 : i32 = GLF_live5J;
      let x_1201 : i32 = GLF_live5res;
      GLF_live5res = (x_1201 & (((((((((((~(x_1102) | ~(x_1104)) | x_1107) | ~(x_1109)) | ~(x_1112)) | ~(x_1115)) | ~((1 * vec2<i32>(x_1118, 0).x))) | ~((x_1124 | x_1125))) | ~(x_1129)) | x_1132) & (((((((((x_1134 | ~(x_1135)) | x_1138) | x_1140) | ~(x_1142)) | ~(x_1145)) | ~(x_1148)) | ~(x_1151)) | ~(x_1154)) | x_1157)) & ((max(((((((~(x_1160) | x_1162) | x_1164) | x_1166) | ~(x_1168)) | ~(x_1171)) | ~(x_1174)), ((((((~(x_1177) | x_1179) | x_1181) | x_1183) | ~(x_1185)) | ~(x_1188)) | ~(x_1191))) | ~(x_1195)) | x_1198)));
      let x_1203 : i32 = GLF_live5C;
      let x_1205 : i32 = GLF_live5D;
      let x_1208 : i32 = GLF_live5E;
      let x_1210 : i32 = GLF_live5F;
      let x_1214 : i32 = GLF_live5G;
      let x_1217 : i32 = GLF_live5H;
      let x_1220 : i32 = GLF_live5C;
      let x_1222 : i32 = GLF_live5D;
      let x_1225 : i32 = GLF_live5E;
      let x_1227 : i32 = GLF_live5F;
      let x_1230 : i32 = GLF_live5G;
      let x_1233 : i32 = GLF_live5H;
      let x_1239 : i32 = GLF_live5I;
      let x_1242 : i32 = GLF_live5J;
      let x_1244 : i32 = GLF_live5A;
      let x_1245 : i32 = GLF_live5A;
      let x_1246 : i32 = GLF_live5A;
      let x_1249 : i32 = GLF_live5C;
      let x_1252 : i32 = GLF_live5D;
      let x_1255 : i32 = GLF_live5E;
      let x_1257 : i32 = GLF_live5G;
      let x_1260 : i32 = GLF_live5H;
      let x_1263 : i32 = GLF_live5I;
      let x_1266 : i32 = GLF_live5J;
      let x_1269 : i32 = GLF_live5B;
      let x_1270 : i32 = GLF_live5D;
      let x_1273 : i32 = GLF_live5E;
      let x_1275 : i32 = GLF_live5F;
      let x_1278 : i32 = GLF_live5H;
      let x_1281 : i32 = GLF_live5I;
      let x_1284 : i32 = GLF_live5J;
      let x_1287 : i32 = GLF_live5res;
      GLF_live5res = (x_1287 & ((((((((((~(x_1203) | ~(x_1205)) | x_1208) | (~(x_1210) / 1)) | ~(x_1214)) | ~(x_1217)) | (((((((~(x_1220) | ~(x_1222)) | x_1225) | ~(x_1227)) | ~(x_1230)) | ~(x_1233)) ^ 0) >> bitcast<u32>(0))) | ~(x_1239)) | x_1242) & (((((((~(clamp(x_1244, x_1245, x_1246)) | ~(x_1249)) | ~(x_1252)) | x_1255) | ~(x_1257)) | ~(x_1260)) | ~(x_1263)) | x_1266)) & ((((((x_1269 | ~(x_1270)) | x_1273) | ~(x_1275)) | ~(x_1278)) | ~(x_1281)) | x_1284)));
      let x_1289 : i32 = GLF_live5A;
      let x_1290 : i32 = GLF_live5B;
      let x_1292 : i32 = GLF_live5C;
      let x_1294 : i32 = GLF_live5D;
      let x_1298 : i32 = GLF_live5E;
      let x_1300 : i32 = GLF_live5G;
      let x_1303 : i32 = GLF_live5H;
      let x_1306 : i32 = GLF_live5I;
      let x_1309 : i32 = GLF_live5J;
      let x_1311 : i32 = GLF_live5B;
      let x_1312 : i32 = GLF_live5C;
      let x_1314 : i32 = GLF_live5D;
      let x_1316 : i32 = GLF_live5E;
      let x_1319 : i32 = GLF_live5F;
      let x_1321 : i32 = GLF_live5G;
      let x_1324 : i32 = GLF_live5H;
      let x_1327 : i32 = GLF_live5B;
      let x_1328 : i32 = GLF_live5C;
      let x_1332 : i32 = GLF_live5D;
      let x_1334 : i32 = GLF_live5E;
      let x_1337 : i32 = GLF_live5F;
      let x_1339 : i32 = GLF_live5G;
      let x_1342 : i32 = GLF_live5H;
      let x_1345 : i32 = GLF_live5B;
      let x_1346 : i32 = GLF_live5C;
      let x_1348 : i32 = GLF_live5D;
      let x_1350 : i32 = GLF_live5E;
      let x_1353 : i32 = GLF_live5F;
      let x_1355 : i32 = GLF_live5G;
      let x_1358 : i32 = GLF_live5H;
      let x_1364 : i32 = GLF_live5I;
      let x_1367 : i32 = GLF_live5J;
      let x_1370 : i32 = GLF_live5res;
      GLF_live5res = (x_1370 & (((((((((x_1289 | x_1290) | x_1292) | (~(x_1294) >> bitcast<u32>(0))) | x_1298) | ~(x_1300)) | ~(x_1303)) | ~(x_1306)) | x_1309) & ((clamp(((((((x_1311 | x_1312) | x_1314) | ~(x_1316)) | x_1319) | ~(x_1321)) | ~(x_1324)), ((((((x_1327 | ((x_1328 >> bitcast<u32>(0)) << bitcast<u32>(0))) | x_1332) | ~(x_1334)) | x_1337) | ~(x_1339)) | ~(x_1342)), ~(~(((((((x_1345 | x_1346) | x_1348) | ~(x_1350)) | x_1353) | ~(x_1355)) | ~(x_1358))))) | ~(x_1364)) | x_1367)));
      let x_1372 : i32 = GLF_live5A;
      let x_1373 : i32 = GLF_live5C;
      let x_1376 : i32 = GLF_live5D;
      let x_1378 : i32 = GLF_live5E;
      let x_1380 : i32 = GLF_live5F;
      let x_1382 : i32 = GLF_live5G;
      let x_1385 : i32 = GLF_live5H;
      let x_1388 : i32 = GLF_live5I;
      let x_1392 : i32 = GLF_live5J;
      let x_1394 : i32 = GLF_live5B;
      let x_1395 : i32 = GLF_live5C;
      let x_1398 : i32 = GLF_live5D;
      let x_1400 : i32 = GLF_live5E;
      let x_1402 : i32 = GLF_live5F;
      let x_1404 : i32 = GLF_live5B;
      let x_1405 : i32 = GLF_live5C;
      let x_1408 : i32 = GLF_live5D;
      let x_1410 : i32 = GLF_live5E;
      let x_1412 : i32 = GLF_live5F;
      let x_1415 : i32 = GLF_live5G;
      let x_1418 : i32 = GLF_live5H;
      let x_1421 : i32 = GLF_live5J;
      let x_1424 : i32 = GLF_live5res;
      GLF_live5res = (x_1424 & ((((((((((x_1372 | ~(x_1373)) | x_1376) | x_1378) | x_1380) | ~(x_1382)) | ~(x_1385)) | ~(x_1388)) >> bitcast<u32>(0)) | x_1392) & ((((((((x_1394 | ~(x_1395)) | x_1398) | x_1400) | x_1402) | ((((x_1404 | ~(x_1405)) | x_1408) | x_1410) | x_1412)) | ~(x_1415)) | ~(x_1418)) | x_1421)));
      let x_1426 : i32 = GLF_live5A;
      let x_1428 : i32 = GLF_live5B;
      let x_1431 : i32 = GLF_live5C;
      let x_1433 : i32 = GLF_live5D;
      let x_1435 : i32 = GLF_live5E;
      let x_1437 : i32 = GLF_live5F;
      let x_1439 : i32 = GLF_live5G;
      let x_1442 : i32 = GLF_live5H;
      let x_1445 : i32 = GLF_live5I;
      let x_1448 : i32 = GLF_live5J;
      let x_1450 : i32 = GLF_live5res;
      GLF_live5res = (x_1450 & (((((((((~(x_1426) | ~(x_1428)) | x_1431) | x_1433) | x_1435) | x_1437) | ~(x_1439)) | ~(x_1442)) | ~(x_1445)) | x_1448));
      let x_1452 : i32 = GLF_live5A;
      let x_1453 : i32 = GLF_live5B;
      let x_1455 : i32 = GLF_live5C;
      let x_1458 : i32 = GLF_live5D;
      let x_1461 : i32 = GLF_live5E;
      let x_1463 : i32 = index;
      let x_1464 : i32 = GLF_live5G;
      let x_1467 : i32 = GLF_live5H;
      let x_1470 : i32 = GLF_live5I;
      let x_1473 : i32 = GLF_live5J;
      let x_1475 : i32 = GLF_live5res;
      GLF_live5res = (x_1475 & ((((((((x_1452 | x_1453) | ~(x_1455)) | ~(x_1458)) | x_1461) | select(x_1464, x_1463, false)) | ~(x_1467)) | ~(x_1470)) | x_1473));
      let x_1477 : i32 = GLF_live5B;
      let x_1479 : i32 = GLF_live5D;
      let x_1481 : i32 = GLF_live5E;
      let x_1483 : i32 = GLF_live5F;
      let x_1486 : i32 = GLF_live5G;
      let x_1488 : i32 = GLF_live5H;
      let x_1491 : i32 = GLF_live5I;
      let x_1497 : i32 = GLF_live5J;
      let x_1499 : i32 = GLF_live5res;
      GLF_live5res = (x_1499 & (((((((~(x_1477) | x_1479) | x_1481) | ~(x_1483)) | x_1486) | ~(x_1488)) | ~(~(~((1 * x_1491))))) | x_1497));
      let x_1501 : i32 = GLF_live5B;
      let x_1503 : i32 = GLF_live5C;
      let x_1505 : i32 = GLF_live5D;
      let x_1508 : i32 = GLF_live5E;
      let x_1510 : i32 = GLF_live5F;
      let x_1512 : i32 = GLF_live5G;
      let x_1514 : i32 = GLF_live5H;
      let x_1517 : i32 = GLF_live5I;
      let x_1520 : i32 = GLF_live5J;
      let x_1522 : i32 = GLF_live5res;
      GLF_live5res = (x_1522 & ((((((((~(x_1501) | x_1503) | ~(x_1505)) | x_1508) | x_1510) | x_1512) | ~(x_1514)) | ~(x_1517)) | x_1520));
      let x_1524 : i32 = GLF_live5A;
      let x_1526 : i32 = GLF_live5B;
      let x_1529 : i32 = GLF_live5C;
      let x_1533 : i32 = GLF_live5D;
      let x_1535 : i32 = GLF_live5E;
      let x_1537 : i32 = GLF_live5F;
      let x_1539 : i32 = GLF_live5G;
      let x_1541 : i32 = GLF_live5I;
      let x_1544 : i32 = GLF_live5J;
      let x_1546 : i32 = GLF_live5B;
      let x_1548 : i32 = GLF_live5C;
      let x_1551 : i32 = GLF_live5D;
      let x_1553 : i32 = GLF_live5B;
      let x_1555 : i32 = GLF_live5C;
      let x_1558 : i32 = GLF_live5D;
      let x_1561 : i32 = GLF_live5E;
      let x_1563 : i32 = GLF_live5F;
      let x_1566 : i32 = GLF_live5G;
      let x_1569 : i32 = GLF_live5H;
      let x_1571 : i32 = GLF_live5I;
      let x_1574 : i32 = GLF_live5J;
      let x_1577 : i32 = GLF_live5res;
      GLF_live5res = (x_1577 & (((((((((~(x_1524) | ~(x_1526)) | (~(x_1529) << bitcast<u32>(0))) | x_1533) | x_1535) | x_1537) | x_1539) | ~(x_1541)) | x_1544) & ((((((max(((~(x_1546) | ~(x_1548)) | x_1551), ((~(x_1553) | ~(x_1555)) | x_1558)) | x_1561) | ~(x_1563)) | ~(x_1566)) | x_1569) | ~(x_1571)) | x_1574)));
      let x_1579 : i32 = GLF_live5A;
      let x_1581 : i32 = GLF_live5B;
      let x_1583 : i32 = GLF_live5C;
      let x_1585 : i32 = GLF_live5D;
      let x_1587 : i32 = GLF_live5A;
      let x_1589 : i32 = GLF_live5B;
      let x_1591 : i32 = GLF_live5C;
      let x_1593 : i32 = GLF_live5D;
      let x_1596 : i32 = GLF_live5E;
      let x_1598 : i32 = GLF_live5H;
      let x_1600 : i32 = GLF_live5I;
      let x_1603 : i32 = GLF_live5J;
      let x_1605 : i32 = GLF_live5B;
      let x_1606 : i32 = GLF_live5C;
      let x_1608 : i32 = GLF_live5D;
      let x_1610 : i32 = GLF_live5E;
      let x_1612 : i32 = GLF_live5F;
      let x_1614 : i32 = GLF_live5G;
      let x_1617 : i32 = GLF_live5H;
      let x_1620 : i32 = GLF_live5I;
      let x_1623 : i32 = GLF_live5J;
      let x_1626 : i32 = GLF_live5A;
      let x_1627 : i32 = GLF_live5B;
      let x_1629 : i32 = GLF_live5C;
      let x_1631 : i32 = GLF_live5D;
      let x_1634 : i32 = GLF_live5E;
      let x_1636 : i32 = GLF_live5A;
      let x_1637 : i32 = GLF_live5B;
      let x_1639 : i32 = GLF_live5C;
      let x_1641 : i32 = GLF_live5D;
      let x_1644 : i32 = GLF_live5E;
      let x_1648 : i32 = GLF_live5F;
      let x_1650 : i32 = GLF_live5G;
      let x_1652 : i32 = GLF_live5H;
      let x_1654 : i32 = GLF_live5I;
      let x_1657 : i32 = GLF_live5J;
      let x_1660 : i32 = GLF_live5res;
      GLF_live5res = (x_1660 & ((((((((((~(x_1579) | x_1581) | x_1583) | x_1585) | (((~(x_1587) | x_1589) | x_1591) | x_1593)) | x_1596) | x_1598) | ~(x_1600)) | x_1603) & ((((((((x_1605 | x_1606) | x_1608) | x_1610) | x_1612) | ~(x_1614)) | (x_1617 >> bitcast<u32>(0))) | ~(x_1620)) | x_1623)) & ((((((((((x_1626 | x_1627) | x_1629) | ~(x_1631)) | x_1634) | (((((x_1636 | x_1637) | x_1639) | ~(x_1641)) | x_1644) + 0)) | x_1648) | x_1650) | x_1652) | ~(x_1654)) | x_1657)));
      let x_1662 : i32 = GLF_live5A;
      let x_1663 : i32 = GLF_live5B;
      let x_1666 : i32 = GLF_live5C;
      let x_1668 : i32 = GLF_live5D;
      let x_1670 : i32 = GLF_live5E;
      let x_1672 : i32 = GLF_live5F;
      let x_1674 : i32 = GLF_live5A;
      let x_1675 : i32 = GLF_live5B;
      let x_1678 : i32 = GLF_live5C;
      let x_1680 : i32 = GLF_live5D;
      let x_1682 : i32 = GLF_live5E;
      let x_1684 : i32 = GLF_live5F;
      let x_1688 : i32 = GLF_live5A;
      let x_1689 : i32 = GLF_live5B;
      let x_1692 : i32 = GLF_live5C;
      let x_1694 : i32 = GLF_live5D;
      let x_1696 : i32 = GLF_live5E;
      let x_1698 : i32 = GLF_live5F;
      let x_1701 : i32 = GLF_live5G;
      let x_1703 : i32 = GLF_live5H;
      let x_1705 : i32 = GLF_live5I;
      let x_1708 : i32 = GLF_live5J;
      let x_1710 : i32 = GLF_live5B;
      let x_1712 : i32 = GLF_live5D;
      let x_1714 : i32 = GLF_live5E;
      let x_1716 : i32 = GLF_live5F;
      let x_1719 : i32 = GLF_live5G;
      let x_1722 : i32 = GLF_live5H;
      let x_1724 : i32 = GLF_live5H;
      let x_1729 : i32 = GLF_live5I;
      let x_1731 : i32 = GLF_live5J;
      let x_1734 : i32 = GLF_live5A;
      let x_1736 : i32 = GLF_live5B;
      let x_1739 : i32 = GLF_live5C;
      let x_1741 : i32 = GLF_live5E;
      let x_1744 : i32 = GLF_live5G;
      let x_1747 : i32 = GLF_live5H;
      let x_1750 : i32 = GLF_live5I;
      let x_1752 : i32 = GLF_live5J;
      let x_1756 : i32 = GLF_live5res;
      GLF_live5res = (x_1756 & ((((((max((max((((((x_1662 | ~(x_1663)) | x_1666) | x_1668) | x_1670) | x_1672), (((((x_1674 | ~(x_1675)) | x_1678) | x_1680) | x_1682) | x_1684)) >> bitcast<u32>(0)), (((((x_1688 | ~(x_1689)) | x_1692) | x_1694) | x_1696) | x_1698)) | x_1701) | x_1703) | ~(x_1705)) | x_1708) & (((((((~(x_1710) | x_1712) | x_1714) | ~(x_1716)) | ~(x_1719)) | min(~(x_1722), (~(x_1724) ^ 0))) | x_1729) | x_1731)) & (((((((~(x_1734) | ~(x_1736)) | x_1739) | ~(x_1741)) | ~(x_1744)) | ~(x_1747)) | x_1750) | ~(x_1752))));
      let x_1758 : i32 = GLF_live5A;
      let x_1760 : i32 = GLF_live5D;
      let x_1763 : i32 = GLF_live5E;
      let x_1767 : f32 = x_168.injectionSwitch.x;
      let x_1770 : i32 = GLF_live5F;
      let x_1773 : i32 = GLF_live5G;
      let x_1775 : i32 = GLF_live5H;
      let x_1778 : i32 = GLF_live5I;
      let x_1780 : i32 = GLF_live5J;
      let x_1783 : i32 = GLF_live5A;
      let x_1784 : i32 = GLF_live5B;
      let x_1786 : i32 = GLF_live5E;
      let x_1789 : i32 = GLF_live5F;
      let x_1792 : i32 = GLF_live5G;
      let x_1795 : i32 = GLF_live5H;
      let x_1796 : i32 = GLF_live5H;
      let x_1799 : i32 = GLF_live5I;
      let x_1801 : i32 = GLF_live5J;
      let x_1805 : i32 = GLF_live5B;
      let x_1810 : i32 = GLF_live5C;
      let x_1812 : i32 = GLF_live5D;
      let x_1814 : i32 = GLF_live5E;
      let x_1817 : i32 = GLF_live5F;
      let x_1819 : i32 = GLF_live5G;
      let x_1822 : i32 = GLF_live5H;
      let x_1824 : i32 = GLF_live5I;
      let x_1826 : i32 = GLF_live5J;
      let x_1830 : i32 = GLF_live5res;
      GLF_live5res = (x_1830 & ((((((((((~(x_1758) | ~(x_1760)) | ~(x_1763)) ^ i32(x_1767)) | ~(x_1770)) | x_1773) | ~(x_1775)) | x_1778) | ~(x_1780)) & (((((((x_1783 | x_1784) | ~(x_1786)) | ~(x_1789)) | ~(x_1792)) | select(x_1796, x_1795, false)) | x_1799) | ~(x_1801))) & ((((((((~((~(~(x_1805)) | 0)) | x_1810) | x_1812) | ~(x_1814)) | x_1817) | ~(x_1819)) | x_1822) | x_1824) | ~(x_1826))));
      let x_1832 : i32 = GLF_live5B;
      let x_1834 : i32 = GLF_live5C;
      let x_1837 : i32 = GLF_live5D;
      let x_1840 : i32 = GLF_live5E;
      let x_1842 : i32 = GLF_live5F;
      let x_1844 : i32 = GLF_live5G;
      let x_1847 : i32 = GLF_live5H;
      let x_1849 : i32 = GLF_live5I;
      let x_1851 : i32 = GLF_live5J;
      let x_1854 : i32 = GLF_live5A;
      let x_1856 : i32 = GLF_live5B;
      let x_1859 : i32 = GLF_live5C;
      let x_1861 : i32 = GLF_live5D;
      let x_1864 : i32 = GLF_live5G;
      let x_1866 : i32 = GLF_live5H;
      let x_1868 : i32 = GLF_live5I;
      let x_1870 : i32 = GLF_live5J;
      let x_1874 : i32 = GLF_live5C;
      let x_1876 : i32 = GLF_live5D;
      let x_1878 : i32 = GLF_live5E;
      let x_1881 : i32 = GLF_live5F;
      let x_1884 : i32 = GLF_live5G;
      let x_1886 : i32 = GLF_live5H;
      let x_1888 : i32 = GLF_live5I;
      let x_1890 : i32 = GLF_live5J;
      let x_1894 : i32 = GLF_live5res;
      GLF_live5res = (x_1894 & ((((((((((~(x_1832) | ~(x_1834)) | ~(x_1837)) | x_1840) | x_1842) | ~(x_1844)) | x_1847) | x_1849) | ~(x_1851)) & (((((((~(x_1854) | ~(x_1856)) | x_1859) | ~(x_1861)) | x_1864) | x_1866) | x_1868) | ~(x_1870))) & (((((((~(x_1874) | x_1876) | ~(x_1878)) | ~(x_1881)) | x_1884) | x_1886) | x_1888) | ~(x_1890))));
      let x_1896 : i32 = GLF_live5A;
      let x_1898 : i32 = GLF_live5B;
      let x_1900 : i32 = GLF_live5C;
      let x_1902 : i32 = GLF_live5E;
      let x_1904 : i32 = GLF_live5F;
      let x_1906 : i32 = GLF_live5G;
      let x_1908 : i32 = GLF_live5H;
      let x_1911 : i32 = GLF_live5I;
      let x_1914 : i32 = GLF_live5J;
      let x_1916 : i32 = GLF_live5A;
      let x_1918 : i32 = GLF_live5B;
      let x_1920 : i32 = GLF_live5D;
      let x_1922 : i32 = GLF_live5A;
      let x_1924 : i32 = GLF_live5B;
      let x_1926 : i32 = GLF_live5D;
      let x_1928 : i32 = GLF_live5A;
      let x_1930 : i32 = GLF_live5B;
      let x_1932 : i32 = GLF_live5D;
      let x_1939 : i32 = GLF_live5E;
      let x_1941 : i32 = GLF_live5G;
      let x_1944 : i32 = GLF_live5H;
      let x_1946 : i32 = GLF_live5I;
      let x_1949 : i32 = GLF_live5J;
      let x_1952 : i32 = GLF_live5res;
      GLF_live5res = (x_1952 & (((((((((~(x_1896) | x_1898) | x_1900) | x_1902) | x_1904) | x_1906) | ~(x_1908)) | ~(x_1911)) | x_1914) & ((((((0 | (~(~(clamp(((~(x_1916) | x_1918) | x_1920), ((~(x_1922) | x_1924) | x_1926), ((~(x_1928) | x_1930) | x_1932)))) - 0)) | x_1939) | ~(x_1941)) | x_1944) | ~(x_1946)) | x_1949)));
      let x_1954 : i32 = GLF_live5A;
      let x_1955 : i32 = GLF_live5B;
      let x_1957 : i32 = GLF_live5C;
      let x_1960 : i32 = GLF_live5D;
      let x_1963 : i32 = GLF_live5E;
      let x_1966 : i32 = GLF_live5F;
      let x_1969 : i32 = GLF_live5H;
      let x_1972 : i32 = GLF_live5I;
      let x_1974 : i32 = GLF_live5J;
      let x_1977 : i32 = GLF_live5res;
      let x_1978 : i32 = (x_1977 & ((((((((x_1954 | x_1955) | ~(x_1957)) | ~(x_1960)) | ~(x_1963)) | ~(x_1966)) | ~(x_1969)) | x_1972) | ~(x_1974)));
      GLF_live5res = x_1978;
      let x_1979 : i32 = (x_1978 ^ 0);
      let x_1980 : i32 = GLF_live5A;
      let x_1982 : i32 = GLF_live5C;
      let x_1985 : i32 = GLF_live5E;
      let x_1988 : i32 = GLF_live5F;
      let x_1991 : i32 = GLF_live5G;
      let x_1993 : i32 = GLF_live5H;
      let x_1996 : i32 = GLF_live5I;
      let x_1998 : i32 = GLF_live5J;
      let x_2001 : i32 = GLF_live5res;
      GLF_live5res = (x_2001 & (((((((~(x_1980) | ~(x_1982)) | ~(x_1985)) | ~(x_1988)) | x_1991) | ~(x_1993)) | x_1996) | ~(x_1998)));
      let x_2003 : i32 = GLF_live5A;
      let x_2004 : i32 = GLF_live5B;
      let x_2007 : i32 = GLF_live5C;
      let x_2010 : i32 = GLF_live5D;
      let x_2014 : i32 = GLF_live5D;
      let x_2021 : i32 = GLF_live5E;
      let x_2024 : i32 = GLF_live5F;
      let x_2027 : i32 = GLF_live5H;
      let x_2033 : i32 = GLF_live5I;
      let x_2035 : i32 = GLF_live5J;
      let x_2038 : i32 = GLF_live5res;
      GLF_live5res = (x_2038 & ((((((((x_2003 | ~(x_2004)) | ~(x_2007)) | (0 + (~((~(x_2010) << bitcast<u32>(0))) | ~((~(x_2014) << bitcast<u32>(0)))))) | ~(x_2021)) | ~(x_2024)) | ~((vec3<i32>(x_2027, 1, 1).x | 0))) | x_2033) | ~(x_2035)));
      let x_2040 : i32 = GLF_live5B;
      let x_2041 : i32 = GLF_live5C;
      let x_2044 : i32 = GLF_live5D;
      let x_2046 : i32 = GLF_live5B;
      let x_2047 : i32 = GLF_live5C;
      let x_2050 : i32 = GLF_live5D;
      let x_2053 : i32 = GLF_live5E;
      let x_2056 : i32 = GLF_live5F;
      let x_2059 : i32 = GLF_live5G;
      let x_2062 : i32 = GLF_live5H;
      let x_2065 : i32 = GLF_live5I;
      let x_2067 : i32 = GLF_live5J;
      let x_2070 : i32 = GLF_live5A;
      let x_2072 : i32 = GLF_live5B;
      let x_2075 : i32 = GLF_live5C;
      let x_2079 : i32 = GLF_live5D;
      let x_2081 : i32 = GLF_live5E;
      let x_2084 : i32 = GLF_live5F;
      let x_2086 : i32 = GLF_live5H;
      let x_2089 : i32 = GLF_live5I;
      let x_2091 : i32 = GLF_live5J;
      let x_2095 : i32 = GLF_live5B;
      let x_2097 : i32 = GLF_live5C;
      let x_2100 : i32 = GLF_live5D;
      let x_2102 : i32 = GLF_live5E;
      let x_2105 : i32 = GLF_live5F;
      let x_2107 : i32 = GLF_live5G;
      let x_2111 : i32 = GLF_live5H;
      let x_2114 : i32 = GLF_live5I;
      let x_2116 : i32 = GLF_live5J;
      let x_2120 : i32 = GLF_live5res;
      GLF_live5res = (x_2120 & ((((((((min(((x_2040 | ~(x_2041)) | x_2044), ((x_2046 | ~(x_2047)) | x_2050)) | ~(x_2053)) | ~(x_2056)) | ~(x_2059)) | ~(x_2062)) | x_2065) | ~(x_2067)) & ((((((((~(x_2070) | ~(x_2072)) | ~((x_2075 * 1))) | x_2079) | ~(x_2081)) | x_2084) | ~(x_2086)) | x_2089) | ~(x_2091))) & ((((((((~(x_2095) | ~(x_2097)) | x_2100) | ~(x_2102)) | x_2105) | ~((x_2107 | 0))) | ~(x_2111)) | x_2114) | ~(x_2116))));
      let x_2122 : i32 = GLF_live5res;
      let x_2124 : f32 = select(1.0, 0.0, (x_2122 == 0));
      let x_2125 : vec3<f32> = vec3<f32>(x_2124, x_2124, x_2124);
      GLF_live5_GLF_color = vec4<f32>(x_2125.x, x_2125.y, x_2125.z, 1.0);
      let x_2130 : i32 = *(target);
      return x_2130;
    }
    let x_2132 : i32 = *(target);
    let x_2134 : i32 = currentNode.data;
    if ((x_2132 > x_2134)) {
      let x_2140 : i32 = currentNode.rightIndex;
      x_2136 = x_2140;
    } else {
      let x_2143 : i32 = currentNode.leftIndex;
      x_2136 = x_2143;
    }
    let x_2144 : i32 = x_2136;
    index = x_2144;
    let x_2146 : vec4<f32> = GLF_live5gl_FragCoord;
    GLF_live5icoord_1 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_2146.x, x_2146.y)));
    let x_2151 : vec2<i32> = GLF_live5icoord_1;
    let x_2152 : vec2<i32> = GLF_live5icoord_1;
    let x_2154 : vec2<i32> = GLF_live5icoord_1;
    GLF_live5A_1 = select(-1, 0, ((((max(x_2151, x_2152) | (vec2<i32>(0, 0) | x_2154))).x & 1) != 0));
    let x_2163 : i32 = GLF_live5icoord_1.x;
    GLF_live5B_1 = select(-1, 0, ((x_2163 & 2) != 0));
    let x_2169 : i32 = GLF_live5icoord_1.x;
    GLF_live5C_1 = (select(-1, 0, ((x_2169 & 4) != 0)) << bitcast<u32>(0));
    let x_2176 : i32 = GLF_live5icoord_1.x;
    GLF_live5D_1 = select(-1, 0, (((~(~((x_2176 << bitcast<u32>(0)))) - 0) & 8) != 0));
    let x_2186 : i32 = GLF_live5icoord_1.x;
    GLF_live5E_1 = select(-1, 0, ((x_2186 & 16) != 0));
    let x_2192 : i32 = GLF_live5icoord_1.y;
    let x_2194 : i32 = GLF_live5icoord_1.y;
    GLF_live5F_1 = select(-1, 0, (((min(x_2192, x_2194) >> bitcast<u32>(0)) & 1) != 0));
    let x_2202 : i32 = GLF_live5icoord_1.y;
    let x_2205 : i32 = GLF_live5icoord_1.y;
    let x_2208 : i32 = GLF_live5icoord_1.y;
    GLF_live5G_1 = select(-1, 0, ((clamp(vec2<i32>(x_2202, 1), vec2<i32>(x_2205, 1), vec2<i32>(x_2208, 1)).x & 2) != 0));
    let x_2217 : i32 = GLF_live5icoord_1.y;
    GLF_live5H_1 = select(-1, 0, ((x_2217 & 4) != 0));
    let x_2223 : i32 = GLF_live5icoord_1.y;
    GLF_live5I_1 = select(-1, 0, ((x_2223 & 8) != 0));
    let x_2229 : i32 = GLF_live5icoord_1.y;
    GLF_live5J_1 = select(-1, 0, ((x_2229 & 16) != 0));
    let x_2234 : i32 = GLF_live5A_1;
    let x_2235 : i32 = GLF_live5C_1;
    let x_2238 : i32 = GLF_live5D_1;
    let x_2241 : i32 = GLF_live5E_1;
    let x_2244 : i32 = GLF_live5F_1;
    let x_2246 : i32 = GLF_live5G_1;
    let x_2248 : i32 = GLF_live5H_1;
    let x_2250 : i32 = GLF_live5I_1;
    let x_2253 : i32 = GLF_live5J_1;
    let x_2256 : i32 = GLF_live5A_1;
    let x_2257 : i32 = GLF_live5C_1;
    let x_2260 : i32 = GLF_live5D_1;
    let x_2263 : i32 = GLF_live5E_1;
    let x_2266 : i32 = GLF_live5F_1;
    let x_2268 : i32 = GLF_live5G_1;
    let x_2270 : i32 = GLF_live5H_1;
    let x_2272 : i32 = GLF_live5I_1;
    let x_2275 : i32 = GLF_live5J_1;
    let x_2279 : i32 = GLF_live5B_1;
    let x_2280 : i32 = GLF_live5C_1;
    let x_2283 : i32 = GLF_live5D_1;
    let x_2286 : i32 = GLF_live5E_1;
    let x_2288 : i32 = GLF_live5E_1;
    let x_2292 : i32 = GLF_live5F_1;
    let x_2294 : i32 = GLF_live5G_1;
    let x_2296 : i32 = GLF_live5H_1;
    let x_2298 : i32 = GLF_live5I_1;
    let x_2302 : i32 = GLF_live5J_1;
    let x_2307 : i32 = GLF_live5A_1;
    let x_2309 : i32 = GLF_live5C_1;
    let x_2311 : i32 = GLF_live5D_1;
    let x_2314 : i32 = GLF_live5E_1;
    let x_2317 : i32 = GLF_live5F_1;
    let x_2319 : i32 = GLF_live5H_1;
    let x_2322 : i32 = GLF_live5I_1;
    let x_2324 : i32 = GLF_live5J_1;
    let x_2328 : i32 = GLF_live5A_1;
    let x_2329 : i32 = GLF_live5B_1;
    let x_2332 : i32 = GLF_live5D_1;
    let x_2335 : i32 = GLF_live5E_1;
    let x_2338 : i32 = GLF_live5G_1;
    let x_2340 : i32 = GLF_live5H_1;
    let x_2343 : i32 = GLF_live5I_1;
    let x_2345 : i32 = GLF_live5J_1;
    let x_2348 : i32 = GLF_live5A_1;
    let x_2349 : i32 = GLF_live5B_1;
    let x_2352 : i32 = GLF_live5D_1;
    let x_2355 : i32 = GLF_live5E_1;
    let x_2358 : i32 = GLF_live5G_1;
    let x_2360 : i32 = GLF_live5H_1;
    let x_2363 : i32 = GLF_live5I_1;
    let x_2365 : i32 = GLF_live5J_1;
    GLF_live5res_1 = (((max(((((((((x_2234 | ~(x_2235)) | ~(x_2238)) | ~(x_2241)) | x_2244) | x_2246) | x_2248) | ~(x_2250)) | ~(x_2253)), ((((((((x_2256 | ~(x_2257)) | ~(x_2260)) | ~(x_2263)) | x_2266) | x_2268) | x_2270) | ~(x_2272)) | ~(x_2275))) & ((((((((x_2279 | ~(x_2280)) | ~(x_2283)) | max(~(x_2286), ~(x_2288))) | x_2292) | x_2294) | x_2296) | ~(x_2298)) | ~(select(x_2302, 10, false)))) & (((((((~(x_2307) | x_2309) | ~(x_2311)) | ~(x_2314)) | x_2317) | ~(x_2319)) | x_2322) | ~(x_2324))) & (0 | min((((((((x_2328 | ~(x_2329)) | ~(x_2332)) | ~(x_2335)) | x_2338) | ~(x_2340)) | x_2343) | ~(x_2345)), (((((((x_2348 | ~(x_2349)) | ~(x_2352)) | ~(x_2355)) | x_2358) | ~(x_2360)) | x_2363) | ~(x_2365)))));
    let x_2371 : i32 = GLF_live5A_1;
    let x_2372 : i32 = GLF_live5B_1;
    let x_2376 : i32 = GLF_live5C_1;
    let x_2379 : i32 = GLF_live5D_1;
    let x_2381 : i32 = GLF_live5E_1;
    let x_2383 : i32 = GLF_live5E_1;
    let x_2387 : i32 = GLF_live5F_1;
    let x_2389 : i32 = GLF_live5G_1;
    let x_2391 : i32 = GLF_live5H_1;
    let x_2394 : i32 = GLF_live5I_1;
    let x_2396 : i32 = GLF_live5J_1;
    let x_2397 : i32 = GLF_live5J_1;
    let x_2401 : i32 = GLF_live5B_1;
    let x_2402 : i32 = GLF_live5C_1;
    let x_2405 : i32 = GLF_live5D_1;
    let x_2406 : i32 = GLF_live5D_1;
    let x_2410 : i32 = GLF_live5E_1;
    let x_2413 : i32 = GLF_live5F_1;
    let x_2416 : i32 = GLF_live5G_1;
    let x_2419 : i32 = GLF_live5H_1;
    let x_2421 : i32 = GLF_live5I_1;
    let x_2424 : i32 = GLF_live5J_1;
    let x_2428 : i32 = GLF_live5A_1;
    let x_2429 : i32 = GLF_live5C_1;
    let x_2431 : i32 = GLF_live5D_1;
    let x_2434 : i32 = GLF_live5E_1;
    let x_2437 : i32 = GLF_live5G_1;
    let x_2440 : i32 = GLF_live5H_1;
    let x_2442 : i32 = GLF_live5I_1;
    let x_2444 : i32 = GLF_live5J_1;
    let x_2448 : i32 = GLF_live5A_1;
    let x_2449 : i32 = GLF_live5C_1;
    let x_2451 : i32 = GLF_live5D_1;
    let x_2454 : i32 = GLF_live5E_1;
    let x_2457 : i32 = GLF_live5F_1;
    let x_2460 : i32 = GLF_live5H_1;
    let x_2462 : i32 = GLF_live5I_1;
    let x_2464 : i32 = GLF_live5A_1;
    let x_2465 : i32 = GLF_live5C_1;
    let x_2467 : i32 = GLF_live5D_1;
    let x_2470 : i32 = GLF_live5E_1;
    let x_2473 : i32 = GLF_live5F_1;
    let x_2476 : i32 = GLF_live5H_1;
    let x_2478 : i32 = GLF_live5I_1;
    let x_2482 : i32 = GLF_live5J_1;
    let x_2486 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_2486 & ((((((((((((((x_2371 | x_2372) | 0) / 1) | ~(x_2376)) | x_2379) | ~(min((x_2381 / 1), x_2383))) | x_2387) | x_2389) | ~(x_2391)) | x_2394) | ~((x_2396 | x_2397))) & ((1 * (((((((x_2401 | ~(x_2402)) | ~((x_2405 | x_2406))) | ~(x_2410)) | ~(x_2413)) | ~(x_2416)) | x_2419) | x_2421)) | ~(x_2424))) & (((((((x_2428 | x_2429) | ~(x_2431)) | ~(x_2434)) | ~(x_2437)) | x_2440) | x_2442) | ~(x_2444))) & ((max(((((((x_2448 | x_2449) | ~(x_2451)) | ~(x_2454)) | ~(x_2457)) | x_2460) | x_2462), ((((((x_2464 | x_2465) | ~(x_2467)) | ~(x_2470)) | ~(x_2473)) | x_2476) | x_2478)) / 1) | ~(x_2482))));
    let x_2488 : i32 = GLF_live5A_1;
    let x_2489 : i32 = GLF_live5B_1;
    let x_2491 : i32 = GLF_live5C_1;
    let x_2494 : i32 = GLF_live5D_1;
    let x_2496 : i32 = GLF_live5E_1;
    let x_2499 : i32 = GLF_live5G_1;
    let x_2502 : i32 = GLF_live5H_1;
    let x_2504 : i32 = GLF_live5I_1;
    let x_2506 : i32 = GLF_live5J_1;
    let x_2509 : i32 = GLF_live5A_1;
    let x_2511 : i32 = GLF_live5C_1;
    let x_2513 : i32 = GLF_live5D_1;
    let x_2515 : i32 = GLF_live5E_1;
    let x_2518 : i32 = GLF_live5G_1;
    let x_2521 : i32 = GLF_live5H_1;
    let x_2523 : i32 = GLF_live5I_1;
    let x_2525 : i32 = GLF_live5J_1;
    let x_2531 : i32 = GLF_live5A_1;
    let x_2533 : i32 = GLF_live5B_1;
    let x_2536 : i32 = GLF_live5C_1;
    let x_2539 : i32 = GLF_live5D_1;
    let x_2542 : i32 = GLF_live5E_1;
    let x_2544 : i32 = GLF_live5G_1;
    let x_2547 : i32 = GLF_live5H_1;
    let x_2549 : i32 = GLF_live5I_1;
    let x_2551 : i32 = GLF_live5J_1;
    let x_2560 : i32 = GLF_live5A_1;
    let x_2561 : i32 = GLF_live5B_1;
    let x_2564 : i32 = GLF_live5D_1;
    let x_2566 : i32 = GLF_live5E_1;
    let x_2569 : i32 = GLF_live5G_1;
    let x_2571 : i32 = GLF_live5H_1;
    let x_2573 : i32 = GLF_live5I_1;
    let x_2575 : i32 = GLF_live5J_1;
    let x_2579 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_2579 & ((~(~((((((((((x_2488 | x_2489) | ~(x_2491)) | x_2494) | ~(x_2496)) | ~(x_2499)) | x_2502) | x_2504) | ~(x_2506)) & (((((((~(x_2509) | x_2511) | x_2513) | ~(x_2515)) | ~(x_2518)) | x_2521) | x_2523) | ~(x_2525))))) & ((((((((~(x_2531) | ~(x_2533)) | ~(x_2536)) | ~(x_2539)) | x_2542) | ~(x_2544)) | x_2547) | x_2549) | ~(~(~(vec2<i32>((x_2551 / 1), 1).x))))) & (((((((x_2560 | ~(x_2561)) | x_2564) | ~(x_2566)) | x_2569) | x_2571) | x_2573) | ~(x_2575))));
    let x_2582 : f32 = x_168.injectionSwitch.x;
    let x_2584 : f32 = x_168.injectionSwitch.y;
    if ((x_2582 > x_2584)) {
      x_GLF_color = vec4<f32>(724.851013184, 85.599998474, 268.334014893, -7.0);
    }
    let x_2593 : i32 = GLF_live5A_1;
    let x_2595 : i32 = GLF_live5B_1;
    let x_2597 : i32 = GLF_live5C_1;
    let x_2600 : i32 = GLF_live5D_1;
    let x_2602 : i32 = GLF_live5E_1;
    let x_2605 : i32 = GLF_live5G_1;
    let x_2607 : i32 = GLF_live5H_1;
    let x_2609 : i32 = GLF_live5I_1;
    let x_2611 : i32 = GLF_live5J_1;
    let x_2613 : i32 = ((((((((~(x_2593) | x_2595) | ~(x_2597)) | x_2600) | ~(x_2602)) | x_2605) | x_2607) | x_2609) | ~(x_2611));
    let x_2614 : i32 = GLF_live5A_1;
    let x_2615 : i32 = GLF_live5B_1;
    let x_2618 : i32 = GLF_live5D_1;
    let x_2620 : i32 = ((x_2614 | ~(x_2615)) | ~(x_2618));
    if (false) {
      x_2621 = 71398;
    } else {
      let x_2626 : i32 = GLF_live5A_1;
      let x_2627 : i32 = GLF_live5B_1;
      let x_2630 : i32 = GLF_live5D_1;
      x_2621 = ((x_2626 | ~(x_2627)) | ~(x_2630));
    }
    let x_2633 : i32 = x_2621;
    let x_2634 : i32 = GLF_live5A_1;
    let x_2635 : i32 = GLF_live5B_1;
    let x_2638 : i32 = GLF_live5D_1;
    let x_2642 : i32 = GLF_live5E_1;
    let x_2644 : i32 = GLF_live5G_1;
    let x_2647 : f32 = x_168.injectionSwitch.y;
    let x_2650 : i32 = GLF_live5H_1;
    let x_2652 : i32 = GLF_live5I_1;
    let x_2654 : i32 = GLF_live5J_1;
    let x_2658 : i32 = GLF_live5A_1;
    let x_2659 : i32 = GLF_live5C_1;
    let x_2662 : i32 = GLF_live5D_1;
    let x_2665 : i32 = GLF_live5E_1;
    let x_2667 : i32 = GLF_live5F_1;
    let x_2669 : i32 = GLF_live5G_1;
    let x_2671 : i32 = GLF_live5H_1;
    let x_2673 : i32 = GLF_live5I_1;
    let x_2675 : i32 = GLF_live5J_1;
    let x_2679 : i32 = GLF_live5A_1;
    let x_2681 : i32 = GLF_live5C_1;
    let x_2683 : i32 = GLF_live5D_1;
    let x_2686 : i32 = GLF_live5E_1;
    let x_2688 : i32 = GLF_live5F_1;
    let x_2690 : i32 = GLF_live5G_1;
    let x_2692 : i32 = GLF_live5H_1;
    let x_2694 : i32 = GLF_live5I_1;
    let x_2700 : i32 = GLF_live5J_1;
    let x_2704 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_2704 & (((x_2613 & ((((((clamp(x_2620, x_2633, ((x_2634 | ~(x_2635)) | ~(x_2638))) | x_2642) | x_2644) / i32(x_2647)) | x_2650) | x_2652) | ~(x_2654))) & ((((((((x_2658 | ~(x_2659)) | ~(x_2662)) | x_2665) | x_2667) | x_2669) | x_2671) | x_2673) | ~(x_2675))) & ((((((((~(x_2679) | x_2681) | ~(x_2683)) | x_2686) | x_2688) | x_2690) | x_2692) | ((vec4<i32>(x_2694, 1, 0, 0) | vec4<i32>(0, 0, 0, 0))).x) | ~(x_2700))));
    let x_2706 : i32 = GLF_live5A_1;
    let x_2708 : i32 = GLF_live5B_1;
    let x_2711 : i32 = GLF_live5C_1;
    let x_2713 : i32 = GLF_live5D_1;
    let x_2715 : i32 = GLF_live5D_1;
    let x_2720 : i32 = GLF_live5E_1;
    let x_2723 : i32 = GLF_live5F_1;
    let x_2726 : i32 = GLF_live5G_1;
    let x_2729 : i32 = GLF_live5H_1;
    let x_2732 : i32 = GLF_live5I_1;
    let x_2735 : i32 = GLF_live5J_1;
    let x_2737 : i32 = GLF_live5A_1;
    let x_2738 : i32 = GLF_live5B_1;
    let x_2741 : i32 = GLF_live5C_1;
    let x_2743 : i32 = GLF_live5D_1;
    let x_2745 : i32 = GLF_live5E_1;
    let x_2748 : i32 = GLF_live5F_1;
    let x_2751 : i32 = GLF_live5G_1;
    let x_2754 : i32 = GLF_live5H_1;
    let x_2757 : i32 = GLF_live5I_1;
    let x_2760 : i32 = GLF_live5J_1;
    let x_2762 : i32 = ((((((((((~(x_2706) | ~(x_2708)) | x_2711) | (max(~(x_2713), ~(x_2715)) / 1)) | ~(x_2720)) | ~(x_2723)) | ~(x_2726)) | ~(x_2729)) | ~(x_2732)) | x_2735) & (((((((((x_2737 | ~(x_2738)) | x_2741) | x_2743) | ~(x_2745)) | ~(x_2748)) | ~(x_2751)) | ~(x_2754)) | ~(x_2757)) | x_2760));
    let x_2763 : i32 = GLF_live5A_1;
    let x_2765 : i32 = GLF_live5B_1;
    let x_2767 : i32 = GLF_live5C_1;
    let x_2769 : i32 = GLF_live5D_1;
    let x_2771 : i32 = GLF_live5E_1;
    let x_2774 : i32 = GLF_live5G_1;
    let x_2777 : i32 = GLF_live5H_1;
    let x_2779 : i32 = ((((((~(x_2763) | x_2765) | x_2767) | x_2769) | ~(x_2771)) | ~(x_2774)) | ~(x_2777));
    if (true) {
      let x_2783 : i32 = GLF_live5I_1;
      let x_2784 : i32 = GLF_live5I_1;
      x_2780 = min(x_2783, x_2784);
    } else {
      let x_2787 : i32 = GLF_live5G_1;
      x_2780 = x_2787;
    }
    let x_2788 : i32 = x_2780;
    let x_2791 : i32 = GLF_live5J_1;
    let x_2794 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_2794 & (x_2762 & ((x_2779 | ~(x_2788)) | x_2791)));
    let x_2796 : i32 = GLF_live5C_1;
    let x_2798 : i32 = GLF_live5D_1;
    let x_2801 : i32 = GLF_live5E_1;
    let x_2803 : i32 = GLF_live5F_1;
    let x_2806 : i32 = GLF_live5G_1;
    let x_2809 : i32 = GLF_live5H_1;
    let x_2812 : i32 = GLF_live5I_1;
    let x_2815 : i32 = GLF_live5J_1;
    let x_2817 : i32 = GLF_live5A_1;
    let x_2819 : i32 = GLF_live5C_1;
    let x_2822 : i32 = GLF_live5D_1;
    let x_2825 : i32 = GLF_live5E_1;
    let x_2827 : i32 = GLF_live5G_1;
    let x_2830 : i32 = GLF_live5H_1;
    let x_2833 : i32 = GLF_live5I_1;
    let x_2836 : i32 = GLF_live5J_1;
    let x_2839 : i32 = GLF_live5B_1;
    let x_2840 : i32 = GLF_live5D_1;
    let x_2843 : i32 = GLF_live5E_1;
    let x_2845 : i32 = GLF_live5F_1;
    let x_2848 : i32 = GLF_live5H_1;
    let x_2851 : i32 = GLF_live5I_1;
    let x_2854 : i32 = GLF_live5J_1;
    let x_2858 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_2858 & ((((((((((~(x_2796) | ~(x_2798)) | x_2801) | ~(x_2803)) | ~(x_2806)) | ~(x_2809)) | ~(x_2812)) | x_2815) & (((((((~(x_2817) | ~(x_2819)) | ~(x_2822)) | x_2825) | ~(x_2827)) | ~(x_2830)) | ~(x_2833)) | x_2836)) & ((((((x_2839 | ~(x_2840)) | x_2843) | ~(x_2845)) | ~(x_2848)) | ~(x_2851)) | x_2854)) >> bitcast<u32>(0)));
    let x_2860 : i32 = GLF_live5A_1;
    let x_2861 : i32 = GLF_live5B_1;
    let x_2863 : i32 = GLF_live5C_1;
    let x_2865 : i32 = GLF_live5D_1;
    let x_2868 : i32 = GLF_live5E_1;
    let x_2870 : i32 = GLF_live5G_1;
    let x_2873 : i32 = GLF_live5H_1;
    let x_2876 : i32 = GLF_live5I_1;
    let x_2879 : i32 = GLF_live5J_1;
    let x_2881 : i32 = GLF_live5B_1;
    let x_2882 : i32 = GLF_live5C_1;
    let x_2884 : i32 = GLF_live5D_1;
    let x_2886 : i32 = GLF_live5E_1;
    let x_2889 : i32 = GLF_live5F_1;
    let x_2891 : i32 = GLF_live5G_1;
    let x_2894 : i32 = GLF_live5H_1;
    let x_2897 : i32 = GLF_live5I_1;
    let x_2900 : i32 = GLF_live5J_1;
    let x_2903 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_2903 & (((((((((x_2860 | x_2861) | x_2863) | ~(x_2865)) | x_2868) | ~(x_2870)) | ~(x_2873)) | ~(x_2876)) | x_2879) & ((((((((x_2881 | x_2882) | x_2884) | ~(x_2886)) | x_2889) | ~(x_2891)) | ~(x_2894)) | ~(x_2897)) | x_2900)));
    if (false) {
      x_GLF_color = vec4<f32>(0.0, 0.0, 0.0, 0.0);
    }
    let x_2907 : i32 = GLF_live5A_1;
    let x_2908 : i32 = GLF_live5A_1;
    let x_2909 : i32 = GLF_live5A_1;
    let x_2911 : i32 = GLF_live5C_1;
    let x_2914 : i32 = GLF_live5D_1;
    let x_2916 : i32 = GLF_live5E_1;
    let x_2918 : i32 = GLF_live5F_1;
    let x_2920 : i32 = GLF_live5G_1;
    let x_2923 : i32 = GLF_live5H_1;
    let x_2926 : i32 = GLF_live5I_1;
    let x_2929 : i32 = GLF_live5J_1;
    let x_2933 : i32 = GLF_live5B_1;
    let x_2934 : i32 = GLF_live5C_1;
    let x_2937 : i32 = GLF_live5D_1;
    let x_2939 : i32 = GLF_live5E_1;
    let x_2941 : i32 = GLF_live5F_1;
    let x_2943 : i32 = GLF_live5G_1;
    let x_2946 : i32 = GLF_live5H_1;
    let x_2949 : i32 = GLF_live5J_1;
    let x_2952 : i32 = GLF_live5res_1;
    let x_2953 : i32 = (x_2952 & (((((((((clamp(x_2907, x_2908, x_2909) | ~(x_2911)) | x_2914) | x_2916) | x_2918) | ~(x_2920)) | ~(x_2923)) | ~(x_2926)) | ~(~(x_2929))) & (((((((x_2933 | ~(x_2934)) | x_2937) | x_2939) | x_2941) | ~(x_2943)) | ~(x_2946)) | x_2949)));
    GLF_live5res_1 = x_2953;
    let x_2955 : i32 = ~(~(x_2953));
    let x_2956 : i32 = GLF_live5A_1;
    let x_2958 : i32 = GLF_live5B_1;
    let x_2961 : i32 = GLF_live5C_1;
    let x_2963 : i32 = GLF_live5D_1;
    let x_2965 : i32 = GLF_live5E_1;
    let x_2967 : i32 = GLF_live5F_1;
    let x_2969 : i32 = GLF_live5G_1;
    let x_2972 : i32 = GLF_live5H_1;
    let x_2974 : i32 = GLF_live5H_1;
    let x_2978 : i32 = GLF_live5I_1;
    let x_2981 : i32 = GLF_live5J_1;
    let x_2983 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_2983 & (((((((((~(x_2956) | ~(x_2958)) | x_2961) | x_2963) | x_2965) | x_2967) | ~(x_2969)) | max(~(x_2972), ~(x_2974))) | ~(x_2978)) | x_2981));
    let x_2985 : i32 = GLF_live5A_1;
    let x_2986 : i32 = GLF_live5B_1;
    let x_2988 : i32 = GLF_live5C_1;
    let x_2991 : i32 = GLF_live5D_1;
    let x_2994 : i32 = GLF_live5E_1;
    let x_2996 : i32 = GLF_live5G_1;
    let x_2998 : i32 = GLF_live5H_1;
    let x_3002 : f32 = x_168.injectionSwitch.y;
    let x_3006 : i32 = GLF_live5A_1;
    let x_3007 : i32 = GLF_live5B_1;
    let x_3009 : i32 = GLF_live5C_1;
    let x_3012 : i32 = GLF_live5D_1;
    let x_3015 : i32 = GLF_live5E_1;
    let x_3017 : i32 = GLF_live5G_1;
    let x_3019 : i32 = GLF_live5H_1;
    let x_3023 : i32 = GLF_live5I_1;
    let x_3026 : i32 = GLF_live5J_1;
    let x_3028 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3028 & (((vec2<i32>(((((((x_2985 | x_2986) | ~(x_2988)) | ~(x_2991)) | x_2994) | x_2996) | ~(x_2998)), i32(x_3002)).x | ((((((x_3006 | x_3007) | ~(x_3009)) | ~(x_3012)) | x_3015) | x_3017) | ~(x_3019))) | ~(x_3023)) | x_3026));
    let x_3030 : i32 = GLF_live5B_1;
    let x_3032 : i32 = GLF_live5D_1;
    let x_3034 : i32 = GLF_live5E_1;
    let x_3036 : i32 = GLF_live5F_1;
    let x_3040 : i32 = GLF_live5G_1;
    let x_3042 : i32 = GLF_live5H_1;
    let x_3045 : i32 = GLF_live5I_1;
    let x_3049 : i32 = GLF_live5J_1;
    let x_3051 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3051 & (((((((((~(x_3030) | x_3032) | x_3034) | ~(x_3036)) - 0) | x_3040) | ~(x_3042)) | ~(x_3045)) >> bitcast<u32>(0)) | x_3049));
    let x_3053 : i32 = GLF_live5B_1;
    let x_3055 : i32 = GLF_live5C_1;
    let x_3057 : i32 = GLF_live5D_1;
    let x_3063 : i32 = GLF_live5E_1;
    let x_3065 : i32 = GLF_live5F_1;
    let x_3067 : i32 = GLF_live5G_1;
    let x_3069 : i32 = GLF_live5H_1;
    let x_3072 : i32 = GLF_live5I_1;
    let x_3075 : i32 = GLF_live5J_1;
    let x_3077 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3077 & ((((((~((0 ^ ~(((~(x_3053) | x_3055) | ~(x_3057))))) | x_3063) | x_3065) | x_3067) | ~(x_3069)) | ~(x_3072)) | x_3075));
    let x_3079 : i32 = GLF_live5A_1;
    let x_3081 : i32 = GLF_live5B_1;
    let x_3087 : i32 = GLF_live5C_1;
    let x_3090 : i32 = GLF_live5D_1;
    let x_3092 : i32 = GLF_live5E_1;
    let x_3094 : i32 = GLF_live5F_1;
    let x_3096 : i32 = GLF_live5G_1;
    let x_3098 : i32 = GLF_live5I_1;
    let x_3101 : i32 = GLF_live5J_1;
    let x_3103 : i32 = GLF_live5B_1;
    let x_3105 : i32 = GLF_live5C_1;
    let x_3108 : i32 = GLF_live5D_1;
    let x_3110 : i32 = GLF_live5E_1;
    let x_3112 : i32 = GLF_live5F_1;
    let x_3115 : i32 = GLF_live5G_1;
    let x_3118 : i32 = GLF_live5H_1;
    let x_3120 : i32 = GLF_live5I_1;
    let x_3123 : i32 = GLF_live5J_1;
    let x_3128 : i32 = GLF_live5res_1;
    let x_3129 : i32 = (x_3128 & (((((((((~(x_3079) | ((0 ^ (~(x_3081) | 0)) >> bitcast<u32>(0))) | ~(x_3087)) | x_3090) | x_3092) | x_3094) | x_3096) | ~(x_3098)) | x_3101) & vec2<i32>(((((((((~(x_3103) | ~(x_3105)) | x_3108) | x_3110) | ~(x_3112)) | ~(x_3115)) | x_3118) | ~(x_3120)) | x_3123), 1).x));
    GLF_live5res_1 = x_3129;
    let x_3131 : i32 = ~(~(x_3129));
    let x_3132 : i32 = GLF_live5A_1;
    let x_3134 : i32 = GLF_live5B_1;
    let x_3136 : i32 = GLF_live5C_1;
    let x_3138 : i32 = GLF_live5D_1;
    let x_3140 : i32 = GLF_live5E_1;
    let x_3142 : i32 = GLF_live5H_1;
    let x_3144 : i32 = GLF_live5I_1;
    let x_3147 : i32 = GLF_live5J_1;
    let x_3149 : i32 = GLF_live5B_1;
    let x_3150 : i32 = GLF_live5C_1;
    let x_3152 : i32 = GLF_live5D_1;
    let x_3154 : i32 = GLF_live5E_1;
    let x_3156 : i32 = GLF_live5F_1;
    let x_3158 : i32 = GLF_live5G_1;
    let x_3161 : i32 = GLF_live5H_1;
    let x_3163 : i32 = GLF_live5I_1;
    let x_3166 : i32 = GLF_live5J_1;
    let x_3170 : i32 = GLF_live5A_1;
    let x_3171 : i32 = GLF_live5B_1;
    let x_3173 : i32 = GLF_live5C_1;
    let x_3175 : i32 = GLF_live5D_1;
    let x_3178 : i32 = GLF_live5E_1;
    let x_3180 : i32 = GLF_live5F_1;
    let x_3182 : i32 = GLF_live5G_1;
    let x_3184 : i32 = GLF_live5H_1;
    let x_3186 : i32 = GLF_live5I_1;
    let x_3189 : i32 = GLF_live5J_1;
    let x_3192 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3192 & (((((((((~(x_3132) | x_3134) | x_3136) | x_3138) | x_3140) | x_3142) | ~(x_3144)) | x_3147) & (0 ^ ((((((((x_3149 | x_3150) | x_3152) | x_3154) | x_3156) | ~(x_3158)) | x_3161) | ~(x_3163)) | x_3166))) & (((((((((x_3170 | x_3171) | x_3173) | ~(x_3175)) | x_3178) | x_3180) | x_3182) | x_3184) | ~(x_3186)) | x_3189)));
    let x_3194 : i32 = GLF_live5A_1;
    let x_3195 : i32 = GLF_live5A_1;
    let x_3197 : i32 = GLF_live5A_1;
    let x_3198 : i32 = GLF_live5A_1;
    let x_3200 : i32 = GLF_live5A_1;
    let x_3201 : i32 = GLF_live5A_1;
    let x_3204 : i32 = GLF_live5B_1;
    let x_3207 : i32 = GLF_live5C_1;
    let x_3209 : i32 = GLF_live5D_1;
    let x_3211 : i32 = GLF_live5E_1;
    let x_3213 : i32 = GLF_live5F_1;
    let x_3215 : i32 = GLF_live5G_1;
    let x_3217 : i32 = GLF_live5H_1;
    let x_3219 : i32 = GLF_live5I_1;
    let x_3222 : i32 = GLF_live5J_1;
    let x_3224 : i32 = GLF_live5B_1;
    let x_3225 : i32 = GLF_live5B_1;
    let x_3226 : i32 = GLF_live5B_1;
    let x_3228 : i32 = GLF_live5B_1;
    let x_3231 : i32 = GLF_live5D_1;
    let x_3233 : i32 = GLF_live5E_1;
    let x_3235 : i32 = GLF_live5F_1;
    let x_3238 : i32 = GLF_live5G_1;
    let x_3241 : i32 = GLF_live5H_1;
    let x_3244 : i32 = GLF_live5I_1;
    let x_3246 : i32 = GLF_live5J_1;
    let x_3249 : i32 = GLF_live5A_1;
    let x_3251 : i32 = GLF_live5B_1;
    let x_3254 : i32 = GLF_live5C_1;
    let x_3256 : i32 = GLF_live5E_1;
    let x_3259 : i32 = GLF_live5G_1;
    let x_3262 : i32 = GLF_live5H_1;
    let x_3265 : i32 = GLF_live5I_1;
    let x_3267 : i32 = GLF_live5J_1;
    let x_3271 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3271 & (((((((((((clamp(min(x_3194, x_3195), min(x_3197, x_3198), min(x_3200, x_3201)) | ~(x_3204)) | x_3207) | x_3209) | x_3211) | x_3213) | x_3215) | x_3217) | ~(x_3219)) | x_3222) & (((((((~(min(clamp(x_3224, x_3225, x_3226), x_3228)) | x_3231) | x_3233) | ~(x_3235)) | ~(x_3238)) | ~(x_3241)) | x_3244) | x_3246)) & (((((((~(x_3249) | ~(x_3251)) | x_3254) | ~(x_3256)) | ~(x_3259)) | ~(x_3262)) | x_3265) | ~(x_3267))));
    let x_3273 : i32 = GLF_live5A_1;
    let x_3275 : i32 = GLF_live5D_1;
    let x_3278 : i32 = GLF_live5E_1;
    let x_3281 : i32 = GLF_live5F_1;
    let x_3284 : i32 = GLF_live5G_1;
    let x_3286 : i32 = GLF_live5H_1;
    let x_3289 : i32 = GLF_live5I_1;
    let x_3291 : i32 = GLF_live5J_1;
    let x_3292 : i32 = GLF_live5J_1;
    let x_3295 : i32 = (((((((~(x_3273) | ~(x_3275)) | ~(x_3278)) | ~(x_3281)) | x_3284) | ~(x_3286)) | x_3289) | ~((x_3291 | x_3292)));
    if (false) {
      x_3296 = 1301;
    } else {
      let x_3301 : i32 = GLF_live5A_1;
      let x_3302 : i32 = GLF_live5B_1;
      let x_3304 : i32 = GLF_live5A_1;
      let x_3305 : i32 = GLF_live5B_1;
      let x_3308 : i32 = GLF_live5E_1;
      let x_3311 : i32 = GLF_live5F_1;
      let x_3314 : i32 = GLF_live5G_1;
      let x_3317 : i32 = GLF_live5H_1;
      x_3296 = ((((((x_3301 | x_3302) | (x_3304 | x_3305)) | ~(x_3308)) | ~(x_3311)) | ~(x_3314)) | x_3317);
    }
    let x_3319 : i32 = x_3296;
    let x_3320 : i32 = GLF_live5I_1;
    let x_3322 : i32 = GLF_live5J_1;
    let x_3326 : i32 = GLF_live5B_1;
    let x_3328 : i32 = GLF_live5C_1;
    let x_3330 : i32 = GLF_live5D_1;
    let x_3332 : i32 = GLF_live5E_1;
    let x_3335 : i32 = GLF_live5F_1;
    let x_3337 : i32 = GLF_live5B_1;
    let x_3339 : i32 = GLF_live5C_1;
    let x_3341 : i32 = GLF_live5D_1;
    let x_3343 : i32 = GLF_live5E_1;
    let x_3346 : i32 = GLF_live5F_1;
    let x_3349 : i32 = GLF_live5G_1;
    let x_3352 : i32 = GLF_live5H_1;
    let x_3354 : i32 = GLF_live5I_1;
    let x_3356 : i32 = GLF_live5J_1;
    let x_3360 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3360 & ((x_3295 & ((x_3319 | x_3320) | ~(x_3322))) & (((((((((~(x_3326) | x_3328) | x_3330) | ~(x_3332)) | x_3335) | ((((~(x_3337) | x_3339) | x_3341) | ~(x_3343)) | x_3346)) | ~(x_3349)) | x_3352) | x_3354) | ~(x_3356))));
    let x_3362 : i32 = GLF_live5B_1;
    let x_3364 : i32 = GLF_live5C_1;
    let x_3365 : i32 = GLF_live5C_1;
    let x_3369 : i32 = GLF_live5D_1;
    let x_3372 : i32 = GLF_live5E_1;
    let x_3374 : i32 = GLF_live5F_1;
    let x_3376 : i32 = GLF_live5G_1;
    let x_3379 : i32 = GLF_live5H_1;
    let x_3381 : i32 = GLF_live5I_1;
    let x_3383 : i32 = GLF_live5J_1;
    let x_3386 : i32 = GLF_live5A_1;
    let x_3388 : i32 = GLF_live5B_1;
    let x_3391 : i32 = GLF_live5C_1;
    let x_3394 : i32 = GLF_live5D_1;
    let x_3397 : i32 = GLF_live5G_1;
    let x_3399 : i32 = GLF_live5H_1;
    let x_3401 : i32 = GLF_live5I_1;
    let x_3403 : i32 = GLF_live5J_1;
    let x_3407 : i32 = GLF_live5C_1;
    let x_3409 : i32 = GLF_live5D_1;
    let x_3411 : i32 = GLF_live5E_1;
    let x_3415 : i32 = GLF_live5F_1;
    let x_3418 : i32 = GLF_live5G_1;
    let x_3420 : i32 = GLF_live5H_1;
    let x_3422 : i32 = GLF_live5H_1;
    let x_3425 : i32 = GLF_live5I_1;
    let x_3427 : i32 = GLF_live5J_1;
    let x_3431 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3431 & ((((((((((~(x_3362) | ~(min(x_3364, x_3365))) | ~(x_3369)) | x_3372) | x_3374) | ~(x_3376)) | x_3379) | x_3381) | ~(x_3383)) & ((((((((~(x_3386) | ~(x_3388)) | x_3391) >> bitcast<u32>(0)) | ~(x_3394)) | x_3397) | x_3399) | x_3401) | ~(x_3403))) & (((((((~(x_3407) | x_3409) | (~(x_3411) ^ 0)) | ~(x_3415)) | x_3418) | ((1 * x_3420) | x_3422)) | x_3425) | ~(x_3427))));
    let x_3433 : i32 = GLF_live5A_1;
    let x_3435 : i32 = GLF_live5B_1;
    let x_3437 : i32 = GLF_live5C_1;
    let x_3439 : i32 = GLF_live5E_1;
    let x_3441 : i32 = GLF_live5F_1;
    let x_3443 : i32 = GLF_live5G_1;
    let x_3445 : i32 = GLF_live5H_1;
    let x_3448 : i32 = GLF_live5I_1;
    let x_3451 : i32 = GLF_live5J_1;
    let x_3453 : i32 = GLF_live5A_1;
    let x_3455 : i32 = GLF_live5B_1;
    let x_3457 : i32 = GLF_live5D_1;
    let x_3459 : i32 = GLF_live5E_1;
    let x_3461 : i32 = GLF_live5G_1;
    let x_3464 : i32 = GLF_live5H_1;
    let x_3466 : i32 = GLF_live5I_1;
    let x_3469 : i32 = GLF_live5J_1;
    let x_3472 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3472 & (((((((((~(x_3433) | x_3435) | x_3437) | x_3439) | x_3441) | x_3443) | ~(x_3445)) | ~(x_3448)) | x_3451) & (((((((~(x_3453) | x_3455) | x_3457) | x_3459) | ~(x_3461)) | x_3464) | ~(x_3466)) | x_3469)));
    let x_3474 : i32 = GLF_live5A_1;
    let x_3475 : i32 = GLF_live5B_1;
    let x_3477 : i32 = GLF_live5C_1;
    let x_3480 : i32 = GLF_live5D_1;
    let x_3483 : i32 = GLF_live5E_1;
    let x_3486 : i32 = GLF_live5F_1;
    let x_3489 : i32 = GLF_live5H_1;
    let x_3492 : i32 = GLF_live5I_1;
    let x_3494 : i32 = GLF_live5J_1;
    let x_3497 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3497 & ((((((((x_3474 | x_3475) | ~(x_3477)) | ~(x_3480)) | ~(x_3483)) | ~(x_3486)) | ~(x_3489)) | x_3492) | ~(x_3494)));
    let x_3499 : i32 = GLF_live5A_1;
    let x_3501 : i32 = GLF_live5C_1;
    let x_3504 : i32 = GLF_live5E_1;
    let x_3507 : i32 = GLF_live5F_1;
    let x_3510 : i32 = GLF_live5G_1;
    let x_3512 : i32 = GLF_live5H_1;
    let x_3515 : i32 = GLF_live5I_1;
    let x_3517 : i32 = GLF_live5J_1;
    let x_3520 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3520 & (((((((~(x_3499) | ~(x_3501)) | ~(x_3504)) | ~(x_3507)) | x_3510) | ~(x_3512)) | x_3515) | ~(x_3517)));
    GLF_live8matrix_u = vec4<f32>(860.765014648, 5.099999905, -4496.701171875, 768.476989746);
    GLF_live8alpha1 = 544.169006348;
    GLF_live8u = 10;
    GLF_live8_looplimiter1 = 0;
    let x_3532 : i32 = GLF_live8_looplimiter1;
    if ((x_3532 >= 5)) {
    }
    let x_3536 : i32 = GLF_live8_looplimiter1;
    GLF_live8_looplimiter1 = (x_3536 + 1);
    let x_3538 : i32 = GLF_live8u;
    let x_3542 : f32 = GLF_live8matrix_u[clamp(x_3538, 0, 3)];
    let x_3544 : f32 = GLF_live8alpha1;
    GLF_live8alpha1 = (x_3544 + pow(x_3542, 2.0));
    let x_3546 : i32 = GLF_live5A_1;
    let x_3547 : i32 = GLF_live5B_1;
    let x_3551 : i32 = GLF_live5C_1;
    let x_3554 : i32 = GLF_live5D_1;
    let x_3556 : i32 = GLF_live5E_1;
    let x_3559 : i32 = GLF_live5F_1;
    let x_3562 : i32 = GLF_live5H_1;
    let x_3565 : i32 = GLF_live5I_1;
    let x_3567 : i32 = GLF_live5J_1;
    let x_3570 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3570 & (((((((((x_3546 | ~(x_3547)) * 1) | ~(x_3551)) | x_3554) | ~(x_3556)) | ~(x_3559)) | ~(x_3562)) | x_3565) | ~(x_3567)));
    let x_3572 : i32 = GLF_live5B_1;
    let x_3573 : i32 = GLF_live5C_1;
    let x_3576 : i32 = GLF_live5D_1;
    let x_3579 : i32 = GLF_live5B_1;
    let x_3580 : i32 = GLF_live5C_1;
    let x_3583 : i32 = GLF_live5D_1;
    let x_3586 : i32 = GLF_live5E_1;
    let x_3589 : i32 = GLF_live5F_1;
    let x_3592 : i32 = GLF_live5G_1;
    let x_3595 : i32 = GLF_live5H_1;
    let x_3598 : i32 = GLF_live5I_1;
    let x_3600 : i32 = GLF_live5J_1;
    let x_3603 : i32 = GLF_live5A_1;
    let x_3605 : i32 = GLF_live5B_1;
    let x_3608 : i32 = GLF_live5C_1;
    let x_3611 : i32 = GLF_live5D_1;
    let x_3613 : i32 = GLF_live5E_1;
    let x_3616 : i32 = GLF_live5F_1;
    let x_3618 : i32 = GLF_live5H_1;
    let x_3621 : i32 = GLF_live5I_1;
    let x_3623 : i32 = GLF_live5J_1;
    let x_3627 : i32 = GLF_live5B_1;
    let x_3629 : i32 = GLF_live5C_1;
    let x_3632 : i32 = GLF_live5D_1;
    let x_3634 : i32 = GLF_live5E_1;
    let x_3637 : i32 = GLF_live5F_1;
    let x_3639 : i32 = GLF_live5G_1;
    let x_3642 : i32 = GLF_live5H_1;
    let x_3645 : i32 = GLF_live5I_1;
    let x_3649 : i32 = GLF_live5J_1;
    let x_3653 : i32 = GLF_live5res_1;
    GLF_live5res_1 = (x_3653 & ((((((((min((0 | ((x_3572 | ~(x_3573)) | x_3576)), ((x_3579 | ~(x_3580)) | x_3583)) | ~(x_3586)) | ~(x_3589)) | ~(x_3592)) | ~(x_3595)) | x_3598) | ~(x_3600)) & ((((((((~(x_3603) | ~(x_3605)) | ~(x_3608)) | x_3611) | ~(x_3613)) | x_3616) | ~(x_3618)) | x_3621) | ~(x_3623))) & (vec3<i32>((((((((~(x_3627) | ~(x_3629)) | x_3632) | ~(x_3634)) | x_3637) | ~(x_3639)) | ~(x_3642)) | x_3645), 0, 1).x | ~(x_3649))));
    let x_3655 : i32 = GLF_live5res_1;
    let x_3657 : f32 = select(1.0, 0.0, (x_3655 == 0));
    let x_3658 : vec3<f32> = vec3<f32>(x_3657, x_3657, x_3657);
    GLF_live5_GLF_color = vec4<f32>(x_3658.x, x_3658.y, x_3658.z, 1.0);
    let x_3676 : f32 = x_168.injectionSwitch.x;
    GLF_live1A = array<f32, 50u>(996.244018555, 4953.091308594, -80971.0, -7.599999905, -2.200000048, 4673.297851562, 786.677978516, vec4<f32>(43.61000061, 1.0, 0.0, x_3676).x, -45.669998169, 6.5, 7.800000191, -27703.30078125, 43.939998627, 2.299999952, 4274.960449219, 2958.333496094, -35.209999084, -512.815979004, 1144.721191406, -9162.732421875, 996.244018555, -35.209999084, 786.677978516, 7.800000191, 43.61000061, -9162.732421875, -512.815979004, -80971.0, 2958.333496094, 6.5, 4953.091308594, -45.669998169, -7.599999905, -27703.30078125, 2.299999952, select(73248.0, transpose(transpose(mat2x2<f32>(vec2<f32>(4274.960449219, 0.0), vec2<f32>(0.0, 0.0))))[0u].x, true), 43.939998627, -2.200000048, 1144.721191406, 4673.297851562, 43.61000061, 786.677978516, -7.599999905, -2.200000048, 2958.333496094, -45.669998169, 2.299999952, 996.244018555, 1144.721191406, -512.815979004);
    let x_3701 : f32 = GLF_live1A[0];
    let x_3706 : f32 = x_3704.GLF_live1resolution.x;
    let x_3707 : f32 = (x_3701 / x_3706);
    let x_3709 : f32 = x_168.injectionSwitch.x;
    let x_3713 : f32 = GLF_live1A[(i32(x_3709) | 4)];
    let x_3715 : f32 = x_168.injectionSwitch.x;
    let x_3719 : f32 = GLF_live1A[(i32(x_3715) | 4)];
    let x_3721 : f32 = x_168.injectionSwitch.x;
    let x_3725 : f32 = GLF_live1A[(i32(x_3721) | 4)];
    let x_3727 : f32 = x_168.injectionSwitch.x;
    let x_3731 : f32 = GLF_live1A[(i32(x_3727) | 4)];
    let x_3732 : f32 = clamp(x_3719, x_3725, x_3731);
    if (false) {
      x_3733 = 3.400000095;
    } else {
      let x_3739 : f32 = x_168.injectionSwitch.x;
      let x_3743 : f32 = GLF_live1A[(i32(x_3739) | 4)];
      x_3733 = x_3743;
    }
    let x_3744 : f32 = x_3733;
    let x_3747 : f32 = x_3704.GLF_live1resolution.y;
    GLF_live1_GLF_color = vec4<f32>(x_3707, (clamp(x_3713, x_3732, x_3744) / x_3747), 1.0, 1.0);
  }
  return -1;
}

fn GLF_live9collision_vf2_vf4_(GLF_live9pos : ptr<function, vec2<f32>>, GLF_live9quad : ptr<function, vec4<f32>>) -> bool {
  let x_84 : f32 = (*(GLF_live9pos)).x;
  let x_86 : f32 = (*(GLF_live9pos)).x;
  let x_88 : f32 = (*(GLF_live9pos)).x;
  let x_92 : f32 = (*(GLF_live9quad)).x;
  if ((max(x_84, min(x_86, x_88)) < x_92)) {
    return false;
  }
  let x_100 : f32 = (*(GLF_live9pos)).y;
  let x_102 : f32 = (*(GLF_live9quad)).y;
  if (((x_100 < x_102) | false)) {
    return false;
  }
  let x_109 : f32 = (*(GLF_live9pos)).x;
  let x_111 : f32 = (*(GLF_live9quad)).x;
  let x_114 : f32 = (*(GLF_live9quad)).z;
  if ((x_109 > (x_111 + x_114))) {
    return false;
  }
  let x_121 : f32 = (*(GLF_live9pos)).y;
  let x_123 : f32 = (*(GLF_live9quad)).y;
  let x_126 : f32 = (*(GLF_live9quad)).w;
  if ((x_121 > (x_123 + x_126))) {
    return false;
  }
  return true;
}

fn main_1() {
  var treeIndex_1 : i32;
  var param_12 : BST;
  var param_13 : i32;
  var param_14 : i32;
  var param_15 : i32;
  var GLF_live10c : vec3<f32>;
  var GLF_live10_looplimiter1 : i32;
  var GLF_live10i_1 : i32;
  var param_16 : i32;
  var param_17 : i32;
  var param_18 : i32;
  var param_19 : i32;
  var param_20 : i32;
  var param_21 : i32;
  var param_22 : i32;
  var param_23 : i32;
  var GLF_live6pos : vec2<f32>;
  var param_24 : vec2<f32>;
  var param_25 : vec2<f32>;
  var param_26 : vec2<f32>;
  var param_27 : vec2<f32>;
  var GLF_live10thirty_two_1 : f32;
  var GLF_live10i_2 : i32;
  var GLF_live10result_1 : f32;
  var GLF_live3_looplimiter32 : i32;
  var param_28 : i32;
  var param_29 : i32;
  var GLF_live7pos : vec2<i32>;
  var GLF_live10c_1 : vec3<f32>;
  var GLF_live10i_3 : i32;
  var GLF_live7_looplimiter0 : i32;
  var indexable_4 : array<i32, 256u>;
  var indexable_5 : array<i32, 256u>;
  var GLF_live7p : f32;
  var indexable_6 : array<i32, 256u>;
  var GLF_live10i_4 : i32;
  var GLF_live10limit : f32;
  var GLF_live10result_2 : f32;
  var param_30 : i32;
  var param_31 : i32;
  var param_32 : i32;
  var param_33 : i32;
  var param_34 : i32;
  var param_35 : i32;
  var count : i32;
  var i : i32;
  var result : i32;
  var param_36 : i32;
  var GLF_live9pos_2 : vec2<f32>;
  var GLF_live9quad_1 : vec4<f32>;
  var GLF_live0data : array<vec3<f32>, 16u>;
  var GLF_live0sum : vec3<f32>;
  var GLF_live0i_1 : i32;
  var GLF_live0_looplimiter3 : i32;
  var GLF_live9i_1 : i32;
  var GLF_live9_looplimiter0_1 : i32;
  var GLF_live9res_1 : vec4<f32>;
  var GLF_live9pos_3 : vec2<f32>;
  var param_37 : vec2<f32>;
  var param_38 : vec4<f32>;
  var indexable_7 : array<vec4<f32>, 8u>;
  var indexable_8 : array<vec4<f32>, 8u>;
  var indexable_9 : array<vec4<f32>, 8u>;
  var indexable_10 : array<vec4<f32>, 8u>;
  var indexable_11 : array<vec4<f32>, 8u>;
  var indexable_12 : array<vec4<f32>, 8u>;
  var indexable_13 : array<vec4<f32>, 8u>;
  var indexable_14 : array<vec4<f32>, 16u>;
  var GLF_live0iteration : i32;
  var x_4533 : vec3<f32>;
  var x_4536 : vec3<f32>;
  var param_39 : i32;
  var GLF_live5icoord_2 : vec2<i32>;
  var GLF_live5A_2 : i32;
  var GLF_live5B_2 : i32;
  var GLF_live5C_2 : i32;
  var GLF_live5D_2 : i32;
  var GLF_live5E_2 : i32;
  var GLF_live5F_2 : i32;
  var GLF_live5G_2 : i32;
  var GLF_live5H_2 : i32;
  var GLF_live5I_2 : i32;
  var GLF_live5J_2 : i32;
  var GLF_live5res_2 : i32;
  var x_5068 : i32;
  var GLF_live8_looplimiter3 : i32;
  var GLF_live8k : i32;
  var GLF_live8j : i32;
  var GLF_live8matrix_u_1 : vec4<f32>;
  var GLF_live8matrix_a : mat4x4<f32>;
  var GLF_live8beta : f32;
  var GLF_live8a : i32;
  var x_6053 : i32;
  var x_6107 : i32;
  var x_6112 : i32;
  GLF_live8MATRIX_N = 4;
  GLF_live6_GLF_color = vec4<f32>(41327400.0, -100860.703125, 9701575.0, 79887672.0);
  GLF_live5gl_FragCoord = vec4<f32>(1512.604736328, -678.020996094, -3.099999905, 9.399999619);
  GLF_live5_GLF_color = vec4<f32>(-8228.552734375, -315.289001465, -3.900000095, -62.650001526);
  GLF_live1_GLF_color = vec4<f32>(0.200000003, -875.377990723, -1.600000024, -5039.16015625);
  treeIndex_1 = 0;
  let x_3796 : BST = tree_1[0];
  param_12 = x_3796;
  param_13 = 9;
  makeTreeNode_struct_BST_i1_i1_i11_i1_(&(param_12), &(param_13));
  let x_3799 : BST = param_12;
  tree_1[0] = x_3799;
  let x_3801 : i32 = treeIndex_1;
  treeIndex_1 = (x_3801 + 1);
  let x_3804 : i32 = treeIndex_1;
  param_14 = x_3804;
  param_15 = 5;
  insert_i1_i1_(&(param_14), &(param_15));
  let x_3807 : i32 = treeIndex_1;
  treeIndex_1 = (x_3807 + 1);
  if (false) {
    GLF_live10c = vec3<f32>(-7951.71484375, 2275.874267578, 53.799999237);
    GLF_live10_looplimiter1 = 0;
    GLF_live10i_1 = 97283;
    let x_3820 : i32 = GLF_live10_looplimiter1;
    if ((x_3820 >= 6)) {
    }
    let x_3824 : i32 = GLF_live10_looplimiter1;
    GLF_live10_looplimiter1 = (x_3824 + 1);
    let x_3826 : i32 = GLF_live10i_1;
    let x_3829 : f32 = GLF_live10c[clamp(x_3826, 0, 2)];
    if ((x_3829 >= 1.0)) {
      let x_3833 : i32 = GLF_live10i_1;
      let x_3835 : i32 = GLF_live10i_1;
      let x_3838 : f32 = GLF_live10c[clamp(x_3835, 0, 2)];
      let x_3839 : i32 = GLF_live10i_1;
      let x_3842 : f32 = GLF_live10c[clamp(x_3839, 0, 2)];
      GLF_live10c[clamp(x_3833, 0, 2)] = (x_3838 * x_3842);
    }
    x_GLF_color = vec4<f32>(0.124207191, -0.00495738769, 4.272727489, 0.075978018);
    let x_3851 : vec4<f32> = ((vec4<f32>(0.0, 0.0, 0.0, 0.0) + vec4<f32>(0.124207191, -0.00495738769, 4.272727489, 0.075978018)) - vec4<f32>(0.0, 0.0, 0.0, 0.0));
  }
  let x_3854 : i32 = treeIndex_1;
  param_16 = x_3854;
  param_17 = 12;
  insert_i1_i1_(&(param_16), &(param_17));
  let x_3857 : i32 = treeIndex_1;
  treeIndex_1 = (x_3857 + 1);
  let x_3860 : i32 = treeIndex_1;
  param_18 = x_3860;
  param_19 = 15;
  insert_i1_i1_(&(param_18), &(param_19));
  let x_3863 : i32 = treeIndex_1;
  treeIndex_1 = (x_3863 + 1);
  let x_3866 : i32 = treeIndex_1;
  param_20 = x_3866;
  param_21 = 7;
  insert_i1_i1_(&(param_20), &(param_21));
  let x_3869 : i32 = treeIndex_1;
  treeIndex_1 = (x_3869 + 1);
  let x_3872 : i32 = treeIndex_1;
  param_22 = x_3872;
  param_23 = 8;
  insert_i1_i1_(&(param_22), &(param_23));
  GLF_live6pos = vec2<f32>(-0.0, 88.309997559);
  let x_3887 : vec2<f32> = GLF_live6pos;
  param_24 = x_3887;
  param_25 = vec2<f32>(0.699999988, 0.300000012);
  param_26 = vec2<f32>(0.5, 0.899999976);
  param_27 = vec2<f32>(0.100000001, 0.400000006);
  let x_3891 : i32 = GLF_live6pointInTriangle_vf2_vf2_vf2_vf2_(&(param_24), &(param_25), &(param_26), &(param_27));
  if ((x_3891 == 1)) {
    GLF_live6_GLF_color = vec4<f32>(1.0, 0.0, 0.0, 1.0);
    GLF_live10thirty_two_1 = 1263.859985352;
    GLF_live10i_2 = 0;
    GLF_live10result_1 = -5.599999905;
    let x_3900 : i32 = GLF_live10i_2;
    if (((x_3900 % 32) == 0)) {
      let x_3905 : f32 = GLF_live10result_1;
      GLF_live10result_1 = (x_3905 + 0.400000006);
    } else {
      let x_3908 : i32 = GLF_live10i_2;
      let x_3910 : f32 = GLF_live10thirty_two_1;
      if (((f32(x_3908) - (round(x_3910) * floor((f32(x_3908) / round(x_3910))))) <= 0.01)) {
        let x_3916 : f32 = GLF_live10result_1;
        GLF_live10result_1 = (x_3916 + 100.0);
      }
    }
  } else {
    GLF_live6_GLF_color = vec4<f32>(0.0, 0.0, 0.0, 1.0);
  }
  let x_3919 : i32 = treeIndex_1;
  treeIndex_1 = (x_3919 + 1);
  GLF_live3_looplimiter32 = 0;
  let x_3922 : i32 = GLF_live3_looplimiter32;
  if ((x_3922 >= 7)) {
  }
  if (false) {
    x_GLF_color = vec4<f32>(-1543.676757812, -0.100000001, 33.279998779, -1.0);
  }
  let x_3934 : i32 = treeIndex_1;
  param_28 = x_3934;
  param_29 = 2;
  insert_i1_i1_(&(param_28), &(param_29));
  GLF_live7pos = vec2<i32>(18487, 17411);
  GLF_live10c_1 = vec3<f32>(1.899999976, 41.490001678, -8630.026367188);
  GLF_live10i_3 = 10;
  let x_3947 : i32 = GLF_live10i_3;
  let x_3956 : f32 = GLF_live10c_1[clamp(~(vec2<i32>((~((0 ^ x_3947)) | 0), 1).x), 0, 2)];
  if ((x_3956 >= 1.0)) {
    let x_3960 : i32 = GLF_live10i_3;
    let x_3962 : i32 = GLF_live10i_3;
    let x_3965 : f32 = GLF_live10c_1[clamp(x_3962, 0, 2)];
    let x_3966 : i32 = GLF_live10i_3;
    let x_3969 : f32 = GLF_live10c_1[clamp(x_3966, 0, 2)];
    GLF_live10c_1[clamp(x_3960, 0, 2)] = (x_3965 * x_3969);
  }
  GLF_live7_looplimiter0 = 0;
  loop {
    var x_4171 : bool;
    var x_4172_phi : bool;
    let x_3979 : i32 = GLF_live7pos.y;
    if ((x_3979 != 256)) {
    } else {
      break;
    }
    let x_3982 : i32 = GLF_live7_looplimiter0;
    if ((x_3982 >= 3)) {
      if (false) {
        x_GLF_color = vec4<f32>(-8580.0, 93.0, -599.0, -25.0);
      }
      break;
    }
    let x_3994 : i32 = GLF_live7_looplimiter0;
    GLF_live7_looplimiter0 = (x_3994 + 1);
    let x_3997 : i32 = GLF_live7pos.x;
    let x_4151 : i32 = GLF_live7pos.y;
    indexable_4 = array<i32, 256u>(115, 133, 150, 164, 176, 184, 190, 192, 191, 187, 181, 172, 163, 153, 143, 134, 126, 120, 116, 114, 114, 117, 121, 127, 134, 141, 148, 154, 159, 162, 163, 161, 157, 151, 143, 134, 124, 113, 103, 94, 87, 82, 79, 80, 84, 91, 101, 114, 130, 146, 164, 182, 199, 215, 229, 240, 249, 254, 256, 254, 250, 243, 233, 223, 212, 200, 190, 180, 172, 166, 163, 161, 162, 164, 169, 174, 179, 185, 190, 193, 195, 195, 192, 188, 180, 171, 161, 149, 137, 125, 114, 105, 97, 93, 91, 93, 98, 106, 117, 130, 145, 161, 177, 193, 208, 221, 231, 239, 243, 244, 242, 236, 228, 218, 207, 194, 181, 169, 158, 148, 141, 135, 132, 131, 132, 135, 138, 143, 147, 151, 154, 155, 155, 152, 146, 139, 129, 118, 106, 93, 80, 68, 58, 49, 43, 40, 41, 44, 51, 61, 73, 87, 103, 119, 134, 149, 162, 173, 181, 186, 188, 186, 181, 174, 164, 153, 141, 128, 116, 104, 94, 86, 81, 77, 76, 77, 80, 84, 89, 94, 98, 102, 104, 104, 102, 98, 92, 83, 73, 62, 50, 38, 26, 16, 8, 2, 0, 0, 4, 11, 21, 33, 48, 64, 81, 98, 114, 129, 141, 151, 158, 161, 161, 158, 152, 144, 134, 123, 112, 100, 90, 81, 73, 68, 65, 65, 67, 70, 75, 81, 87, 92, 97, 101, 103, 102, 100, 95, 88, 79, 69, 58, 47, 36, 26, 18, 13, 11, 11, 15, 22, 32, 45, 60, 77, 94);
    let x_4157 : i32 = indexable_4[clamp((x_4151 - 0), 0, 255)];
    let x_4159 : bool = (x_3997 < (x_4157 + 15));
    x_4172_phi = x_4159;
    if (x_4159) {
      let x_4163 : i32 = GLF_live7pos.x;
      let x_4165 : i32 = GLF_live7pos.y;
      indexable_5 = array<i32, 256u>(115, 133, 150, 164, 176, 184, 190, 192, 191, 187, 181, 172, 163, 153, 143, 134, 126, 120, 116, 114, 114, 117, 121, 127, 134, 141, 148, 154, 159, 162, 163, 161, 157, 151, 143, 134, 124, 113, 103, 94, 87, 82, 79, 80, 84, 91, 101, 114, 130, 146, 164, 182, 199, 215, 229, 240, 249, 254, 256, 254, 250, 243, 233, 223, 212, 200, 190, 180, 172, 166, 163, 161, 162, 164, 169, 174, 179, 185, 190, 193, 195, 195, 192, 188, 180, 171, 161, 149, 137, 125, 114, 105, 97, 93, 91, 93, 98, 106, 117, 130, 145, 161, 177, 193, 208, 221, 231, 239, 243, 244, 242, 236, 228, 218, 207, 194, 181, 169, 158, 148, 141, 135, 132, 131, 132, 135, 138, 143, 147, 151, 154, 155, 155, 152, 146, 139, 129, 118, 106, 93, 80, 68, 58, 49, 43, 40, 41, 44, 51, 61, 73, 87, 103, 119, 134, 149, 162, 173, 181, 186, 188, 186, 181, 174, 164, 153, 141, 128, 116, 104, 94, 86, 81, 77, 76, 77, 80, 84, 89, 94, 98, 102, 104, 104, 102, 98, 92, 83, 73, 62, 50, 38, 26, 16, 8, 2, 0, 0, 4, 11, 21, 33, 48, 64, 81, 98, 114, 129, 141, 151, 158, 161, 161, 158, 152, 144, 134, 123, 112, 100, 90, 81, 73, 68, 65, 65, 67, 70, 75, 81, 87, 92, 97, 101, 103, 102, 100, 95, 88, 79, 69, 58, 47, 36, 26, 18, 13, 11, 11, 15, 22, 32, 45, 60, 77, 94);
      let x_4169 : i32 = indexable_5[clamp(x_4165, 0, 255)];
      x_4171 = (x_4163 > (x_4169 - 15));
      x_4172_phi = x_4171;
    }
    let x_4172 : bool = x_4172_phi;
    if (x_4172) {
      let x_4178 : i32 = GLF_live7pos.x;
      let x_4180 : i32 = GLF_live7pos.y;
      indexable_6 = array<i32, 256u>(115, 133, 150, 164, 176, 184, 190, 192, 191, 187, 181, 172, 163, 153, 143, 134, 126, 120, 116, 114, 114, 117, 121, 127, 134, 141, 148, 154, 159, 162, 163, 161, 157, 151, 143, 134, 124, 113, 103, 94, 87, 82, 79, 80, 84, 91, 101, 114, 130, 146, 164, 182, 199, 215, 229, 240, 249, 254, 256, 254, 250, 243, 233, 223, 212, 200, 190, 180, 172, 166, 163, 161, 162, 164, 169, 174, 179, 185, 190, 193, 195, 195, 192, 188, 180, 171, 161, 149, 137, 125, 114, 105, 97, 93, 91, 93, 98, 106, 117, 130, 145, 161, 177, 193, 208, 221, 231, 239, 243, 244, 242, 236, 228, 218, 207, 194, 181, 169, 158, 148, 141, 135, 132, 131, 132, 135, 138, 143, 147, 151, 154, 155, 155, 152, 146, 139, 129, 118, 106, 93, 80, 68, 58, 49, 43, 40, 41, 44, 51, 61, 73, 87, 103, 119, 134, 149, 162, 173, 181, 186, 188, 186, 181, 174, 164, 153, 141, 128, 116, 104, 94, 86, 81, 77, 76, 77, 80, 84, 89, 94, 98, 102, 104, 104, 102, 98, 92, 83, 73, 62, 50, 38, 26, 16, 8, 2, 0, 0, 4, 11, 21, 33, 48, 64, 81, 98, 114, 129, 141, 151, 158, 161, 161, 158, 152, 144, 134, 123, 112, 100, 90, 81, 73, 68, 65, 65, 67, 70, 75, 81, 87, 92, 97, 101, 103, 102, 100, 95, 88, 79, 69, 58, 47, 36, 26, 18, 13, 11, 11, 15, 22, 32, 45, 60, 77, 94);
      let x_4184 : i32 = indexable_6[clamp(x_4180, 0, 255)];
      GLF_live7p = ((15.0 - abs(f32((x_4178 - x_4184)))) / 15.0);
      let x_4191 : f32 = GLF_live7p;
      let x_4194 : f32 = GLF_live7p;
      let x_4199 : f32 = GLF_live7p;
      let x_4203 : f32 = GLF_live7p;
      let x_4208 : f32 = GLF_live7p;
      let x_4209 : f32 = GLF_live7p;
      let x_4211 : f32 = GLF_live7p;
      let x_4212 : f32 = GLF_live7p;
      let x_4213 : vec4<f32> = vec4<f32>(clamp(clamp(min((vec2<f32>(1.0, 1.0) * vec2<f32>(x_4191, 0.0)), (vec2<f32>(1.0, 1.0) * vec2<f32>(x_4194, 0.0))).x, ((vec2<f32>(1.0, 1.0) * vec2<f32>(x_4199, 0.0))).x, ((vec2<f32>(1.0, 1.0) * vec2<f32>(x_4203, 0.0))).x), x_4208, x_4209), x_4211, x_4212, 1.0);
    }
    let x_4214 : ptr<function, i32> = &(GLF_live7pos.y);
    let x_4215 : i32 = *(x_4214);
    *(x_4214) = (x_4215 + 1);
    GLF_live10i_4 = 10;
    GLF_live10limit = 0.300000012;
    GLF_live10result_2 = -1.5;
    let x_4221 : i32 = GLF_live10i_4;
    let x_4223 : f32 = GLF_live10limit;
    if ((f32(x_4221) >= x_4223)) {
    }
  }
  let x_4227 : i32 = treeIndex_1;
  treeIndex_1 = (x_4227 + 1);
  let x_4230 : i32 = treeIndex_1;
  param_30 = x_4230;
  param_31 = 6;
  insert_i1_i1_(&(param_30), &(param_31));
  let x_4233 : i32 = treeIndex_1;
  treeIndex_1 = (x_4233 + 1);
  let x_4237 : i32 = treeIndex_1;
  param_32 = x_4237;
  param_33 = 17;
  insert_i1_i1_(&(param_32), &(param_33));
  let x_4240 : i32 = treeIndex_1;
  treeIndex_1 = (x_4240 + 1);
  let x_4243 : i32 = treeIndex_1;
  param_34 = x_4243;
  param_35 = 13;
  insert_i1_i1_(&(param_34), &(param_35));
  count = 0;
  i = 0;
  loop {
    let x_4253 : i32 = i;
    if ((x_4253 < 20)) {
    } else {
      break;
    }
    let x_4258 : i32 = i;
    param_36 = x_4258;
    let x_4259 : i32 = search_i1_(&(param_36));
    result = x_4259;
    let x_4260 : i32 = i;
    switch(x_4260) {
      case 2, 5, 7, 8, 9, 12, 15: {
        if (false) {
          x_GLF_color = vec4<f32>(-113.260002136, 32070.3515625, -27.299999237, -4.900000095);
        }
        fallthrough;
      }
      case 6: {
        GLF_live9pos_2 = vec2<f32>(-0.5, 4.400000095);
        GLF_live9quad_1 = vec4<f32>(222.598007202, 3.5, 29.069999695, 9107.665039062);
        let x_4284 : f32 = GLF_live9pos_2.x;
        let x_4285 : vec4<f32> = GLF_live9quad_1;
        let x_4295 : mat4x2<f32> = mat4x2<f32>(vec2<f32>(x_4285.x, x_4285.y), vec2<f32>(x_4285.z, x_4285.w), vec2<f32>(0.0, 1.0), vec2<f32>(1.0, 1.0));
        if ((x_4284 < vec4<f32>(x_4295[0u].x, x_4295[0u].y, x_4295[1u].x, x_4295[1u].y).x)) {
        }
        let x_4306 : f32 = GLF_live9pos_2.y;
        let x_4308 : f32 = GLF_live9quad_1.y;
        if ((x_4306 < x_4308)) {
        }
        let x_4313 : f32 = GLF_live9pos_2.x;
        let x_4315 : f32 = GLF_live9quad_1.x;
        let x_4317 : f32 = GLF_live9quad_1.z;
        if ((x_4313 > (x_4315 + x_4317))) {
        }
        let x_4323 : f32 = GLF_live9pos_2.y;
        let x_4325 : f32 = GLF_live9quad_1.y;
        let x_4327 : f32 = GLF_live9quad_1.w;
        if ((x_4323 > (x_4325 + x_4327))) {
        }
        fallthrough;
      }
      case 13, 17: {
        let x_4332 : i32 = result;
        let x_4333 : i32 = i;
        if ((x_4332 == x_4333)) {
          let x_4337 : i32 = count;
          count = (x_4337 + 1);
        }
      }
      default: {
        let x_4340 : i32 = result;
        if ((x_4340 == -1)) {
          let x_4344 : i32 = count;
          count = (x_4344 + 1);
          GLF_live0data = array<vec3<f32>, 16u>(vec3<f32>(-367.006988525, 5.400000095, -7.300000191), vec3<f32>(2.700000048, -3.5, 9.5), vec3<f32>(-11.430000305, 7917.026367188, 584.476989746), vec3<f32>(-11369333.0, -59401.3125, -47068.26953125), vec3<f32>(1.022727251, 0.00459203357, -0.523255825), vec3<f32>(-6.5, 32.709999084, 1.399999976), vec3<f32>(71.489997864, 216.985992432, 36.330001831), vec3<f32>(6.800000191, -1956.688476562, 1.200000048), vec3<f32>(8.800000191, -72.040000916, -5.900000095), vec3<f32>(-7615.638671875, -72.489997864, 0.600000024), vec3<f32>(542.111022949, -57.700000763, 1.899999976), vec3<f32>(-6.400000095, -6679.955566406, 499.265014648), vec3<f32>(9879.229492188, -8.100000381, -2.400000095), vec3<f32>(-55.740001678, -94.86000061, 3.400000095), vec3<f32>(-14.210000038, -7.300000191, 40.599998474), vec3<f32>(-49.689998627, 76.319999695, 8283.877929688));
          GLF_live0sum = vec3<f32>(-0.00579261361, 0.024434324, 0.000152899534);
          GLF_live0i_1 = 221;
          GLF_live0_looplimiter3 = 0;
          let x_4417 : i32 = GLF_live0_looplimiter3;
          if ((x_4417 >= 6)) {
          }
          let x_4421 : i32 = GLF_live0_looplimiter3;
          GLF_live0_looplimiter3 = (x_4421 + 1);
          GLF_live9i_1 = 50002;
          GLF_live9_looplimiter0_1 = 0;
          GLF_live9res_1 = vec4<f32>(3.400000095, 547.695007324, -5.199999809, -8.699999809);
          GLF_live9pos_3 = vec2<f32>(-468.809997559, 59.180000305);
          GLF_live9i_1 = 0;
          loop {
            let x_4440 : i32 = GLF_live9i_1;
            if ((x_4440 < 8)) {
            } else {
              break;
            }
            let x_4442 : i32 = GLF_live9_looplimiter0_1;
            if ((x_4442 >= 4)) {
              break;
            }
            let x_4447 : i32 = GLF_live9_looplimiter0_1;
            GLF_live9_looplimiter0_1 = (x_4447 + 1);
            let x_4449 : i32 = GLF_live9i_1;
            let x_4452 : vec2<f32> = GLF_live9pos_3;
            param_37 = x_4452;
            indexable_7 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
            let x_4456 : vec4<f32> = indexable_7[clamp(x_4449, 0, 7)];
            param_38 = x_4456;
            let x_4457 : bool = GLF_live9collision_vf2_vf4_(&(param_37), &(param_38));
            if (x_4457) {
              let x_4460 : i32 = GLF_live9i_1;
              indexable_8 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
              let x_4464 : f32 = indexable_8[clamp(x_4460, 0, 7)].x;
              let x_4466 : i32 = GLF_live9i_1;
              indexable_9 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
              let x_4470 : f32 = indexable_9[clamp(x_4466, 0, 7)].y;
              let x_4474 : i32 = GLF_live9i_1;
              let x_4478 : i32 = GLF_live9i_1;
              indexable_10 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
              let x_4482 : f32 = indexable_10[clamp(x_4478, 0, 7)].x;
              let x_4484 : i32 = GLF_live9i_1;
              indexable_11 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
              let x_4488 : f32 = indexable_11[clamp(x_4484, 0, 7)].y;
              let x_4492 : i32 = GLF_live9i_1;
              let x_4497 : i32 = GLF_live9i_1;
              indexable_12 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
              let x_4501 : f32 = indexable_12[clamp(x_4497, 0, 7)].x;
              let x_4503 : i32 = GLF_live9i_1;
              indexable_13 = array<vec4<f32>, 8u>(vec4<f32>(4.0, 4.0, 20.0, 4.0), vec4<f32>(4.0, 4.0, 4.0, 20.0), vec4<f32>(4.0, 20.0, 20.0, 4.0), vec4<f32>(20.0, 4.0, 4.0, 8.0), vec4<f32>(8.0, 6.0, 4.0, 2.0), vec4<f32>(2.0, 12.0, 2.0, 4.0), vec4<f32>(16.0, 2.0, 4.0, 4.0), vec4<f32>(12.0, 22.0, 4.0, 4.0));
              let x_4507 : f32 = indexable_13[clamp(x_4503, 0, 7)].y;
              let x_4511 : i32 = GLF_live9i_1;
              indexable_14 = array<vec4<f32>, 16u>(vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(0.5, 0.0, 0.0, 1.0), vec4<f32>(0.0, 0.5, 0.0, 1.0), vec4<f32>(0.5, 0.5, 0.0, 1.0), vec4<f32>(0.0, 0.0, 0.5, 1.0), vec4<f32>(0.5, 0.0, 0.5, 1.0), vec4<f32>(0.0, 0.5, 0.5, 1.0), vec4<f32>(0.5, 0.5, 0.5, 1.0), vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(1.0, 0.0, 0.0, 1.0), vec4<f32>(0.0, 1.0, 0.0, 1.0), vec4<f32>(1.0, 1.0, 0.0, 1.0), vec4<f32>(0.0, 0.0, 1.0, 1.0), vec4<f32>(1.0, 0.0, 1.0, 1.0), vec4<f32>(0.0, 1.0, 1.0, 1.0), vec4<f32>(1.0, 1.0, 1.0, 1.0));
              let x_4520 : vec4<f32> = indexable_14[clamp((((((((i32(x_4464) * i32(x_4470)) << bitcast<u32>(0)) + (x_4474 * 9)) + 11) | ((((i32(x_4482) * i32(x_4488)) << bitcast<u32>(0)) + (x_4492 * 9)) + 11)) | ((((i32(x_4501) * i32(x_4507)) << bitcast<u32>(0)) + (x_4511 * 9)) + 11)) % 16), 0, 15)];
              GLF_live9res_1 = x_4520;
              let x_4521 : vec4<f32> = (vec4<f32>(0.0, 0.0, 0.0, 0.0) + x_4520);
            }

            continuing {
              let x_4522 : i32 = GLF_live9i_1;
              GLF_live9i_1 = (x_4522 + 1);
            }
          }
          let x_4524 : i32 = GLF_live0i_1;
          let x_4527 : vec3<f32> = GLF_live0data[clamp(x_4524, 0, 15)];
          let x_4528 : vec3<f32> = GLF_live0sum;
          GLF_live0sum = (x_4528 + x_4527);
        }
      }
    }

    continuing {
      let x_4556 : i32 = i;
      i = (x_4556 + 1);
    }
  }
  if (false) {
    x_GLF_color = vec4<f32>(1.799999952, 3.5, 14.75, 134.175003052);
  }
  let x_4565 : vec4<f32> = GLF_live5gl_FragCoord;
  GLF_live5icoord_2 = (vec2<i32>(255, 255) - vec2<i32>(vec2<f32>(x_4565.x, x_4565.y)));
  let x_4571 : i32 = GLF_live5icoord_2.x;
  GLF_live5A_2 = select(-1, 0, ((x_4571 & 1) != 0));
  let x_4577 : i32 = GLF_live5icoord_2.x;
  GLF_live5B_2 = select(-1, 0, ((x_4577 & 2) != 0));
  let x_4583 : i32 = GLF_live5icoord_2.x;
  GLF_live5C_2 = select(-1, 0, ((x_4583 & 4) != 0));
  let x_4589 : i32 = GLF_live5icoord_2.x;
  GLF_live5D_2 = select(-1, 0, ((x_4589 & 8) != 0));
  let x_4595 : i32 = GLF_live5icoord_2.x;
  let x_4597 : i32 = GLF_live5icoord_2.x;
  let x_4599 : i32 = GLF_live5icoord_2.x;
  let x_4602 : i32 = GLF_live5icoord_2.x;
  let x_4604 : i32 = GLF_live5icoord_2.x;
  GLF_live5E_2 = select(-1, 0, (((0 + (clamp(x_4595, x_4597, x_4599) | min(x_4602, x_4604))) & 16) != 0));
  let x_4613 : i32 = GLF_live5icoord_2.y;
  GLF_live5F_2 = select(-1, 0, ((x_4613 & 1) != 0));
  let x_4619 : i32 = GLF_live5icoord_2.y;
  GLF_live5G_2 = select(-1, 0, (((x_4619 & 2) - 0) != 0));
  let x_4626 : i32 = GLF_live5icoord_2.y;
  GLF_live5H_2 = select(-1, 0, ((x_4626 & 4) != 0));
  let x_4632 : i32 = GLF_live5icoord_2.y;
  GLF_live5I_2 = select(-1, 0, ((x_4632 & 8) != 0));
  let x_4638 : i32 = GLF_live5icoord_2.y;
  GLF_live5J_2 = select(-1, 0, ((x_4638 & 16) != 0));
  let x_4643 : i32 = GLF_live5A_2;
  let x_4644 : i32 = GLF_live5C_2;
  let x_4647 : i32 = GLF_live5D_2;
  let x_4650 : i32 = GLF_live5E_2;
  let x_4653 : i32 = GLF_live5F_2;
  let x_4655 : i32 = GLF_live5G_2;
  let x_4657 : i32 = GLF_live5H_2;
  let x_4659 : i32 = GLF_live5I_2;
  let x_4662 : i32 = GLF_live5J_2;
  let x_4665 : i32 = GLF_live5B_2;
  let x_4666 : i32 = GLF_live5C_2;
  let x_4669 : i32 = GLF_live5D_2;
  let x_4672 : i32 = GLF_live5E_2;
  let x_4675 : i32 = GLF_live5F_2;
  let x_4677 : i32 = GLF_live5G_2;
  let x_4679 : i32 = GLF_live5H_2;
  let x_4681 : i32 = GLF_live5I_2;
  let x_4684 : i32 = GLF_live5J_2;
  let x_4688 : i32 = GLF_live5A_2;
  let x_4690 : i32 = GLF_live5C_2;
  let x_4692 : i32 = GLF_live5D_2;
  let x_4695 : i32 = GLF_live5E_2;
  let x_4698 : i32 = GLF_live5F_2;
  let x_4700 : i32 = GLF_live5H_2;
  let x_4703 : i32 = GLF_live5I_2;
  let x_4705 : i32 = GLF_live5J_2;
  let x_4709 : i32 = GLF_live5A_2;
  let x_4710 : i32 = GLF_live5B_2;
  let x_4713 : i32 = GLF_live5D_2;
  let x_4716 : i32 = GLF_live5E_2;
  let x_4719 : i32 = GLF_live5G_2;
  let x_4721 : i32 = GLF_live5H_2;
  let x_4724 : i32 = GLF_live5I_2;
  let x_4726 : i32 = GLF_live5J_2;
  GLF_live5res_2 = (((((((((((x_4643 | ~(x_4644)) | ~(x_4647)) | ~(x_4650)) | x_4653) | x_4655) | x_4657) | ~(x_4659)) | ~(x_4662)) & ((((((((x_4665 | ~(x_4666)) | ~(x_4669)) | ~(x_4672)) | x_4675) | x_4677) | x_4679) | ~(x_4681)) | ~(x_4684))) & (((((((~(x_4688) | x_4690) | ~(x_4692)) | ~(x_4695)) | x_4698) | ~(x_4700)) | x_4703) | ~(x_4705))) & (((((((x_4709 | ~(x_4710)) | ~(x_4713)) | ~(x_4716)) | x_4719) | ~(x_4721)) | x_4724) | ~(x_4726)));
  let x_4730 : i32 = GLF_live5A_2;
  let x_4731 : i32 = GLF_live5B_2;
  let x_4733 : i32 = GLF_live5C_2;
  let x_4736 : i32 = GLF_live5D_2;
  let x_4738 : i32 = GLF_live5E_2;
  let x_4741 : i32 = GLF_live5F_2;
  let x_4743 : i32 = GLF_live5G_2;
  let x_4745 : i32 = GLF_live5H_2;
  let x_4748 : i32 = GLF_live5I_2;
  let x_4750 : i32 = GLF_live5J_2;
  let x_4755 : i32 = GLF_live5B_2;
  let x_4756 : i32 = GLF_live5C_2;
  let x_4759 : i32 = GLF_live5D_2;
  let x_4762 : i32 = GLF_live5E_2;
  let x_4765 : i32 = GLF_live5F_2;
  let x_4768 : i32 = GLF_live5G_2;
  let x_4771 : i32 = GLF_live5H_2;
  let x_4773 : i32 = GLF_live5I_2;
  let x_4775 : i32 = GLF_live5J_2;
  let x_4779 : i32 = GLF_live5A_2;
  let x_4780 : i32 = GLF_live5C_2;
  let x_4782 : i32 = GLF_live5D_2;
  let x_4785 : i32 = GLF_live5E_2;
  let x_4788 : i32 = GLF_live5G_2;
  let x_4791 : i32 = GLF_live5H_2;
  let x_4793 : i32 = GLF_live5I_2;
  let x_4795 : i32 = GLF_live5J_2;
  let x_4799 : i32 = GLF_live5A_2;
  let x_4800 : i32 = GLF_live5C_2;
  let x_4802 : i32 = GLF_live5D_2;
  let x_4805 : i32 = GLF_live5E_2;
  let x_4808 : i32 = GLF_live5F_2;
  let x_4811 : i32 = GLF_live5H_2;
  let x_4813 : i32 = GLF_live5I_2;
  let x_4815 : i32 = GLF_live5J_2;
  let x_4819 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_4819 & ((((((((((((x_4730 | x_4731) | ~(x_4733)) | x_4736) | ~(x_4738)) | x_4741) | x_4743) | ~(x_4745)) | x_4748) | ~(((x_4750 << bitcast<u32>(0)) ^ 0))) & ((((((((x_4755 | ~(x_4756)) | ~(x_4759)) | ~(x_4762)) | ~(x_4765)) | ~(x_4768)) | x_4771) | x_4773) | ~(x_4775))) & (((((((x_4779 | x_4780) | ~(x_4782)) | ~(x_4785)) | ~(x_4788)) | x_4791) | x_4793) | ~(x_4795))) & (((((((x_4799 | x_4800) | ~(x_4802)) | ~(x_4805)) | ~(x_4808)) | x_4811) | x_4813) | ~(x_4815))));
  let x_4821 : i32 = GLF_live5A_2;
  let x_4822 : i32 = GLF_live5B_2;
  let x_4824 : i32 = GLF_live5C_2;
  let x_4827 : i32 = GLF_live5D_2;
  let x_4829 : i32 = GLF_live5E_2;
  let x_4832 : i32 = GLF_live5G_2;
  let x_4835 : i32 = GLF_live5A_2;
  let x_4836 : i32 = GLF_live5B_2;
  let x_4838 : i32 = GLF_live5C_2;
  let x_4841 : i32 = GLF_live5D_2;
  let x_4843 : i32 = GLF_live5E_2;
  let x_4846 : i32 = GLF_live5G_2;
  let x_4849 : i32 = GLF_live5A_2;
  let x_4850 : i32 = GLF_live5B_2;
  let x_4852 : i32 = GLF_live5C_2;
  let x_4855 : i32 = GLF_live5D_2;
  let x_4857 : i32 = GLF_live5E_2;
  let x_4860 : i32 = GLF_live5G_2;
  let x_4864 : i32 = GLF_live5H_2;
  let x_4866 : i32 = GLF_live5I_2;
  let x_4868 : i32 = GLF_live5J_2;
  let x_4871 : i32 = GLF_live5A_2;
  let x_4873 : i32 = GLF_live5C_2;
  let x_4875 : i32 = GLF_live5D_2;
  let x_4877 : i32 = GLF_live5E_2;
  let x_4880 : i32 = GLF_live5G_2;
  let x_4883 : i32 = GLF_live5H_2;
  let x_4886 : i32 = GLF_live5I_2;
  let x_4888 : i32 = GLF_live5J_2;
  let x_4892 : i32 = GLF_live5A_2;
  let x_4894 : i32 = GLF_live5A_2;
  let x_4897 : i32 = GLF_live5B_2;
  let x_4899 : i32 = GLF_live5B_2;
  let x_4903 : i32 = GLF_live5C_2;
  let x_4906 : i32 = GLF_live5D_2;
  let x_4909 : i32 = GLF_live5E_2;
  let x_4911 : i32 = GLF_live5G_2;
  let x_4914 : i32 = GLF_live5H_2;
  let x_4916 : i32 = GLF_live5I_2;
  let x_4918 : i32 = GLF_live5J_2;
  let x_4922 : i32 = GLF_live5A_2;
  let x_4923 : i32 = GLF_live5B_2;
  let x_4927 : i32 = GLF_live5D_2;
  let x_4929 : i32 = GLF_live5E_2;
  let x_4931 : i32 = GLF_live5E_2;
  let x_4933 : i32 = GLF_live5E_2;
  let x_4939 : i32 = GLF_live5G_2;
  let x_4941 : i32 = GLF_live5H_2;
  let x_4943 : i32 = GLF_live5I_2;
  let x_4945 : i32 = GLF_live5D_2;
  let x_4946 : i32 = GLF_live5J_2;
  let x_4951 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_4951 & ((((((clamp((((((x_4821 | x_4822) | ~(x_4824)) | x_4827) | ~(x_4829)) | ~(x_4832)), (((((x_4835 | x_4836) | ~(x_4838)) | x_4841) | ~(x_4843)) | ~(x_4846)), (((((x_4849 | x_4850) | ~(x_4852)) | x_4855) | ~(x_4857)) | ~(x_4860))) | x_4864) | x_4866) | ~(x_4868)) & ((((((((~(x_4871) | x_4873) | x_4875) | ~(x_4877)) | ~(x_4880)) | x_4883) - 0) | x_4886) | ~(x_4888))) & (((((((((~(x_4892) | ~(x_4894)) | min(~(x_4897), ~(x_4899))) | ~(x_4903)) | ~(x_4906)) | x_4909) | ~(x_4911)) | x_4914) | x_4916) | ~(x_4918))) & (((((((x_4922 | ~((x_4923 - 0))) | x_4927) | max(~(x_4929), max(~(x_4931), (~(x_4933) << bitcast<u32>(0))))) | x_4939) | x_4941) | x_4943) | ~(select(x_4946, x_4945, false)))));
  let x_4953 : i32 = GLF_live5A_2;
  let x_4955 : i32 = GLF_live5B_2;
  let x_4957 : i32 = GLF_live5C_2;
  let x_4960 : i32 = GLF_live5D_2;
  let x_4962 : i32 = GLF_live5E_2;
  let x_4964 : f32 = x_168.injectionSwitch.x;
  let x_4969 : i32 = GLF_live5G_2;
  let x_4971 : i32 = GLF_live5H_2;
  let x_4973 : i32 = GLF_live5I_2;
  let x_4975 : i32 = GLF_live5J_2;
  let x_4978 : i32 = GLF_live5A_2;
  let x_4979 : i32 = GLF_live5B_2;
  let x_4982 : i32 = GLF_live5D_2;
  let x_4985 : i32 = GLF_live5E_2;
  let x_4987 : i32 = GLF_live5G_2;
  let x_4989 : i32 = GLF_live5H_2;
  let x_4991 : i32 = GLF_live5I_2;
  let x_4993 : i32 = GLF_live5J_2;
  let x_4994 : i32 = GLF_live5J_2;
  let x_4999 : i32 = GLF_live5A_2;
  let x_5000 : i32 = GLF_live5C_2;
  let x_5002 : i32 = GLF_live5C_2;
  let x_5006 : i32 = GLF_live5D_2;
  let x_5010 : i32 = GLF_live5E_2;
  let x_5012 : i32 = GLF_live5F_2;
  let x_5014 : i32 = GLF_live5G_2;
  let x_5016 : i32 = GLF_live5H_2;
  let x_5018 : i32 = GLF_live5I_2;
  let x_5020 : i32 = GLF_live5J_2;
  let x_5024 : i32 = GLF_live5A_2;
  let x_5026 : i32 = GLF_live5C_2;
  let x_5028 : i32 = GLF_live5D_2;
  let x_5031 : i32 = GLF_live5E_2;
  let x_5033 : i32 = GLF_live5F_2;
  let x_5035 : i32 = GLF_live5G_2;
  let x_5037 : i32 = GLF_live5H_2;
  let x_5039 : i32 = GLF_live5I_2;
  let x_5042 : i32 = GLF_live5J_2;
  let x_5046 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5046 & (((((((((((~(x_4953) | x_4955) | ~(x_4957)) | x_4960) | ~((x_4962 + i32(x_4964)))) | x_4969) | x_4971) | x_4973) | ~(x_4975)) & (((((((x_4978 | ~(x_4979)) | ~(x_4982)) | x_4985) | x_4987) | x_4989) | x_4991) | ~(min(x_4993, x_4994)))) & ((((((((x_4999 | min(~(x_5000), ~(x_5002))) | ~((x_5006 - 0))) | x_5010) | x_5012) | x_5014) | x_5016) | x_5018) | ~(x_5020))) & ((0 + (((((((~(x_5024) | x_5026) | ~(x_5028)) | x_5031) | x_5033) | x_5035) | x_5037) | x_5039)) | ~(x_5042))));
  let x_5048 : i32 = GLF_live5A_2;
  let x_5050 : i32 = GLF_live5B_2;
  let x_5058 : i32 = GLF_live5C_2;
  let x_5060 : i32 = GLF_live5D_2;
  let x_5064 : i32 = vec2<i32>((((vec4<i32>(vec4<i32>((~(x_5048) | ~(x_5050)), 1, 0, 0).x, 0, 0, 1).x / 1) | x_5058) | ~(x_5060)), 0).x;
  let x_5066 : f32 = gl_FragCoord.x;
  if ((x_5066 >= 0.0)) {
    let x_5071 : i32 = GLF_live5A_2;
    let x_5073 : i32 = GLF_live5B_2;
    let x_5076 : i32 = GLF_live5C_2;
    x_5068 = ((~(x_5071) | ~(x_5073)) | x_5076);
  } else {
    let x_5079 : i32 = GLF_live5H_2;
    x_5068 = x_5079;
  }
  let x_5080 : i32 = x_5068;
  let x_5081 : i32 = GLF_live5D_2;
  let x_5085 : i32 = GLF_live5E_2;
  let x_5088 : i32 = GLF_live5F_2;
  let x_5091 : i32 = GLF_live5G_2;
  let x_5094 : i32 = GLF_live5H_2;
  let x_5097 : i32 = GLF_live5I_2;
  let x_5100 : i32 = GLF_live5J_2;
  let x_5102 : i32 = GLF_live5A_2;
  let x_5103 : i32 = GLF_live5B_2;
  let x_5106 : i32 = GLF_live5C_2;
  let x_5108 : i32 = GLF_live5D_2;
  let x_5110 : i32 = GLF_live5E_2;
  let x_5113 : i32 = GLF_live5F_2;
  let x_5116 : i32 = GLF_live5G_2;
  let x_5119 : i32 = GLF_live5H_2;
  let x_5122 : i32 = GLF_live5I_2;
  let x_5125 : i32 = GLF_live5J_2;
  let x_5128 : i32 = GLF_live5A_2;
  let x_5130 : i32 = GLF_live5B_2;
  let x_5132 : i32 = GLF_live5C_2;
  let x_5134 : i32 = GLF_live5D_2;
  let x_5136 : i32 = GLF_live5E_2;
  let x_5139 : i32 = GLF_live5G_2;
  let x_5142 : i32 = GLF_live5H_2;
  let x_5147 : i32 = GLF_live5I_2;
  let x_5150 : i32 = GLF_live5J_2;
  let x_5155 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5155 & ((((((((max(x_5064, (x_5080 | ~(x_5081))) | ~(x_5085)) | ~(x_5088)) | ~(x_5091)) | ~(x_5094)) | ~(x_5097)) | x_5100) & (((((((((x_5102 | ~(x_5103)) | x_5106) | x_5108) | ~(x_5110)) | ~(x_5113)) | ~(x_5116)) | ~(x_5119)) | ~(x_5122)) | x_5125)) & ~(~(((~(~(((((((~(x_5128) | x_5130) | x_5132) | x_5134) | ~(x_5136)) | ~(x_5139)) | ~(x_5142)))) | ~(x_5147)) | x_5150)))));
  let x_5157 : i32 = GLF_live5C_2;
  let x_5159 : i32 = GLF_live5D_2;
  let x_5162 : i32 = GLF_live5E_2;
  let x_5164 : i32 = GLF_live5F_2;
  let x_5168 : i32 = GLF_live5G_2;
  let x_5172 : i32 = GLF_live5H_2;
  let x_5176 : f32 = x_168.injectionSwitch.x;
  let x_5178 : i32 = GLF_live5I_2;
  let x_5182 : i32 = GLF_live5J_2;
  let x_5184 : i32 = GLF_live5A_2;
  let x_5186 : i32 = GLF_live5C_2;
  let x_5189 : i32 = GLF_live5D_2;
  let x_5192 : i32 = GLF_live5E_2;
  let x_5194 : i32 = GLF_live5G_2;
  let x_5197 : i32 = GLF_live5H_2;
  let x_5200 : i32 = GLF_live5I_2;
  let x_5203 : i32 = GLF_live5J_2;
  let x_5207 : i32 = GLF_live5B_2;
  let x_5208 : i32 = GLF_live5D_2;
  let x_5211 : i32 = GLF_live5E_2;
  let x_5213 : i32 = GLF_live5F_2;
  let x_5216 : i32 = GLF_live5H_2;
  let x_5219 : i32 = GLF_live5I_2;
  let x_5222 : i32 = GLF_live5J_2;
  let x_5225 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5225 & (((((((((((~(x_5157) | ~(x_5159)) | x_5162) | (0 | ~(x_5164))) | ~(x_5168)) * 1) | ~(x_5172)) | (i32(x_5176) ^ ~(x_5178))) | x_5182) & (((((((~(x_5184) | ~(x_5186)) | ~(x_5189)) | x_5192) | ~(x_5194)) | ~(x_5197)) | ~(x_5200)) | x_5203)) ^ 0) & ((((((x_5207 | ~(x_5208)) | x_5211) | ~(x_5213)) | ~(x_5216)) | ~(x_5219)) | x_5222)));
  if (false) {
    x_GLF_color = vec4<f32>(-985.692993164, -3.200000048, -1033.067016602, 8.199999809);
  }
  let x_5234 : i32 = GLF_live5A_2;
  let x_5235 : i32 = GLF_live5B_2;
  let x_5237 : i32 = GLF_live5C_2;
  let x_5239 : i32 = GLF_live5D_2;
  let x_5242 : i32 = GLF_live5E_2;
  let x_5244 : i32 = GLF_live5G_2;
  let x_5247 : i32 = GLF_live5H_2;
  let x_5250 : i32 = GLF_live5I_2;
  let x_5251 : i32 = GLF_live5I_2;
  let x_5255 : i32 = GLF_live5J_2;
  let x_5257 : i32 = GLF_live5B_2;
  let x_5258 : i32 = GLF_live5C_2;
  let x_5260 : i32 = GLF_live5D_2;
  let x_5262 : i32 = GLF_live5E_2;
  let x_5265 : i32 = GLF_live5F_2;
  let x_5267 : i32 = GLF_live5G_2;
  let x_5270 : i32 = GLF_live5H_2;
  let x_5273 : i32 = GLF_live5I_2;
  let x_5275 : i32 = GLF_live5I_2;
  let x_5279 : i32 = GLF_live5J_2;
  let x_5282 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5282 & (((((((((x_5234 | x_5235) | x_5237) | ~(x_5239)) | x_5242) | ~(x_5244)) | ~(x_5247)) | ~(max(x_5250, x_5251))) | x_5255) & ((((((((x_5257 | x_5258) | x_5260) | ~(x_5262)) | x_5265) | ~(x_5267)) | ~(x_5270)) | max(~(x_5273), ~(x_5275))) | x_5279)));
  GLF_live8_looplimiter3 = 0;
  GLF_live8k = 41620;
  GLF_live8j = -35117;
  GLF_live8matrix_u_1 = vec4<f32>(22.719999313, 2606.807128906, -5.800000191, -6928.795410156);
  GLF_live8matrix_a = mat4x4<f32>(vec4<f32>(0.093196645, -2.761856794, -0.115166701, 1.44072032), vec4<f32>(-0.013737926, -2.390244007, -11.780282021, -0.316455692), vec4<f32>(9.078000069, -615.789855957, -1701.080078125, 0.29361558), vec4<f32>(-0.00164147012, -0.496881992, -0.00118213193, 104.979370117));
  GLF_live8beta = -25.781999588;
  let x_5322 : i32 = GLF_live8MATRIX_N;
  GLF_live8a = (vec3<i32>(x_5322, 1, 1).x - 1);
  loop {
    let x_5331 : i32 = GLF_live8a;
    let x_5332 : i32 = GLF_live8k;
    if ((x_5331 >= x_5332)) {
    } else {
      break;
    }
    let x_5334 : i32 = GLF_live8_looplimiter3;
    if ((x_5334 >= 5)) {
      break;
    }
    let x_5339 : i32 = GLF_live8_looplimiter3;
    GLF_live8_looplimiter3 = (x_5339 + 1);
    let x_5341 : i32 = GLF_live8a;
    let x_5343 : i32 = GLF_live8j;
    let x_5345 : i32 = GLF_live8a;
    let x_5347 : i32 = GLF_live8j;
    let x_5350 : f32 = GLF_live8matrix_a[clamp(x_5345, 0, 3)][clamp(x_5347, 0, 3)];
    let x_5351 : f32 = GLF_live8beta;
    let x_5352 : i32 = GLF_live8a;
    let x_5355 : f32 = GLF_live8matrix_u_1[clamp(x_5352, 0, 3)];
    GLF_live8matrix_a[clamp(x_5341, 0, 3)][clamp(x_5343, 0, 3)] = (x_5350 - (x_5351 * x_5355));

    continuing {
      let x_5359 : i32 = GLF_live8a;
      GLF_live8a = (x_5359 - 1);
    }
  }
  let x_5361 : i32 = GLF_live5A_2;
  let x_5362 : i32 = GLF_live5C_2;
  let x_5365 : i32 = GLF_live5D_2;
  let x_5367 : i32 = GLF_live5E_2;
  let x_5369 : i32 = GLF_live5F_2;
  let x_5371 : i32 = GLF_live5G_2;
  let x_5374 : i32 = GLF_live5H_2;
  let x_5377 : i32 = GLF_live5I_2;
  let x_5380 : i32 = GLF_live5J_2;
  let x_5382 : i32 = GLF_live5B_2;
  let x_5383 : i32 = GLF_live5C_2;
  let x_5386 : i32 = GLF_live5D_2;
  let x_5388 : i32 = GLF_live5E_2;
  let x_5390 : i32 = GLF_live5F_2;
  let x_5392 : i32 = GLF_live5G_2;
  let x_5395 : i32 = GLF_live5H_2;
  let x_5398 : i32 = GLF_live5J_2;
  let x_5402 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5402 & (((((((((x_5361 | ~(x_5362)) | x_5365) | x_5367) | x_5369) | ~(x_5371)) | ~(x_5374)) | ~(x_5377)) | x_5380) & (((((((x_5382 | ~(x_5383)) | x_5386) | x_5388) | x_5390) | ~(x_5392)) | ~(x_5395)) | (0 + x_5398))));
  let x_5404 : i32 = GLF_live5A_2;
  let x_5406 : i32 = GLF_live5B_2;
  let x_5409 : i32 = GLF_live5C_2;
  let x_5411 : i32 = GLF_live5D_2;
  let x_5413 : i32 = GLF_live5E_2;
  let x_5415 : i32 = GLF_live5F_2;
  let x_5417 : i32 = GLF_live5G_2;
  let x_5420 : i32 = GLF_live5H_2;
  let x_5423 : i32 = GLF_live5I_2;
  let x_5426 : i32 = GLF_live5J_2;
  let x_5428 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5428 & (((((((((~(x_5404) | ~(x_5406)) | x_5409) | x_5411) | x_5413) | x_5415) | ~(x_5417)) | ~(x_5420)) | ~(x_5423)) | x_5426));
  let x_5430 : i32 = GLF_live5A_2;
  let x_5431 : i32 = GLF_live5B_2;
  let x_5433 : i32 = GLF_live5C_2;
  let x_5436 : i32 = GLF_live5D_2;
  let x_5439 : i32 = GLF_live5E_2;
  let x_5442 : i32 = GLF_live5G_2;
  let x_5444 : i32 = GLF_live5H_2;
  let x_5447 : i32 = GLF_live5I_2;
  let x_5450 : i32 = GLF_live5J_2;
  let x_5452 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5452 & ((((((((x_5430 | x_5431) | ~(x_5433)) | ~(x_5436)) | (0 + x_5439)) | x_5442) | ~(x_5444)) | ~(x_5447)) | x_5450));
  let x_5454 : i32 = GLF_live5B_2;
  let x_5456 : i32 = GLF_live5D_2;
  let x_5458 : i32 = GLF_live5E_2;
  let x_5460 : i32 = GLF_live5F_2;
  let x_5463 : i32 = GLF_live5G_2;
  let x_5466 : i32 = GLF_live5H_2;
  let x_5469 : i32 = GLF_live5I_2;
  let x_5472 : i32 = GLF_live5J_2;
  let x_5474 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5474 & ((((((((~(x_5454) | x_5456) | x_5458) | ~(x_5460)) | x_5463) + 0) | ~(x_5466)) | ~(x_5469)) | x_5472));
  let x_5476 : i32 = GLF_live5B_2;
  let x_5478 : i32 = GLF_live5C_2;
  let x_5480 : i32 = GLF_live5D_2;
  let x_5483 : i32 = GLF_live5E_2;
  let x_5485 : i32 = GLF_live5F_2;
  let x_5487 : i32 = GLF_live5G_2;
  let x_5489 : i32 = GLF_live5H_2;
  let x_5492 : i32 = GLF_live5I_2;
  let x_5495 : i32 = GLF_live5J_2;
  let x_5497 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5497 & ((((((((~(x_5476) | x_5478) | ~(x_5480)) | x_5483) | x_5485) | x_5487) | ~(x_5489)) | ~(x_5492)) | x_5495));
  let x_5499 : i32 = GLF_live5A_2;
  let x_5501 : i32 = GLF_live5B_2;
  let x_5504 : i32 = GLF_live5C_2;
  let x_5507 : i32 = GLF_live5D_2;
  let x_5509 : i32 = GLF_live5E_2;
  let x_5511 : i32 = GLF_live5F_2;
  let x_5513 : i32 = GLF_live5G_2;
  let x_5515 : i32 = GLF_live5I_2;
  let x_5518 : i32 = GLF_live5J_2;
  let x_5520 : i32 = GLF_live5B_2;
  let x_5522 : i32 = GLF_live5C_2;
  let x_5525 : i32 = GLF_live5D_2;
  let x_5527 : i32 = GLF_live5E_2;
  let x_5529 : i32 = GLF_live5F_2;
  let x_5532 : i32 = GLF_live5G_2;
  let x_5535 : i32 = GLF_live5H_2;
  let x_5537 : i32 = GLF_live5I_2;
  let x_5540 : i32 = GLF_live5J_2;
  let x_5544 : i32 = GLF_live5res_2;
  let x_5545 : i32 = (x_5544 & (((((((((~(x_5499) | ~(x_5501)) | ~(x_5504)) | x_5507) | x_5509) | x_5511) | x_5513) | ~(x_5515)) | x_5518) & (((((((((~(x_5520) | ~(x_5522)) | x_5525) | x_5527) | ~(x_5529)) | ~(x_5532)) | x_5535) | ~(x_5537)) | x_5540) ^ 0)));
  GLF_live5res_2 = x_5545;
  let x_5547 : i32 = ((1 * x_5545) ^ 0);
  let x_5548 : i32 = GLF_live5A_2;
  let x_5550 : i32 = GLF_live5B_2;
  let x_5552 : i32 = GLF_live5C_2;
  let x_5554 : i32 = GLF_live5D_2;
  let x_5556 : i32 = GLF_live5E_2;
  let x_5558 : i32 = GLF_live5H_2;
  let x_5560 : i32 = GLF_live5I_2;
  let x_5563 : i32 = GLF_live5J_2;
  let x_5566 : i32 = GLF_live5B_2;
  let x_5567 : i32 = GLF_live5C_2;
  let x_5569 : i32 = GLF_live5D_2;
  let x_5571 : i32 = GLF_live5E_2;
  let x_5573 : i32 = GLF_live5F_2;
  let x_5575 : i32 = GLF_live5G_2;
  let x_5578 : i32 = GLF_live5H_2;
  let x_5580 : i32 = GLF_live5I_2;
  let x_5583 : i32 = GLF_live5J_2;
  let x_5586 : i32 = GLF_live5A_2;
  let x_5587 : i32 = GLF_live5B_2;
  let x_5589 : i32 = GLF_live5C_2;
  let x_5591 : i32 = GLF_live5D_2;
  let x_5594 : i32 = GLF_live5E_2;
  let x_5596 : i32 = GLF_live5F_2;
  let x_5598 : i32 = GLF_live5G_2;
  let x_5600 : i32 = GLF_live5H_2;
  let x_5602 : i32 = GLF_live5I_2;
  let x_5606 : i32 = GLF_live5A_2;
  let x_5607 : i32 = GLF_live5B_2;
  let x_5609 : i32 = GLF_live5C_2;
  let x_5611 : i32 = GLF_live5D_2;
  let x_5614 : i32 = GLF_live5E_2;
  let x_5616 : i32 = GLF_live5F_2;
  let x_5618 : i32 = GLF_live5G_2;
  let x_5620 : i32 = GLF_live5H_2;
  let x_5622 : i32 = GLF_live5I_2;
  let x_5625 : i32 = GLF_live5A_2;
  let x_5626 : i32 = GLF_live5B_2;
  let x_5628 : i32 = GLF_live5C_2;
  let x_5630 : i32 = GLF_live5D_2;
  let x_5633 : i32 = GLF_live5E_2;
  let x_5635 : i32 = GLF_live5F_2;
  let x_5637 : i32 = GLF_live5G_2;
  let x_5639 : i32 = GLF_live5H_2;
  let x_5641 : i32 = GLF_live5I_2;
  let x_5645 : i32 = GLF_live5J_2;
  let x_5648 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5648 & ((((((((((~(x_5548) | x_5550) | x_5552) | x_5554) | x_5556) | x_5558) | ~(x_5560)) | x_5563) >> bitcast<u32>(0)) & ((((((((x_5566 | x_5567) | x_5569) | x_5571) | x_5573) | ~(x_5575)) | x_5578) | ~(x_5580)) | x_5583)) & (clamp((1 * ((((((((x_5586 | x_5587) | x_5589) | ~(x_5591)) | x_5594) | x_5596) | x_5598) | x_5600) | ~(x_5602))), ((((((((x_5606 | x_5607) | x_5609) | ~(x_5611)) | x_5614) | x_5616) | x_5618) | x_5620) | ~(x_5622)), ((((((((x_5625 | x_5626) | x_5628) | ~(x_5630)) | x_5633) | x_5635) | x_5637) | x_5639) | ~(x_5641))) | x_5645)));
  let x_5650 : i32 = GLF_live5A_2;
  let x_5651 : i32 = GLF_live5B_2;
  let x_5654 : i32 = GLF_live5C_2;
  let x_5656 : i32 = GLF_live5D_2;
  let x_5658 : i32 = GLF_live5A_2;
  let x_5659 : i32 = GLF_live5B_2;
  let x_5662 : i32 = GLF_live5C_2;
  let x_5664 : i32 = GLF_live5D_2;
  let x_5666 : i32 = GLF_live5A_2;
  let x_5667 : i32 = GLF_live5B_2;
  let x_5670 : i32 = GLF_live5C_2;
  let x_5672 : i32 = GLF_live5D_2;
  let x_5675 : i32 = GLF_live5A_2;
  let x_5676 : i32 = GLF_live5B_2;
  let x_5679 : i32 = GLF_live5C_2;
  let x_5681 : i32 = GLF_live5D_2;
  let x_5684 : i32 = GLF_live5E_2;
  let x_5686 : i32 = GLF_live5F_2;
  let x_5688 : i32 = GLF_live5G_2;
  let x_5690 : i32 = GLF_live5H_2;
  let x_5692 : i32 = GLF_live5I_2;
  let x_5695 : i32 = GLF_live5J_2;
  let x_5697 : i32 = GLF_live5B_2;
  let x_5701 : i32 = GLF_live5D_2;
  let x_5706 : i32 = GLF_live5E_2;
  let x_5708 : i32 = GLF_live5F_2;
  let x_5711 : i32 = GLF_live5G_2;
  let x_5714 : i32 = GLF_live5H_2;
  let x_5717 : i32 = GLF_live5I_2;
  let x_5719 : i32 = GLF_live5J_2;
  let x_5722 : i32 = GLF_live5A_2;
  let x_5724 : i32 = GLF_live5B_2;
  let x_5727 : i32 = GLF_live5C_2;
  let x_5729 : i32 = GLF_live5E_2;
  let x_5732 : i32 = GLF_live5G_2;
  let x_5735 : i32 = GLF_live5H_2;
  let x_5738 : i32 = GLF_live5I_2;
  let x_5740 : i32 = GLF_live5J_2;
  let x_5744 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5744 & ((((((((clamp((((x_5650 | ~(x_5651)) | x_5654) | x_5656), min((((x_5658 | ~(x_5659)) | x_5662) | x_5664), (((x_5666 | ~(x_5667)) | x_5670) | x_5672)), (((x_5675 | ~(x_5676)) | x_5679) | x_5681)) | x_5684) | x_5686) | x_5688) | x_5690) | ~(x_5692)) | x_5695) & (((((((~(((0 | x_5697) ^ 0)) | ~(~((x_5701 | 0)))) | x_5706) | ~(x_5708)) | ~(x_5711)) | ~(x_5714)) | x_5717) | x_5719)) & (((((((~(x_5722) | ~(x_5724)) | x_5727) | ~(x_5729)) | ~(x_5732)) | ~(x_5735)) | x_5738) | ~(x_5740))));
  let x_5746 : i32 = GLF_live5A_2;
  let x_5749 : i32 = GLF_live5D_2;
  let x_5752 : i32 = GLF_live5E_2;
  let x_5755 : i32 = GLF_live5F_2;
  let x_5758 : i32 = GLF_live5G_2;
  let x_5760 : i32 = GLF_live5H_2;
  let x_5763 : i32 = GLF_live5I_2;
  let x_5765 : i32 = GLF_live5J_2;
  let x_5768 : i32 = GLF_live5A_2;
  let x_5769 : i32 = GLF_live5B_2;
  let x_5771 : i32 = GLF_live5E_2;
  let x_5774 : i32 = GLF_live5F_2;
  let x_5778 : i32 = GLF_live5G_2;
  let x_5781 : i32 = GLF_live5H_2;
  let x_5783 : i32 = GLF_live5I_2;
  let x_5785 : i32 = GLF_live5J_2;
  let x_5789 : i32 = GLF_live5B_2;
  let x_5791 : i32 = GLF_live5C_2;
  let x_5793 : i32 = GLF_live5D_2;
  let x_5795 : i32 = GLF_live5E_2;
  let x_5798 : i32 = GLF_live5F_2;
  let x_5800 : i32 = GLF_live5G_2;
  let x_5803 : i32 = GLF_live5H_2;
  let x_5805 : i32 = GLF_live5I_2;
  let x_5807 : i32 = GLF_live5J_2;
  let x_5811 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5811 & ((((((((((0 + ~(x_5746)) | ~(x_5749)) | ~(x_5752)) | ~(x_5755)) | x_5758) | ~(x_5760)) | x_5763) | ~(x_5765)) & ((((((((x_5768 | x_5769) | ~(x_5771)) | ~(x_5774)) << bitcast<u32>(0)) | ~(x_5778)) | x_5781) | x_5783) | ~(x_5785))) & ((((((((~(x_5789) | x_5791) | x_5793) | ~(x_5795)) | x_5798) | ~(x_5800)) | x_5803) | x_5805) | ~(x_5807))));
  let x_5813 : i32 = GLF_live5B_2;
  let x_5815 : i32 = GLF_live5C_2;
  let x_5818 : i32 = GLF_live5D_2;
  let x_5821 : i32 = GLF_live5E_2;
  let x_5823 : i32 = GLF_live5F_2;
  let x_5825 : i32 = GLF_live5G_2;
  let x_5829 : i32 = GLF_live5H_2;
  let x_5830 : i32 = GLF_live5H_2;
  let x_5831 : i32 = GLF_live5H_2;
  let x_5835 : i32 = GLF_live5I_2;
  let x_5837 : i32 = GLF_live5J_2;
  let x_5840 : i32 = GLF_live5A_2;
  let x_5842 : i32 = GLF_live5B_2;
  let x_5845 : i32 = GLF_live5C_2;
  let x_5847 : i32 = GLF_live5D_2;
  let x_5850 : i32 = GLF_live5G_2;
  let x_5852 : i32 = GLF_live5H_2;
  let x_5854 : i32 = GLF_live5I_2;
  let x_5856 : i32 = GLF_live5J_2;
  let x_5862 : i32 = GLF_live5C_2;
  let x_5864 : i32 = GLF_live5D_2;
  let x_5866 : i32 = GLF_live5E_2;
  let x_5869 : i32 = GLF_live5F_2;
  let x_5872 : i32 = GLF_live5G_2;
  let x_5874 : i32 = GLF_live5H_2;
  let x_5876 : i32 = GLF_live5I_2;
  let x_5878 : i32 = GLF_live5J_2;
  let x_5882 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5882 & ((((((((((~(x_5813) | ~(x_5815)) | ~(x_5818)) | x_5821) | x_5823) | ~((1 * x_5825))) | (1 * clamp(x_5829, x_5830, x_5831))) | x_5835) | ~(x_5837)) & (((((((~(x_5840) | ~(x_5842)) | x_5845) | ~(x_5847)) | x_5850) | x_5852) | x_5854) | ~(~(~(x_5856))))) & (((((((~(x_5862) | x_5864) | ~(x_5866)) | ~(x_5869)) | x_5872) | x_5874) | x_5876) | ~(x_5878))));
  let x_5884 : i32 = GLF_live5A_2;
  let x_5886 : i32 = GLF_live5B_2;
  let x_5888 : i32 = GLF_live5C_2;
  let x_5890 : i32 = GLF_live5E_2;
  let x_5892 : i32 = GLF_live5F_2;
  let x_5894 : i32 = GLF_live5G_2;
  let x_5896 : i32 = GLF_live5H_2;
  let x_5899 : i32 = GLF_live5I_2;
  let x_5902 : i32 = GLF_live5J_2;
  let x_5905 : i32 = GLF_live5A_2;
  let x_5907 : i32 = GLF_live5B_2;
  let x_5909 : i32 = GLF_live5C_2;
  let x_5911 : i32 = GLF_live5E_2;
  let x_5913 : i32 = GLF_live5F_2;
  let x_5915 : i32 = GLF_live5G_2;
  let x_5917 : i32 = GLF_live5H_2;
  let x_5920 : i32 = GLF_live5I_2;
  let x_5923 : i32 = GLF_live5J_2;
  let x_5926 : i32 = GLF_live5A_2;
  let x_5928 : i32 = GLF_live5B_2;
  let x_5930 : i32 = GLF_live5C_2;
  let x_5932 : i32 = GLF_live5E_2;
  let x_5934 : i32 = GLF_live5F_2;
  let x_5936 : i32 = GLF_live5G_2;
  let x_5938 : i32 = GLF_live5H_2;
  let x_5941 : i32 = GLF_live5I_2;
  let x_5944 : i32 = GLF_live5J_2;
  let x_5947 : i32 = GLF_live5A_2;
  let x_5949 : i32 = GLF_live5B_2;
  let x_5951 : i32 = GLF_live5C_2;
  let x_5953 : i32 = GLF_live5E_2;
  let x_5955 : i32 = GLF_live5F_2;
  let x_5957 : i32 = GLF_live5G_2;
  let x_5959 : i32 = GLF_live5H_2;
  let x_5962 : i32 = GLF_live5I_2;
  let x_5965 : i32 = GLF_live5J_2;
  let x_5970 : i32 = GLF_live5A_2;
  let x_5972 : i32 = GLF_live5B_2;
  let x_5974 : i32 = GLF_live5D_2;
  let x_5976 : i32 = GLF_live5E_2;
  let x_5978 : i32 = GLF_live5G_2;
  let x_5981 : i32 = GLF_live5H_2;
  let x_5983 : i32 = GLF_live5I_2;
  let x_5986 : i32 = GLF_live5J_2;
  let x_5989 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_5989 & (min((((((((((~(x_5884) | x_5886) | x_5888) | x_5890) | x_5892) | x_5894) | ~(x_5896)) | ~(x_5899)) | x_5902) | 0), clamp((((((((((~(x_5905) | x_5907) | x_5909) | x_5911) | x_5913) | x_5915) | ~(x_5917)) | ~(x_5920)) | x_5923) | 0), (((((((((~(x_5926) | x_5928) | x_5930) | x_5932) | x_5934) | x_5936) | ~(x_5938)) | ~(x_5941)) | x_5944) | 0), (((((((((~(x_5947) | x_5949) | x_5951) | x_5953) | x_5955) | x_5957) | ~(x_5959)) | ~(x_5962)) | x_5965) | 0))) & (((((((~(x_5970) | x_5972) | x_5974) | x_5976) | ~(x_5978)) | x_5981) | ~(x_5983)) | x_5986)));
  let x_5991 : i32 = GLF_live5A_2;
  let x_5992 : i32 = GLF_live5B_2;
  let x_5994 : i32 = GLF_live5C_2;
  let x_5995 : i32 = GLF_live5C_2;
  let x_5996 : i32 = GLF_live5C_2;
  let x_5998 : i32 = GLF_live5C_2;
  let x_6001 : i32 = GLF_live5C_2;
  let x_6005 : i32 = GLF_live5D_2;
  let x_6008 : i32 = GLF_live5E_2;
  let x_6011 : i32 = GLF_live5F_2;
  let x_6014 : i32 = GLF_live5H_2;
  let x_6017 : i32 = GLF_live5I_2;
  let x_6019 : i32 = GLF_live5J_2;
  let x_6022 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_6022 & ((((((((x_5991 | x_5992) | ~(clamp(clamp(x_5994, x_5995, x_5996), select(16104, x_5998, true), x_6001))) | ~(x_6005)) | ~(x_6008)) | ~(x_6011)) | ~(x_6014)) | x_6017) | ~(x_6019)));
  let x_6024 : i32 = GLF_live5A_2;
  let x_6026 : i32 = GLF_live5C_2;
  let x_6029 : i32 = GLF_live5E_2;
  let x_6032 : i32 = GLF_live5F_2;
  let x_6035 : i32 = GLF_live5G_2;
  let x_6037 : i32 = GLF_live5H_2;
  let x_6039 : i32 = GLF_live5H_2;
  let x_6043 : i32 = GLF_live5I_2;
  let x_6045 : i32 = GLF_live5J_2;
  let x_6048 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_6048 & (((((((~(x_6024) | ~(x_6026)) | ~(x_6029)) | ~(x_6032)) | x_6035) | max(~(x_6037), ~(x_6039))) | x_6043) | ~(x_6045)));
  let x_6051 : f32 = gl_FragCoord.y;
  if ((x_6051 < 0.0)) {
    let x_6056 : i32 = GLF_live5J_2;
    x_6053 = x_6056;
  } else {
    let x_6058 : i32 = GLF_live5A_2;
    let x_6059 : i32 = GLF_live5B_2;
    let x_6062 : i32 = GLF_live5C_2;
    let x_6065 : i32 = GLF_live5D_2;
    x_6053 = (((x_6058 | ~(x_6059)) | ~(x_6062)) | x_6065);
  }
  let x_6067 : i32 = x_6053;
  let x_6068 : i32 = GLF_live5E_2;
  let x_6071 : i32 = GLF_live5F_2;
  let x_6074 : i32 = GLF_live5H_2;
  let x_6077 : i32 = GLF_live5I_2;
  let x_6079 : i32 = GLF_live5J_2;
  let x_6082 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_6082 & (((((x_6067 | ~(x_6068)) | ~(x_6071)) | ~(x_6074)) | x_6077) | ~(x_6079)));
  let x_6084 : i32 = GLF_live5B_2;
  let x_6085 : i32 = GLF_live5C_2;
  let x_6088 : i32 = GLF_live5D_2;
  let x_6090 : i32 = GLF_live5E_2;
  let x_6093 : i32 = GLF_live5F_2;
  let x_6096 : i32 = GLF_live5G_2;
  let x_6099 : i32 = GLF_live5H_2;
  let x_6102 : i32 = GLF_live5I_2;
  let x_6104 : i32 = GLF_live5J_2;
  let x_6106 : i32 = ((((((((x_6084 | ~(x_6085)) | x_6088) | ~(x_6090)) | ~(x_6093)) | ~(x_6096)) | ~(x_6099)) | x_6102) | ~(x_6104));
  if (false) {
    let x_6110 : i32 = GLF_live8MATRIX_N;
    x_6107 = x_6110;
  } else {
    if (false) {
      let x_6115 : i32 = count;
      x_6112 = x_6115;
    } else {
      let x_6117 : i32 = GLF_live5A_2;
      let x_6119 : i32 = GLF_live5B_2;
      let x_6122 : i32 = GLF_live5C_2;
      x_6112 = ((~(x_6117) | ~(x_6119)) | ~(x_6122));
    }
    let x_6125 : i32 = x_6112;
    x_6107 = x_6125;
  }
  let x_6126 : i32 = x_6107;
  let x_6129 : i32 = GLF_live5D_2;
  let x_6131 : i32 = GLF_live5E_2;
  let x_6134 : i32 = GLF_live5F_2;
  let x_6136 : i32 = GLF_live5H_2;
  let x_6139 : i32 = GLF_live5I_2;
  let x_6141 : i32 = GLF_live5J_2;
  let x_6145 : i32 = GLF_live5B_2;
  let x_6147 : i32 = GLF_live5C_2;
  let x_6150 : i32 = GLF_live5D_2;
  let x_6152 : i32 = GLF_live5E_2;
  let x_6155 : i32 = GLF_live5F_2;
  let x_6157 : i32 = GLF_live5G_2;
  let x_6160 : i32 = GLF_live5H_2;
  let x_6163 : i32 = GLF_live5I_2;
  let x_6165 : i32 = GLF_live5J_2;
  let x_6169 : i32 = GLF_live5res_2;
  GLF_live5res_2 = (x_6169 & ((x_6106 & ((((((vec2<i32>(x_6126, 0).x | x_6129) | ~(x_6131)) | x_6134) | ~(x_6136)) | x_6139) | ~(x_6141))) & ((((((((~(x_6145) | ~(x_6147)) | x_6150) | ~(x_6152)) | x_6155) | ~(x_6157)) | ~(x_6160)) | x_6163) | ~(x_6165))));
  let x_6171 : i32 = GLF_live5res_2;
  let x_6173 : f32 = select(1.0, 0.0, (x_6171 == 0));
  let x_6174 : vec3<f32> = vec3<f32>(x_6173, x_6173, x_6173);
  GLF_live5_GLF_color = vec4<f32>(x_6174.x, x_6174.y, x_6174.z, 1.0);
  let x_6179 : i32 = count;
  if ((x_6179 == 20)) {
    let x_6190 : f32 = gl_FragCoord.x;
    x_GLF_color = select(vec4<f32>(893.736022949, 0.0, 0.0, 235.024993896), vec4<f32>(1.0, -3859.031982422, 1738.803222656, 1.0), vec4<bool>(true, false, false, (x_6190 >= 0.0)));
  } else {
    x_GLF_color = vec4<f32>(0.0, 0.0, 1.0, 1.0);
    if (false) {
      let x_6200 : f32 = x_168.injectionSwitch.x;
      let x_6202 : f32 = x_168.injectionSwitch.y;
      x_GLF_color = (vec4<f32>(3.700000048, select(634.315979004, -124.674003601, (x_6200 > x_6202)), 9139.940429688, -58.25) * 6.0);
    }
  }
  return;
}

struct main_out {
  [[location(0)]]
  x_GLF_color_1 : vec4<f32>;
};

[[stage(fragment)]]
fn main([[builtin(position)]] gl_FragCoord_param : vec4<f32>) -> main_out {
  gl_FragCoord = gl_FragCoord_param;
  main_1();
  return main_out(x_GLF_color);
}

fn GLF_live0pickColor_i1_(GLF_live0i : ptr<function, i32>) -> vec3<f32> {
  let x_320 : i32 = *(GLF_live0i);
  let x_324 : i32 = *(GLF_live0i);
  let x_328 : i32 = *(GLF_live0i);
  return vec3<f32>((f32(x_320) / 50.0), (f32(x_324) / 120.0), (f32(x_328) / 140.0));
}
