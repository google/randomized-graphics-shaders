[[block]]
struct buf0 {
  time : f32;
};

[[block]]
struct buf1 {
  resolution : vec2<f32>;
};

var<private> b_b : f32;

var<private> s_g : f32;

var<private> h_r : f32;

[[group(0), binding(0)]] var<uniform> x_87 : buf0;

[[group(0), binding(1)]] var<uniform> x_294 : buf1;

var<private> gl_FragCoord : vec4<f32>;

var<private> x_GLF_color : vec4<f32>;

fn defaultColor_() -> vec3<f32> {
  var x_1647 : i32 = 0;
  var x_1646 : u32 = 0u;
  var x_1645 : vec2<f32> = vec2<f32>(0.0, 0.0);
  var x_1644 : vec2<f32> = vec2<f32>(0.0, 0.0);
  var x_1643 : i32 = 0;
  var x_1642 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  var x_1641 : i32 = 0;
  let x_2066 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  var x_659_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  x_659_1.z = 40.0;
  let x_659 : vec3<f32> = x_659_1;
  let x_2067 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  return vec3<f32>(0.0, 0.0, 0.0);
}

fn doConvert_() {
  var x_1619 : bool = false;
  var x_1618 : f32 = 0.0;
  var temp : vec3<f32>;
  var x_623_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_623_1.y = 100.0;
  let x_623 : vec3<f32> = x_623_1;
  let x_37 : f32 = b_b;
  let x_882 : vec3<f32> = temp;
  let x_1819 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u];
  temp = vec3<f32>(0.0, 0.0, 0.0);
  let x_1820 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
  temp = x_882;
  let x_1821 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_1313 : vec2<f32> = vec2<f32>(0.300000012, 0.100000001);
  var x_624_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
  x_624_1.z = 0.100000001;
  let x_624 : vec3<f32> = x_624_1;
  let x_1822 : f32 = x_624.x;
  let x_1314 : vec4<f32> = vec4<f32>(x_624, 6.0);
  let x_1823 : f32 = x_882.x;
  let x_883 : f32 = s_g;
  s_g = 0.0;
  s_g = x_883;
  let x_40 : f32 = s_g;
  let x_1824 : f32 = x_882.x;
  let x_41 : f32 = (1.0 - x_40);
  let x_1315 : vec4<f32> = vec4<f32>(x_882, 4.0);
  let x_1825 : f32 = vec2<f32>(0.5, 0.5).x;
  let x_884 : f32 = b_b;
  let x_1826 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_1316 : vec2<f32> = vec2<f32>(3.0, 1.0);
  b_b = 0.0;
  let x_1827 : f32 = x_624.x;
  let x_1317 : vec4<f32> = vec4<f32>(vec3<f32>(0.0, 0.333333343, 0.666666687), 0.01);
  let x_1828 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  b_b = x_884;
  let x_1829 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_42 : f32 = (x_41 * x_37);
  let x_1830 : f32 = x_624.y;
  let x_1318 : vec2<f32> = vec2<f32>(0.300000012, 6.0);
  let x_885 : f32 = s_g;
  let x_1831 : f32 = x_1313.y;
  s_g = 0.0;
  let x_1832 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u].x;
  s_g = x_885;
  var x_625_1 : vec3<f32> = x_624;
  x_625_1.z = x_42;
  let x_625 : vec3<f32> = x_625_1;
  let x_1833 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_886 : f32 = h_r;
  h_r = 0.0;
  let x_1834 : f32 = x_1315.w;
  h_r = x_886;
  let x_1835 : f32 = x_623.x;
  let x_43 : f32 = b_b;
  let x_1836 : f32 = x_625.y;
  let x_1319 : vec3<f32> = vec3<f32>(vec2<f32>(0.5, 0.5), 3.0);
  let x_1837 : f32 = x_1318.y;
  let x_887 : f32 = b_b;
  b_b = 0.0;
  let x_1838 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u].y;
  b_b = x_887;
  let x_1839 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_792 : f32 = x_624.z;
  let x_888 : f32 = s_g;
  let x_1840 : f32 = vec2<f32>(0.5, 0.5).y;
  s_g = 0.0;
  let x_1841 : f32 = vec2<f32>(0.5, 0.5).y;
  let x_1320 : vec3<f32> = vec3<f32>(vec2<f32>(0.0, 0.0), 0.100000001);
  s_g = x_888;
  var x_626_1 : vec3<f32> = x_623;
  x_626_1.y = x_792;
  let x_626 : vec3<f32> = x_626_1;
  let x_44 : f32 = b_b;
  let x_1842 : f32 = vec2<f32>(0.0, 0.0).x;
  let x_889 : f32 = b_b;
  b_b = 0.0;
  let x_1843 : f32 = x_882.x;
  b_b = x_889;
  let x_45 : f32 = s_g;
  let x_1844 : f32 = vec2<f32>(0.0, 0.0).x;
  let x_1321 : vec4<f32> = vec4<f32>(6.0, x_45, x_44, x_792);
  let x_890 : f32 = h_r;
  let x_1845 : f32 = x_626.x;
  let x_1322 : vec2<f32> = vec2<f32>(x_41, x_37);
  let x_1846 : f32 = x_1321.x;
  h_r = 0.0;
  h_r = x_890;
  var x_627_1 : vec3<f32> = x_626;
  x_627_1.y = 6.0;
  let x_627 : vec3<f32> = x_627_1;
  let x_1847 : f32 = vec2<f32>(0.5, 0.5).y;
  let x_891 : f32 = h_r;
  h_r = 0.0;
  let x_1848 : f32 = x_624.y;
  h_r = x_891;
  let x_1849 : f32 = x_1313.x;
  let x_46 : f32 = (1.0 - x_45);
  let x_1323 : vec4<f32> = vec4<f32>(x_890, 10.0, x_884, x_888);
  let x_1850 : f32 = x_1321.y;
  let x_892 : f32 = s_g;
  s_g = 0.0;
  s_g = x_892;
  let x_1851 : f32 = x_1314.x;
  var x_628_1 : vec3<f32> = x_627;
  x_628_1.x = 0.666666687;
  let x_628 : vec3<f32> = x_628_1;
  let x_1852 : f32 = x_1321.x;
  let x_47 : f32 = (x_44 * x_46);
  let x_1853 : f32 = x_624.x;
  let x_893 : f32 = b_b;
  let x_1854 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u];
  let x_1324 : vec3<f32> = vec3<f32>(3.0, x_792, 4.0);
  b_b = 0.0;
  b_b = x_893;
  let x_1855 : f32 = x_626.y;
  let x_48 : f32 = (x_43 - x_47);
  let x_894 : f32 = b_b;
  let x_1856 : f32 = vec2<f32>(0.5, 0.5).x;
  b_b = 0.0;
  let x_1857 : f32 = vec2<f32>(0.5, 0.5).x;
  b_b = x_894;
  let x_1858 : f32 = x_624.x;
  let x_51 : f32 = h_r;
  let x_1859 : f32 = x_882.y;
  let x_56 : vec3<f32> = vec3<f32>(x_51, x_51, x_51);
  let x_1860 : f32 = x_624.z;
  let x_57 : vec3<f32> = (x_56 - vec3<f32>(0.0, 0.333333343, 0.666666687));
  let x_895 : f32 = b_b;
  b_b = 0.0;
  b_b = x_895;
  let x_58 : vec3<f32> = (x_57 * 6.0);
  let x_896 : vec3<f32> = temp;
  temp = vec3<f32>(0.0, 0.0, 0.0);
  temp = x_896;
  let x_1325 : vec3<f32> = vec3<f32>(x_47, x_892, x_46);
  let x_1861 : f32 = x_1317.y;
  var x_629_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_629_1.y = 0.300000012;
  let x_629 : vec3<f32> = x_629_1;
  let x_1862 : f32 = x_1314.z;
  let x_59 : vec3<f32> = abs(x_58);
  let x_1863 : f32 = vec2<f32>(0.5, 0.5).y;
  var x_630_1 : vec3<f32> = x_59;
  x_630_1.x = x_43;
  let x_630 : vec3<f32> = x_630_1;
  let x_1864 : f32 = x_1314.z;
  let x_897 : f32 = h_r;
  let x_1326 : vec3<f32> = vec3<f32>(x_47, 0.333333343, 3.0);
  let x_1865 : f32 = vec2<f32>(0.5, 0.5).x;
  h_r = 0.0;
  h_r = x_897;
  let x_61 : vec3<f32> = vec3<f32>(3.0, 3.0, 3.0);
  let x_1866 : f32 = x_1313.x;
  let x_898 : f32 = h_r;
  let x_1867 : f32 = x_1324.x;
  h_r = 0.0;
  let x_1868 : f32 = x_1322.y;
  h_r = x_898;
  let x_1869 : f32 = x_624.x;
  let x_1870 : f32 = x_56.z;
  let x_899 : vec3<f32> = temp;
  let x_1871 : f32 = x_1313.x;
  temp = vec3<f32>(0.0, 0.0, 0.0);
  let x_1872 : f32 = x_57.y;
  temp = x_899;
  let x_1873 : f32 = x_1322.y;
  var x_631_1 : vec3<f32> = x_56;
  x_631_1.x = x_625.z;
  let x_631 : vec3<f32> = x_631_1;
  let x_900 : f32 = b_b;
  let x_1327 : vec4<f32> = vec4<f32>(vec2<f32>(0.5, 0.5), x_42, x_890);
  b_b = 0.0;
  let x_1874 : f32 = x_58.y;
  b_b = x_900;
  let x_1875 : f32 = x_896.x;
  var x_632_1 : vec3<f32> = x_57;
  x_632_1.x = 100.0;
  let x_632 : vec3<f32> = x_632_1;
  let x_1876 : f32 = x_61.z;
  let x_1328 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.5, 0.5));
  let x_1877 : f32 = x_1316.x;
  let x_901 : f32 = h_r;
  let x_1878 : f32 = x_1318.x;
  h_r = 0.0;
  h_r = x_901;
  let x_1879 : f32 = x_61.z;
  let x_1329 : vec4<f32> = vec4<f32>(x_900, x_61);
  let x_902 : f32 = s_g;
  s_g = 0.0;
  let x_1880 : f32 = vec2<f32>(0.0, 0.0).x;
  s_g = x_902;
  let x_65 : vec3<f32> = (abs((x_59 - x_61)) - vec3<f32>(1.0, 1.0, 1.0));
  let x_1881 : vec2<f32> = x_1328[1u];
  let x_903 : vec3<f32> = temp;
  let x_1882 : f32 = x_1324.z;
  temp = vec3<f32>(0.0, 0.0, 0.0);
  let x_1883 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  temp = x_903;
  let x_1884 : vec2<f32> = x_1328[0u];
  let x_1885 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  let x_904 : vec3<f32> = temp;
  temp = vec3<f32>(0.0, 0.0, 0.0);
  temp = x_904;
  var x_633_1 : vec3<f32> = x_628;
  x_633_1.x = x_624.z;
  let x_633 : vec3<f32> = x_633_1;
  let x_1886 : f32 = x_1325.y;
  let x_905 : vec3<f32> = temp;
  temp = vec3<f32>(0.0, 0.0, 0.0);
  let x_1887 : vec2<f32> = x_1328[1u];
  let x_1888 : f32 = x_1325.z;
  temp = x_905;
  let x_1889 : f32 = x_1316.y;
  let x_906 : f32 = b_b;
  let x_1890 : f32 = x_1318.y;
  b_b = 0.0;
  b_b = x_906;
  let x_1891 : f32 = x_1317.x;
  let x_68 : vec3<f32> = clamp(x_65, vec3<f32>(0.0, 0.0, 0.0), vec3<f32>(1.0, 1.0, 1.0));
  let x_1892 : f32 = x_65.x;
  let x_1334 : vec2<f32> = vec2<f32>(x_898, x_51);
  let x_907 : f32 = b_b;
  let x_1893 : f32 = vec2<f32>(0.0, 0.0).y;
  b_b = 0.0;
  let x_1894 : f32 = x_631.z;
  b_b = x_907;
  let x_1895 : f32 = x_61.y;
  let x_1336 : vec2<f32> = vec2<f32>(x_887, x_898);
  let x_1896 : vec2<f32> = x_1328[1u];
  var x_634_1 : vec3<f32> = x_58;
  x_634_1.z = 0.0;
  let x_634 : vec3<f32> = x_634_1;
  let x_1897 : f32 = x_1322.x;
  let x_908 : f32 = b_b;
  let x_1898 : f32 = x_61.z;
  b_b = 0.0;
  b_b = x_908;
  let x_69 : vec3<f32> = (x_68 * x_48);
  let x_909 : f32 = h_r;
  let x_1899 : f32 = x_629.z;
  h_r = 0.0;
  h_r = x_909;
  let x_1900 : f32 = vec3<f32>(10.0, vec2<f32>(0.5, 0.5)).z;
  let x_1901 : f32 = x_1324.x;
  let x_1902 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  var x_635_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_635_1.x = 0.666666687;
  let x_635 : vec3<f32> = x_635_1;
  let x_1337 : vec3<f32> = vec3<f32>(1.0, x_888, x_883);
  let x_1903 : f32 = x_630.z;
  let x_910 : f32 = h_r;
  let x_1904 : f32 = x_905.y;
  let x_1905 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
  h_r = 0.0;
  let x_1906 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
  h_r = x_910;
  let x_1907 : f32 = vec3<f32>(x_893, x_792, x_44).z;
  var x_636_1 : vec3<f32> = x_68;
  x_636_1.z = 100.0;
  let x_636 : vec3<f32> = x_636_1;
  let x_911 : f32 = b_b;
  b_b = 0.0;
  let x_1908 : f32 = vec3<f32>(x_51, x_47, 0.666666687).x;
  let x_1339 : vec2<f32> = vec2<f32>(x_48, x_892);
  b_b = x_911;
  let x_1909 : f32 = x_1321.y;
  temp = (x_69 + vec3<f32>(x_42, x_42, x_631.x));
  let x_1910 : f32 = x_1321.z;
  let x_74 : ptr<function, f32> = &(temp.x);
  let x_912 : f32 = h_r;
  let x_1911 : f32 = x_1325.z;
  h_r = 0.0;
  let x_1340 : vec4<f32> = vec4<f32>(x_627, x_43);
  h_r = x_912;
  let x_1912 : f32 = x_1315.x;
  var x_637_1 : vec3<f32> = x_58;
  x_637_1.z = x_43;
  let x_637 : vec3<f32> = x_637_1;
  let x_1913 : f32 = x_69.x;
  let x_913 : f32 = *(x_74);
  *(x_74) = 0.0;
  let x_1914 : f32 = vec2<f32>(x_41, x_893).x;
  let x_1341 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.5, 0.5));
  let x_1915 : f32 = vec2<f32>(0.0, 0.0).y;
  *(x_74) = x_913;
  let x_1916 : f32 = x_623.x;
  let x_75 : f32 = *(x_74);
  let x_914 : f32 = b_b;
  let x_1917 : f32 = x_1324.y;
  b_b = 0.0;
  b_b = x_914;
  h_r = x_75;
  let x_1918 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_1342 : vec2<f32> = vec2<f32>(6.0, x_889);
  let x_1919 : f32 = x_1319.y;
  let x_915 : f32 = s_g;
  s_g = 0.0;
  let x_1920 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  s_g = x_915;
  let x_1921 : f32 = vec2<f32>(x_894, 10.0).x;
  let x_1343 : vec3<f32> = vec3<f32>(1.0, 4.0, x_46);
  let x_1922 : f32 = x_632.z;
  var x_638_1 : vec3<f32> = x_628;
  x_638_1.z = 40.0;
  let x_638 : vec3<f32> = x_638_1;
  let x_1923 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  let x_916 : f32 = s_g;
  let x_1924 : f32 = x_1324.x;
  s_g = 0.0;
  let x_1925 : f32 = x_61.x;
  s_g = x_916;
  var x_639_1 : vec3<f32> = x_634;
  x_639_1.y = x_43;
  let x_639 : vec3<f32> = x_639_1;
  let x_1926 : f32 = x_1318.y;
  let x_78 : f32 = temp.y;
  let x_1927 : f32 = x_1319.z;
  let x_917 : f32 = *(x_74);
  let x_1928 : f32 = vec3<f32>(10.0, 0.5, x_902).x;
  *(x_74) = 0.0;
  *(x_74) = x_917;
  s_g = x_78;
  let x_1344 : vec2<f32> = vec2<f32>(100.0, 100.0);
  let x_918 : f32 = s_g;
  s_g = 0.0;
  let x_1929 : f32 = x_1319.x;
  s_g = x_918;
  let x_1930 : f32 = x_1343.z;
  let x_1931 : f32 = x_631.x;
  let x_81 : f32 = temp.z;
  let x_1932 : f32 = vec2<f32>(0.0, 0.0).x;
  let x_1345 : vec4<f32> = vec4<f32>(x_68, x_892);
  let x_919 : f32 = s_g;
  let x_1346 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.0, 0.0));
  s_g = 0.0;
  s_g = x_919;
  let x_1347 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.5, 0.5));
  let x_1933 : f32 = x_636.y;
  var x_640_1 : vec3<f32> = x_58;
  x_640_1.y = x_78;
  let x_640 : vec3<f32> = x_640_1;
  let x_1934 : f32 = x_633.x;
  b_b = x_81;
  let x_1935 : f32 = x_1343.z;
  let x_920 : f32 = h_r;
  let x_1936 : f32 = x_629.z;
  h_r = 0.0;
  let x_1937 : f32 = x_1325.y;
  h_r = x_920;
  let x_1938 : f32 = x_626.x;
  return;
}

fn computeColor_f1_vf2_(c : ptr<function, f32>, position : ptr<function, vec2<f32>>) -> vec3<f32> {
  var x_1640 : u32 = 0u;
  var x_1639 : i32 = 0;
  var x_1638 : i32 = 0;
  var x_1637 : f32 = 0.0;
  var x_1636 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  var x_1635 : f32 = 0.0;
  var x_1634 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  var x_1633 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  var x_1632 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  var x_1631 : bool = false;
  var x_1630 : i32 = 0;
  var x_1629 : u32 = 0u;
  var x_1628 : u32 = 0u;
  var x_1626 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  var x_1625 : i32 = 0;
  var x_1624 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);
  var x_1623 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);
  var x_1620 : f32 = 0.0;
  let x_82 : f32 = *(c);
  let x_1939 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u].x;
  let x_1348 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.5, 0.5));
  let x_1940 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  var x_641_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
  x_641_1.x = 3.0;
  let x_641 : vec3<f32> = x_641_1;
  let x_921 : f32 = h_r;
  h_r = 0.0;
  h_r = x_921;
  let x_83 : f32 = fract(x_82);
  let x_922 : f32 = *(c);
  let x_1941 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
  *(c) = 0.0;
  let x_1942 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_1349 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.5, 0.5));
  let x_1943 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  *(c) = x_922;
  var x_642_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  x_642_1.y = 0.666666687;
  let x_642 : vec3<f32> = x_642_1;
  let x_1944 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  let x_1350 : vec2<f32> = vec2<f32>(x_921, x_922);
  h_r = x_83;
  let x_1945 : f32 = x_642.x;
  let x_923 : f32 = b_b;
  b_b = 0.0;
  let x_1946 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_1351 : vec4<f32> = vec4<f32>(x_83, 40.0, x_922, x_922);
  b_b = x_923;
  let x_1947 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
  s_g = 1.0;
  let x_1948 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
  let x_924 : f32 = s_g;
  let x_1949 : f32 = x_1349[1u].x;
  let x_1352 : vec4<f32> = vec4<f32>(x_921, vec2<f32>(0.5, 0.5), 100.0);
  s_g = 0.0;
  let x_1950 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).x;
  s_g = x_924;
  let x_1951 : f32 = vec2<f32>(0.5, 0.5).y;
  let x_1952 : f32 = x_1349[1u].x;
  let x_925 : f32 = h_r;
  h_r = 0.0;
  h_r = x_925;
  let x_1953 : vec2<f32> = x_1349[0u];
  let x_1353 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.5, 0.5));
  let x_926 : f32 = h_r;
  h_r = 0.0;
  let x_1954 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u];
  h_r = x_926;
  let x_1955 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  let x_1354 : vec2<f32> = vec2<f32>(10.0, x_924);
  var x_643_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  x_643_1.y = 1.0;
  let x_643 : vec3<f32> = x_643_1;
  let x_927 : f32 = *(c);
  let x_1956 : f32 = x_1351.x;
  *(c) = 0.0;
  let x_1957 : f32 = vec4<f32>(0.0, 0.0, 0.0, 0.0).z;
  *(c) = x_927;
  let x_92 : f32 = x_87.time;
  let x_1958 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  let x_928 : vec2<f32> = *(position);
  *(position) = vec2<f32>(0.0, 0.0);
  let x_1959 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
  *(position) = x_928;
  var x_644_1 : vec3<f32> = x_641;
  x_644_1.y = 4.0;
  let x_644 : vec3<f32> = x_644_1;
  let x_1960 : vec2<f32> = x_1349[1u];
  let x_1355 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_928);
  let x_1961 : f32 = x_1352.z;
  let x_93 : f32 = sin(x_92);
  let x_929 : vec2<f32> = *(position);
  *(position) = vec2<f32>(0.0, 0.0);
  *(position) = x_929;
  let x_796 : f32 = x_642.y;
  let x_1962 : vec2<f32> = x_1349[0u];
  let x_930 : f32 = b_b;
  b_b = 0.0;
  let x_1963 : f32 = x_1351.x;
  b_b = x_930;
  let x_1964 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u].y;
  var x_645_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_645_1.z = x_796;
  let x_645 : vec3<f32> = x_645_1;
  let x_94 : f32 = (0.5 * x_93);
  let x_1965 : f32 = x_1351.w;
  let x_1357 : mat2x2<f32> = mat2x2<f32>(x_928, vec2<f32>(0.0, 0.0));
  let x_931 : vec2<f32> = *(position);
  let x_1358 : mat2x2<f32> = mat2x2<f32>(x_929, x_928);
  let x_1966 : f32 = vec2<f32>(0.5, 0.5).y;
  *(position) = vec2<f32>(0.0, 0.0);
  let x_1967 : vec2<f32> = x_1348[1u];
  let x_1359 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), x_928);
  let x_1968 : f32 = x_928.x;
  *(position) = x_931;
  let x_1969 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  let x_95 : f32 = (x_94 + 0.5);
  let x_1970 : f32 = x_642.z;
  let x_932 : f32 = b_b;
  let x_1971 : f32 = x_929.y;
  b_b = 0.0;
  b_b = x_932;
  let x_1972 : f32 = x_1352.w;
  let x_96 : f32 = (x_95 + 0.5);
  let x_1973 : f32 = x_643.x;
  let x_933 : f32 = b_b;
  b_b = 0.0;
  b_b = x_933;
  let x_1974 : f32 = x_1359[1u].x;
  let x_1360 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_931);
  b_b = x_96;
  let x_1975 : f32 = x_641.z;
  let x_934 : f32 = *(c);
  let x_1976 : vec2<f32> = x_1349[1u];
  *(c) = 0.0;
  *(c) = x_934;
  let x_1977 : f32 = x_928.x;
  var x_646_1 : vec3<f32> = x_644;
  x_646_1.z = x_82;
  let x_646 : vec3<f32> = x_646_1;
  doConvert_();
  let x_1978 : vec2<f32> = x_1359[1u];
  let x_1362 : mat2x2<f32> = mat2x2<f32>(x_931, x_928);
  var x_647_1 : vec3<f32> = x_641;
  x_647_1.x = x_92;
  let x_647 : vec3<f32> = x_647_1;
  let x_1979 : f32 = x_1354.y;
  let x_935 : f32 = h_r;
  let x_1980 : f32 = x_643.x;
  h_r = 0.0;
  let x_1981 : f32 = x_929.x;
  h_r = x_935;
  let x_1982 : f32 = x_929.y;
  let x_1983 : f32 = x_646.z;
  let x_98 : ptr<function, f32> = &((*(position)).y);
  let x_1984 : f32 = vec4<f32>(x_93, 0.300000012, 1.0, 0.100000001).y;
  var x_648_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_648_1.y = 0.5;
  let x_648 : vec3<f32> = x_648_1;
  let x_1985 : f32 = x_1362[0u].y;
  let x_936 : f32 = *(x_98);
  *(x_98) = 0.0;
  *(x_98) = x_936;
  let x_1986 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  let x_99 : f32 = *(x_98);
  let x_937 : f32 = *(x_98);
  let x_1987 : f32 = vec2<f32>(0.5, 0.5).y;
  *(x_98) = 0.0;
  let x_1988 : vec2<f32> = x_1358[0u];
  let x_1364 : vec3<f32> = vec3<f32>(6.0, x_929);
  let x_1989 : f32 = x_646.x;
  *(x_98) = x_937;
  var x_649_1 : vec3<f32> = x_642;
  x_649_1.y = x_83;
  let x_649 : vec3<f32> = x_649_1;
  let x_781 : f32 = x_643.y;
  let x_100 : f32 = (x_781 / x_99);
  let x_938 : vec2<f32> = *(position);
  let x_1990 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
  *(position) = vec2<f32>(0.0, 0.0);
  let x_1991 : f32 = x_1353[1u].y;
  *(position) = x_938;
  let x_1992 : f32 = x_1355[0u].x;
  let x_101 : f32 = s_g;
  let x_939 : f32 = *(x_98);
  let x_1993 : f32 = x_644.z;
  *(x_98) = 0.0;
  *(x_98) = x_939;
  var x_650_1 : vec3<f32> = x_643;
  x_650_1.y = x_96;
  let x_650 : vec3<f32> = x_650_1;
  let x_1994 : f32 = x_1350.x;
  let x_1365 : vec4<f32> = vec4<f32>(x_648, 0.01);
  let x_1995 : vec2<f32> = x_1348[1u];
  let x_102 : f32 = (x_101 * x_100);
  let x_1996 : f32 = x_648.z;
  let x_940 : f32 = h_r;
  let x_1997 : f32 = x_643.y;
  h_r = 0.0;
  h_r = x_940;
  let x_1998 : f32 = vec3<f32>(x_100, x_926, x_83).z;
  s_g = x_102;
  let x_103 : ptr<function, f32> = &((*(position)).x);
  let x_941 : f32 = h_r;
  h_r = 0.0;
  h_r = x_941;
  let x_1367 : mat2x2<f32> = mat2x2<f32>(x_929, vec2<f32>(0.5, 0.5));
  let x_104 : f32 = *(x_103);
  let x_1999 : f32 = vec2<f32>(x_925, x_83).x;
  let x_942 : f32 = *(x_98);
  let x_1368 : vec4<f32> = vec4<f32>(x_781, x_93, vec2<f32>(0.5, 0.5));
  *(x_98) = 0.0;
  let x_2000 : f32 = vec2<f32>(0.5, 0.5).x;
  *(x_98) = x_942;
  let x_105 : f32 = (1.0 / x_104);
  let x_943 : f32 = h_r;
  h_r = 0.0;
  let x_1369 : vec2<f32> = vec2<f32>(10.0, x_930);
  h_r = x_943;
  var x_651_1 : vec3<f32> = x_643;
  x_651_1.y = x_646.z;
  let x_651 : vec3<f32> = x_651_1;
  let x_106 : f32 = h_r;
  let x_2001 : f32 = x_1360[1u].y;
  let x_944 : f32 = b_b;
  let x_1370 : vec2<f32> = vec2<f32>(x_92, x_83);
  let x_2002 : f32 = x_1368.w;
  b_b = 0.0;
  let x_2003 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  b_b = x_944;
  let x_2004 : f32 = x_1354.x;
  let x_945 : vec2<f32> = *(position);
  *(position) = vec2<f32>(0.0, 0.0);
  let x_2005 : f32 = x_1362[1u].x;
  *(position) = x_945;
  let x_2006 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  h_r = (x_105 * x_106);
  let x_946 : f32 = *(x_98);
  *(x_98) = 0.0;
  let x_1371 : vec2<f32> = vec2<f32>(x_936, x_930);
  let x_2007 : vec2<f32> = x_1359[1u];
  *(x_98) = x_946;
  let x_2008 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
  var x_652_1 : vec3<f32> = x_649;
  x_652_1.z = x_104;
  let x_652 : vec3<f32> = x_652_1;
  let x_947 : f32 = *(x_103);
  let x_2009 : f32 = x_652.y;
  *(x_103) = 0.0;
  *(x_103) = x_947;
  let x_109 : f32 = (*(position)).y;
  let x_948 : f32 = b_b;
  let x_1373 : vec4<f32> = vec4<f32>(x_652, 0.300000012);
  let x_2010 : f32 = x_929.x;
  b_b = 0.0;
  let x_2011 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).x;
  b_b = x_948;
  let x_2012 : f32 = vec3<f32>(x_923, x_926, 100.0).z;
  let x_110 : ptr<function, f32> = &((*(position)).x);
  let x_1374 : vec3<f32> = vec3<f32>(3.0, 0.100000001, x_99);
  let x_2013 : f32 = x_1365.x;
  let x_949 : f32 = s_g;
  s_g = 0.0;
  s_g = x_949;
  let x_2014 : f32 = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.5, 0.5))[0u].x;
  var x_653_1 : vec3<f32> = x_643;
  x_653_1.z = 100.0;
  let x_653 : vec3<f32> = x_653_1;
  let x_2015 : f32 = x_1371.x;
  let x_950 : f32 = *(c);
  let x_2016 : f32 = x_931.x;
  *(c) = 0.0;
  *(c) = x_950;
  let x_2017 : f32 = vec3<f32>(0.0, x_944, 0.01).x;
  let x_111 : f32 = *(x_110);
  let x_2018 : f32 = x_1365.x;
  let x_1377 : vec3<f32> = vec3<f32>(x_924, x_796, x_99);
  let x_2019 : f32 = x_1351.x;
  let x_2020 : f32 = x_1368.y;
  let x_1378 : mat2x2<f32> = mat2x2<f32>(x_945, x_945);
  let x_2021 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
  let x_951 : f32 = *(c);
  let x_2022 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
  *(c) = 0.0;
  *(c) = x_951;
  let x_1379 : vec4<f32> = vec4<f32>(x_933, 10.0, x_939, x_95);
  let x_2023 : vec2<f32> = x_1353[1u];
  let x_952 : vec2<f32> = *(position);
  let x_2024 : f32 = x_645.x;
  *(position) = vec2<f32>(0.0, 0.0);
  *(position) = x_952;
  let x_2025 : f32 = x_653.x;
  let x_953 : f32 = s_g;
  s_g = 0.0;
  s_g = x_953;
  let x_2026 : vec2<f32> = x_1362[1u];
  if ((abs((x_109 - x_111)) < x_648.y)) {
    var x_654_1 : vec3<f32> = x_651;
    x_654_1.x = x_109;
    let x_654 : vec3<f32> = x_654_1;
    let x_1380 : vec4<f32> = vec4<f32>(x_104, x_941, 0.333333343, 0.0);
    let x_2027 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
    let x_954 : f32 = *(x_103);
    *(x_103) = 0.0;
    *(x_103) = x_954;
    let x_2028 : f32 = x_1352.z;
    let x_118 : f32 = b_b;
    let x_955 : f32 = *(c);
    let x_2029 : f32 = x_1374.x;
    *(c) = 0.0;
    let x_2030 : f32 = x_652.z;
    *(c) = x_955;
    let x_2031 : f32 = x_652.y;
    let x_1381 : vec4<f32> = vec4<f32>(x_955, x_644);
    let x_2032 : f32 = x_644.x;
    let x_1382 : mat2x2<f32> = mat2x2<f32>(x_938, x_938);
    let x_2033 : f32 = x_642.x;
    let x_956 : f32 = b_b;
    let x_2034 : f32 = x_1358[0u].x;
    b_b = 0.0;
    let x_2035 : f32 = x_931.y;
    b_b = x_956;
    let x_2036 : vec2<f32> = x_1359[0u];
    let x_957 : f32 = *(x_110);
    let x_2037 : f32 = x_1370.y;
    *(x_110) = 0.0;
    let x_2038 : f32 = x_651.y;
    *(x_110) = x_957;
    let x_1383 : vec3<f32> = vec3<f32>(x_111, x_954, x_932);
    let x_958 : f32 = b_b;
    let x_2039 : f32 = x_928.y;
    b_b = 0.0;
    b_b = x_958;
    var x_655_1 : vec3<f32> = x_650;
    x_655_1.x = x_648.y;
    let x_655 : vec3<f32> = x_655_1;
    let x_2040 : f32 = x_1360[1u].x;
    let x_959 : f32 = *(x_103);
    let x_2041 : f32 = x_1370.y;
    let x_1384 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.5, 0.5));
    *(x_103) = 0.0;
    *(x_103) = x_959;
    let x_2042 : f32 = vec2<f32>(0.0, 0.0).x;
    let x_960 : vec2<f32> = *(position);
    let x_2043 : f32 = x_1354.y;
    let x_1385 : vec2<f32> = vec2<f32>(x_958, 10.0);
    *(position) = vec2<f32>(0.0, 0.0);
    *(position) = x_960;
    var x_656_1 : vec3<f32> = x_644;
    x_656_1.x = 3.0;
    let x_656 : vec3<f32> = x_656_1;
    let x_961 : f32 = s_g;
    s_g = 0.0;
    s_g = x_961;
    b_b = clamp(0.0, x_781, (x_641.x * x_118));
    let x_2044 : f32 = x_641.z;
    let x_962 : f32 = *(x_103);
    let x_1386 : vec2<f32> = vec2<f32>(x_102, x_935);
    let x_2045 : f32 = x_1377.z;
    *(x_103) = 0.0;
    let x_2046 : f32 = x_1351.w;
    *(x_103) = x_962;
    let x_2047 : f32 = vec3<f32>(x_940, x_100, x_934).x;
  }
  let x_1387 : vec4<f32> = vec4<f32>(vec2<f32>(0.0, 0.0), x_93, x_953);
  let x_2048 : f32 = x_1377.z;
  let x_963 : f32 = h_r;
  h_r = 0.0;
  h_r = x_963;
  let x_2049 : f32 = x_928.x;
  let x_1388 : vec2<f32> = vec2<f32>(x_102, x_940);
  let x_2050 : vec2<f32> = x_1348[1u];
  var x_657_1 : vec3<f32> = x_641;
  x_657_1.y = x_95;
  let x_657 : vec3<f32> = x_657_1;
  let x_2051 : f32 = x_1371.y;
  let x_964 : f32 = *(c);
  *(c) = 0.0;
  *(c) = x_964;
  let x_2052 : f32 = x_1378[1u].y;
  let x_121 : f32 = h_r;
  let x_2053 : vec2<f32> = x_1378[0u];
  let x_1389 : vec2<f32> = vec2<f32>(0.0, x_94);
  let x_2054 : vec2<f32> = x_1355[0u];
  let x_965 : f32 = *(c);
  *(c) = 0.0;
  let x_2055 : f32 = x_1378[1u].y;
  let x_1390 : vec2<f32> = vec2<f32>(x_964, 0.666666687);
  *(c) = x_965;
  let x_2056 : f32 = x_1388.x;
  let x_1391 : vec4<f32> = vec4<f32>(x_933, 0.300000012, vec2<f32>(0.5, 0.5));
  let x_2057 : f32 = x_653.z;
  var x_658_1 : vec3<f32> = x_646;
  x_658_1.z = x_105;
  let x_658 : vec3<f32> = x_658_1;
  let x_2058 : f32 = x_1374.z;
  let x_1392 : vec2<f32> = vec2<f32>(x_932, x_965);
  let x_122 : f32 = s_g;
  let x_966 : f32 = *(x_110);
  let x_2059 : f32 = x_1388.x;
  let x_1393 : vec4<f32> = vec4<f32>(vec3<f32>(0.0, 0.0, 0.0), 40.0);
  *(x_110) = 0.0;
  *(x_110) = x_966;
  let x_123 : f32 = b_b;
  let x_2060 : f32 = x_1352.x;
  let x_967 : vec2<f32> = *(position);
  let x_1394 : mat2x2<f32> = mat2x2<f32>(x_938, x_929);
  let x_2061 : vec2<f32> = x_1360[1u];
  *(position) = vec2<f32>(0.0, 0.0);
  let x_2062 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
  *(position) = x_967;
  let x_2063 : f32 = x_1364.z;
  let x_2064 : f32 = x_645.y;
  let x_1395 : vec4<f32> = vec4<f32>(x_922, x_944, vec2<f32>(0.0, 0.0));
  let x_2065 : f32 = x_1369.x;
  return vec3<f32>(x_121, x_122, x_123);
}

fn drawShape_vf2_vf2_vf3_(pos : ptr<function, vec2<f32>>, square : ptr<function, vec2<f32>>, setting : ptr<function, vec3<f32>>) -> vec3<f32> {
  var x_1655 : i32 = 0;
  var x_1654 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);
  var x_1653 : u32 = 0u;
  var x_1652 : bool = false;
  var x_1651 : u32 = 0u;
  var x_1650 : bool = false;
  var x_1649 : u32 = 0u;
  var x_1648 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);
  var c1 : bool;
  var c2 : bool;
  var c3 : bool;
  var c4 : bool;
  var c5 : bool;
  var param : f32;
  var param_1 : vec2<f32>;
  var c6 : bool;
  var param_2 : f32;
  var param_3 : vec2<f32>;
  var c7 : bool;
  var param_4 : f32;
  var param_5 : vec2<f32>;
  var c8 : bool;
  var param_6 : f32;
  var param_7 : vec2<f32>;
  let x_132 : ptr<function, f32> = &((*(pos)).x);
  let x_969 : bool = c5;
  c5 = false;
  let x_2068 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  c5 = x_969;
  let x_2069 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u].x;
  var x_660_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_660_1.z = 40.0;
  let x_660 : vec3<f32> = x_660_1;
  let x_2070 : f32 = x_660.y;
  let x_970 : f32 = b_b;
  b_b = 0.0;
  b_b = x_970;
  let x_133 : f32 = *(x_132);
  let x_134 : ptr<function, f32> = &((*(setting)).x);
  let x_2071 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
  let x_971 : vec3<f32> = *(setting);
  let x_2072 : f32 = vec2<f32>(0.5, 0.5).y;
  *(setting) = vec3<f32>(0.0, 0.0, 0.0);
  let x_2073 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).x;
  *(setting) = x_971;
  var x_661_1 : vec3<f32> = x_660;
  x_661_1.x = 0.666666687;
  let x_661 : vec3<f32> = x_661_1;
  let x_1396 : vec4<f32> = vec4<f32>(100.0, 0.333333343, 10.0, x_970);
  let x_2074 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
  let x_972 : vec2<f32> = param_7;
  param_7 = vec2<f32>(0.0, 0.0);
  let x_2075 : f32 = vec4<f32>(0.0, 0.0, 0.0, 0.0).y;
  let x_1397 : vec3<f32> = vec3<f32>(x_972, 6.0);
  param_7 = x_972;
  let x_2076 : f32 = x_660.x;
  let x_135 : f32 = *(x_134);
  let x_2077 : f32 = x_1397.z;
  var x_662_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_662_1.z = 0.333333343;
  let x_662 : vec3<f32> = x_662_1;
  let x_136 : f32 = (x_133 - x_135);
  let x_2078 : f32 = x_1396.z;
  let x_973 : bool = c6;
  let x_2079 : f32 = x_972.x;
  let x_1398 : vec2<f32> = vec2<f32>(3.0, 40.0);
  c6 = false;
  let x_2080 : f32 = x_660.x;
  c6 = x_973;
  let x_2081 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
  let x_137 : ptr<function, f32> = &((*(square)).x);
  let x_2082 : f32 = x_660.z;
  let x_974 : bool = c5;
  let x_2083 : f32 = vec2<f32>(0.5, 0.5).y;
  c5 = false;
  c5 = x_974;
  let x_2084 : f32 = x_1396.z;
  let x_138 : f32 = *(x_137);
  let x_2085 : f32 = vec4<f32>(0.0, 0.0, 0.0, 0.0).x;
  let x_1399 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.300000012);
  let x_975 : bool = c1;
  let x_2086 : f32 = x_1399.y;
  c1 = false;
  c1 = x_975;
  let x_2087 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u];
  let x_1400 : vec4<f32> = vec4<f32>(40.0, x_135, x_972);
  var x_663_1 : vec3<f32> = x_662;
  x_663_1.y = 0.0;
  let x_663 : vec3<f32> = x_663_1;
  c1 = (x_136 < x_138);
  let x_2088 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  var x_664_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
  x_664_1.z = x_138;
  let x_664 : vec3<f32> = x_664_1;
  let x_2089 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
  let x_976 : bool = c1;
  let x_2090 : f32 = x_1396.z;
  c1 = false;
  let x_2091 : f32 = x_1400.y;
  let x_1401 : vec3<f32> = vec3<f32>(x_970, 1.0, 0.300000012);
  let x_2092 : f32 = x_1399.z;
  c1 = x_976;
  let x_2093 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
  let x_140 : bool = c1;
  let x_2094 : f32 = vec2<f32>(0.5, 0.5).y;
  let x_1402 : vec3<f32> = vec3<f32>(x_972, x_138);
  let x_2095 : f32 = x_1400.w;
  let x_977 : bool = c6;
  c6 = false;
  let x_2096 : f32 = x_1401.x;
  c6 = x_977;
  let x_2097 : f32 = x_1401.y;
  var x_665_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_665_1.x = 6.0;
  let x_665 : vec3<f32> = x_665_1;
  let x_978 : f32 = h_r;
  h_r = 0.0;
  let x_2098 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  h_r = x_978;
  let x_2099 : f32 = x_660.z;
  let x_2100 : f32 = x_1398.x;
  let x_1403 : vec2<f32> = vec2<f32>(100.0, 0.5);
  let x_979 : f32 = h_r;
  let x_2101 : f32 = x_663.x;
  h_r = 0.0;
  let x_2102 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
  h_r = x_979;
  if (!(x_140)) {
    let x_2103 : f32 = vec2<f32>(0.0, 0.0).x;
    let x_980 : vec2<f32> = *(pos);
    let x_1404 : vec3<f32> = vec3<f32>(x_978, x_136, 0.5);
    *(pos) = vec2<f32>(0.0, 0.0);
    let x_2104 : f32 = vec2<f32>(0.0, 0.0).x;
    *(pos) = x_980;
    let x_144 : vec3<f32> = defaultColor_();
    let x_2105 : f32 = x_1400.z;
    let x_981 : vec2<f32> = param_5;
    param_5 = vec2<f32>(0.0, 0.0);
    param_5 = x_981;
    let x_2106 : f32 = x_981.y;
    return x_144;
  }
  let x_982 : f32 = param_4;
  let x_2107 : f32 = x_665.x;
  param_4 = 0.0;
  param_4 = x_982;
  let x_147 : ptr<function, f32> = &((*(pos))[0u]);
  let x_2108 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
  let x_983 : vec2<f32> = *(pos);
  let x_2109 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  let x_1405 : vec4<f32> = vec4<f32>(x_970, vec3<f32>(0.300000012, 0.300000012, 0.300000012));
  *(pos) = vec2<f32>(0.0, 0.0);
  let x_2110 : f32 = x_1400.w;
  *(pos) = x_983;
  let x_148 : f32 = *(x_147);
  let x_984 : f32 = param_2;
  let x_1406 : vec2<f32> = vec2<f32>(x_135, x_982);
  param_2 = 0.0;
  param_2 = x_984;
  let x_149 : ptr<function, f32> = &((*(setting))[0]);
  var x_666_1 : vec3<f32> = x_660;
  x_666_1.z = 0.0;
  let x_666 : vec3<f32> = x_666_1;
  let x_2111 : f32 = x_972.y;
  let x_150 : f32 = *(x_149);
  var x_667_1 : vec3<f32> = x_660;
  x_667_1.z = 10.0;
  let x_667 : vec3<f32> = x_667_1;
  let x_2112 : f32 = vec2<f32>(0.5, 0.5).y;
  let x_985 : bool = c8;
  c8 = false;
  let x_2113 : f32 = x_664.y;
  c8 = x_985;
  let x_2114 : f32 = x_666.z;
  let x_151 : f32 = (x_148 + x_150);
  let x_2115 : f32 = x_972.x;
  let x_986 : f32 = b_b;
  b_b = 0.0;
  let x_2116 : f32 = x_1401.y;
  b_b = x_986;
  let x_2117 : f32 = x_1397.z;
  let x_152 : ptr<function, f32> = &((*(square)).x);
  let x_2118 : f32 = x_1402.z;
  let x_987 : f32 = *(x_134);
  let x_1407 : mat2x2<f32> = mat2x2<f32>(x_983, vec2<f32>(0.5, 0.5));
  *(x_134) = 0.0;
  *(x_134) = x_987;
  let x_2119 : f32 = x_1407[0u].x;
  var x_668_1 : vec3<f32> = x_660;
  x_668_1.y = 4.0;
  let x_668 : vec3<f32> = x_668_1;
  let x_2120 : f32 = x_663.y;
  let x_988 : f32 = *(x_134);
  let x_2121 : f32 = x_666.z;
  *(x_134) = 0.0;
  let x_1408 : vec2<f32> = vec2<f32>(x_133, x_979);
  let x_2122 : f32 = x_1402.x;
  *(x_134) = x_988;
  let x_153 : f32 = *(x_152);
  let x_2123 : f32 = x_664.x;
  let x_989 : bool = c5;
  let x_2124 : f32 = x_1398.y;
  c5 = false;
  let x_1409 : vec2<f32> = vec2<f32>(x_151, x_148);
  let x_2125 : f32 = x_1402.y;
  c5 = x_989;
  let x_2126 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
  var x_669_1 : vec3<f32> = x_664;
  x_669_1.y = 1.0;
  let x_669 : vec3<f32> = x_669_1;
  let x_990 : bool = c4;
  let x_2127 : f32 = vec2<f32>(0.0, 0.0).y;
  c4 = false;
  c4 = x_990;
  let x_1410 : mat2x2<f32> = mat2x2<f32>(x_972, vec2<f32>(0.5, 0.5));
  let x_2128 : f32 = x_1406.x;
  let x_154 : bool = (x_151 > x_153);
  let x_2129 : f32 = x_1407[1u].x;
  let x_991 : vec3<f32> = *(setting);
  let x_1411 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.5, 0.5));
  *(setting) = vec3<f32>(0.0, 0.0, 0.0);
  let x_2130 : f32 = x_1397.x;
  *(setting) = x_991;
  if (false) {
    let x_992 : f32 = param_2;
    let x_2131 : f32 = x_1411[1u].x;
    param_2 = 0.0;
    param_2 = x_992;
    let x_1412 : vec2<f32> = vec2<f32>(1.0, x_992);
    let x_2132 : f32 = x_665.z;
    return vec3<f32>(0.0, 0.0, 0.0);
  }
  let x_993 : f32 = *(x_149);
  *(x_149) = 0.0;
  *(x_149) = x_993;
  let x_2133 : f32 = x_664.y;
  c2 = x_154;
  let x_2134 : f32 = x_1411[1u].y;
  let x_994 : f32 = param_6;
  let x_2135 : f32 = x_991.x;
  param_6 = 0.0;
  let x_2136 : f32 = x_1398.y;
  param_6 = x_994;
  let x_2137 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u].y;
  let x_155 : bool = c2;
  let x_1413 : vec3<f32> = vec3<f32>(x_983, 10.0);
  let x_995 : f32 = param;
  param = 0.0;
  let x_2138 : f32 = x_1407[1u].x;
  param = x_995;
  let x_2139 : f32 = x_664.y;
  let x_2140 : f32 = x_991.z;
  let x_1414 : vec2<f32> = vec2<f32>(100.0, x_986);
  let x_2141 : f32 = x_662.y;
  let x_996 : f32 = param;
  let x_2142 : f32 = x_1407[1u].x;
  param = 0.0;
  let x_1415 : vec3<f32> = vec3<f32>(40.0, 0.5, x_994);
  let x_2143 : f32 = x_971.z;
  param = x_996;
  if (!(x_155)) {
    let x_1416 : vec4<f32> = vec4<f32>(x_988, x_661);
    let x_997 : bool = c8;
    let x_2144 : f32 = x_1402.x;
    c8 = false;
    let x_2145 : f32 = x_668.y;
    c8 = x_997;
    let x_2146 : f32 = x_991.z;
    let x_159 : vec3<f32> = defaultColor_();
    let x_998 : f32 = param;
    param = 0.0;
    let x_2147 : f32 = x_972.x;
    param = x_998;
    if (false) {
      let x_2148 : vec2<f32> = x_1407[1u];
      let x_999 : f32 = s_g;
      let x_2149 : f32 = x_1411[1u].x;
      let x_1417 : vec4<f32> = vec4<f32>(x_664, x_135);
      s_g = 0.0;
      s_g = x_999;
      let x_2150 : f32 = x_1409.y;
      let x_1418 : vec2<f32> = vec2<f32>(x_988, x_136);
      return vec3<f32>(0.0, 0.0, 0.0);
    }
    let x_2151 : f32 = x_1396.z;
    let x_1000 : f32 = *(x_132);
    let x_2152 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
    *(x_132) = 0.0;
    let x_2153 : f32 = x_661.z;
    *(x_132) = x_1000;
    var x_670_1 : vec3<f32> = x_661;
    x_670_1.x = 4.0;
    let x_670 : vec3<f32> = x_670_1;
    let x_2154 : f32 = x_661.z;
    let x_1001 : vec2<f32> = *(pos);
    let x_2155 : f32 = x_1408.x;
    *(pos) = vec2<f32>(0.0, 0.0);
    let x_2156 : f32 = vec2<f32>(0.5, 0.5).x;
    *(pos) = x_1001;
    return x_159;
  }
  let x_2157 : vec2<f32> = x_1407[0u];
  let x_1002 : bool = c5;
  c5 = false;
  let x_2158 : f32 = vec2<f32>(0.5, 0.5).x;
  c5 = x_1002;
  let x_2159 : f32 = x_1401.z;
  let x_162 : ptr<function, f32> = &((*(pos)).y);
  let x_2160 : f32 = x_991.x;
  let x_1003 : bool = c1;
  let x_2161 : f32 = x_1415.x;
  c1 = false;
  let x_2162 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
  c1 = x_1003;
  let x_2163 : f32 = x_1397.z;
  let x_1419 : vec4<f32> = vec4<f32>(0.100000001, x_666);
  let x_2164 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
  let x_810 : f32 = x_665.x;
  var x_671_1 : vec2<f32> = vec2<f32>(0.5, 0.5);
  x_671_1.x = x_810;
  let x_671 : vec2<f32> = x_671_1;
  let x_2165 : vec2<f32> = x_1410[1u];
  let x_1004 : bool = c2;
  let x_2166 : f32 = x_1401.z;
  c2 = false;
  let x_2167 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  c2 = x_1004;
  let x_1420 : vec4<f32> = vec4<f32>(vec3<f32>(0.0, 0.333333343, 0.666666687), 0.01);
  let x_2168 : f32 = x_1405.z;
  let x_163 : f32 = *(x_162);
  let x_164 : ptr<function, f32> = &((*(setting)).x);
  let x_1005 : f32 = param_4;
  let x_2169 : f32 = vec2<f32>(0.0, 0.0).y;
  param_4 = 0.0;
  let x_2170 : f32 = x_661.z;
  param_4 = x_1005;
  let x_2171 : f32 = x_1401.x;
  let x_165 : f32 = *(x_164);
  let x_2172 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
  let x_1006 : f32 = *(x_164);
  let x_2173 : f32 = x_1406.y;
  *(x_164) = 0.0;
  *(x_164) = x_1006;
  let x_2174 : f32 = x_667.y;
  let x_166 : f32 = (x_163 - x_165);
  let x_2175 : f32 = x_660.x;
  let x_1007 : f32 = param_2;
  param_2 = 0.0;
  let x_2176 : f32 = x_1397.z;
  param_2 = x_1007;
  let x_2177 : vec2<f32> = x_1411[0u];
  let x_785 : f32 = x_668.y;
  let x_1008 : f32 = *(x_149);
  *(x_149) = 0.0;
  *(x_149) = x_1008;
  var x_672_1 : vec3<f32> = x_662;
  x_672_1.y = x_785;
  let x_672 : vec3<f32> = x_672_1;
  let x_2178 : f32 = vec2<f32>(0.0, 0.0).y;
  let x_167 : ptr<function, f32> = &((*(square)).y);
  let x_1009 : vec2<f32> = param_1;
  param_1 = vec2<f32>(0.0, 0.0);
  let x_2179 : f32 = x_672.z;
  param_1 = x_1009;
  let x_168 : f32 = *(x_167);
  let x_2180 : f32 = x_1405.w;
  let x_1010 : vec2<f32> = *(pos);
  *(pos) = vec2<f32>(0.0, 0.0);
  let x_2181 : f32 = x_1399.z;
  *(pos) = x_1010;
  let x_802 : f32 = x_660.z;
  let x_2182 : f32 = x_666.z;
  let x_1011 : f32 = b_b;
  b_b = 0.0;
  b_b = x_1011;
  let x_2183 : f32 = x_672.y;
  var x_673_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  x_673_1.x = x_802;
  let x_673 : vec3<f32> = x_673_1;
  let x_2184 : f32 = x_1407[0u].y;
  let x_1421 : mat2x2<f32> = mat2x2<f32>(x_1009, x_671);
  let x_1012 : f32 = param_6;
  param_6 = 0.0;
  let x_2185 : f32 = x_1408.y;
  param_6 = x_1012;
  let x_2186 : f32 = x_669.y;
  let x_169 : bool = (x_166 < x_168);
  let x_2187 : f32 = x_971.x;
  let x_2188 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  let x_1422 : vec3<f32> = vec3<f32>(x_1006, x_996, x_785);
  let x_2189 : f32 = x_971.x;
  var x_674_1 : vec3<f32> = x_660;
  x_674_1.y = x_151;
  let x_674 : vec3<f32> = x_674_1;
  let x_2190 : f32 = x_1397.y;
  let x_1013 : f32 = *(x_162);
  let x_2191 : f32 = x_991.y;
  *(x_162) = 0.0;
  *(x_162) = x_1013;
  c3 = x_169;
  let x_2192 : f32 = x_663.x;
  let x_1014 : bool = c6;
  let x_2193 : f32 = x_674.y;
  c6 = false;
  c6 = x_1014;
  let x_2194 : f32 = x_663.x;
  let x_1423 : vec4<f32> = vec4<f32>(x_163, 0.666666687, vec2<f32>(0.5, 0.5));
  let x_170 : bool = c3;
  let x_2195 : f32 = x_1402.z;
  let x_1015 : bool = c3;
  let x_2196 : f32 = x_1423.x;
  c3 = false;
  let x_2197 : f32 = x_1406.x;
  c3 = x_1015;
  let x_1424 : vec3<f32> = vec3<f32>(x_984, x_986, x_994);
  let x_2198 : f32 = x_674.x;
  var x_675_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
  x_675_1.z = x_150;
  let x_675 : vec3<f32> = x_675_1;
  let x_2199 : f32 = x_1415.z;
  let x_1425 : vec2<f32> = vec2<f32>(x_168, x_988);
  let x_2200 : f32 = x_674.x;
  if (!(x_170)) {
    let x_2201 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u];
    let x_1016 : bool = c5;
    c5 = false;
    c5 = x_1016;
    let x_2202 : f32 = x_1414.x;
    let x_2203 : f32 = x_1399.z;
    let x_1017 : bool = c2;
    c2 = false;
    c2 = x_1017;
    let x_1426 : vec4<f32> = vec4<f32>(x_674, 4.0);
    let x_174 : vec3<f32> = defaultColor_();
    let x_1018 : f32 = h_r;
    let x_1427 : vec2<f32> = vec2<f32>(0.333333343, x_1007);
    let x_2204 : f32 = vec2<f32>(0.0, 0.0).y;
    h_r = 0.0;
    h_r = x_1018;
    let x_1428 : vec3<f32> = vec3<f32>(x_166, x_993, x_986);
    var x_676_1 : vec3<f32> = x_665;
    x_676_1.x = 4.0;
    let x_676 : vec3<f32> = x_676_1;
    let x_2205 : f32 = x_1401.y;
    let x_1019 : f32 = *(x_134);
    let x_2206 : vec2<f32> = x_1421[0u];
    *(x_134) = 0.0;
    *(x_134) = x_1019;
    let x_2207 : f32 = vec4<f32>(0.100000001, vec3<f32>(0.300000012, 0.300000012, 0.300000012)).x;
    return x_174;
  }
  let x_1020 : bool = c3;
  let x_2208 : f32 = x_971.z;
  c3 = false;
  let x_2209 : f32 = x_1397.y;
  c3 = x_1020;
  let x_2210 : f32 = x_1396.z;
  let x_177 : ptr<function, f32> = &((*(pos)).y);
  let x_1021 : bool = c6;
  let x_2211 : f32 = vec2<f32>(0.0, 0.0).x;
  let x_1430 : vec3<f32> = vec3<f32>(x_979, x_986, x_165);
  c6 = false;
  c6 = x_1021;
  let x_2212 : f32 = x_673.z;
  let x_786 : f32 = x_672.y;
  let x_2213 : f32 = x_1423.w;
  let x_1022 : f32 = *(x_162);
  *(x_162) = 0.0;
  let x_1431 : vec3<f32> = vec3<f32>(x_133, x_994, x_1013);
  let x_2214 : f32 = x_1413.y;
  *(x_162) = x_1022;
  let x_1432 : vec3<f32> = vec3<f32>(x_1011, 40.0, x_1011);
  var x_677_1 : vec3<f32> = x_660;
  x_677_1.x = x_786;
  let x_677 : vec3<f32> = x_677_1;
  let x_178 : f32 = *(x_177);
  let x_2215 : f32 = x_1421[1u].x;
  let x_1433 : vec2<f32> = vec2<f32>(x_786, x_1013);
  let x_2216 : f32 = x_1423.x;
  let x_179 : ptr<function, f32> = &((*(setting)).x);
  let x_2217 : f32 = x_1423.y;
  let x_1023 : f32 = *(x_152);
  let x_2218 : f32 = x_1406.x;
  *(x_152) = 0.0;
  let x_2219 : f32 = x_1402.x;
  let x_1434 : vec4<f32> = vec4<f32>(x_1012, x_662);
  *(x_152) = x_1023;
  let x_180 : f32 = *(x_179);
  let x_1435 : vec4<f32> = vec4<f32>(x_982, vec2<f32>(0.0, 0.0), x_136);
  let x_181 : f32 = (x_180 + x_178);
  let x_1024 : f32 = param;
  let x_1436 : vec3<f32> = vec3<f32>(x_986, x_181, x_1024);
  param = 0.0;
  let x_2220 : f32 = x_1405.z;
  let x_1437 : mat2x2<f32> = mat2x2<f32>(x_1010, vec2<f32>(0.5, 0.5));
  param = x_1024;
  let x_2221 : vec2<f32> = x_1437[0u];
  let x_182 : ptr<function, f32> = &((*(square)).y);
  let x_1438 : vec4<f32> = vec4<f32>(10.0, x_984, 4.0, x_1011);
  let x_1025 : vec2<f32> = param_5;
  param_5 = vec2<f32>(0.0, 0.0);
  let x_2222 : f32 = x_666.y;
  let x_1439 : mat2x2<f32> = mat2x2<f32>(x_1025, x_1009);
  let x_2223 : f32 = x_1439[0u].y;
  param_5 = x_1025;
  let x_183 : f32 = *(x_182);
  let x_1440 : vec4<f32> = vec4<f32>(vec2<f32>(0.0, 0.0), x_996, x_138);
  let x_2224 : f32 = x_1439[0u].y;
  let x_2225 : f32 = vec2<f32>(0.5, 0.5).y;
  let x_1026 : bool = c6;
  c6 = false;
  c6 = x_1026;
  let x_2226 : f32 = x_1434.z;
  c4 = (x_181 > x_183);
  let x_2227 : f32 = x_1434.w;
  let x_1027 : f32 = param_6;
  let x_2228 : f32 = x_1410[0u].y;
  param_6 = 0.0;
  let x_2229 : f32 = x_1402.z;
  param_6 = x_1027;
  let x_185 : bool = c4;
  let x_2230 : f32 = x_1435.z;
  let x_1028 : f32 = s_g;
  let x_2231 : f32 = x_1400.x;
  s_g = 0.0;
  let x_2232 : f32 = x_1434.z;
  s_g = x_1028;
  let x_2233 : f32 = x_661.y;
  let x_1441 : vec4<f32> = vec4<f32>(x_995, x_163, x_1007, x_150);
  let x_2234 : f32 = x_1434.y;
  let x_2235 : f32 = x_1398.x;
  var x_678_1 : vec3<f32> = x_673;
  x_678_1.x = 4.0;
  let x_678 : vec3<f32> = x_678_1;
  let x_2236 : f32 = x_1010.y;
  let x_1442 : vec4<f32> = vec4<f32>(4.0, vec3<f32>(0.300000012, 0.300000012, 0.300000012));
  let x_1029 : f32 = *(x_149);
  let x_2237 : f32 = x_674.x;
  *(x_149) = 0.0;
  *(x_149) = x_1029;
  let x_2238 : f32 = x_1010.x;
  if (!(x_185)) {
    let x_2239 : f32 = x_669.z;
    let x_1030 : f32 = h_r;
    h_r = 0.0;
    h_r = x_1030;
    let x_2240 : f32 = x_667.z;
    var x_679_1 : vec3<f32> = x_664;
    x_679_1.x = 10.0;
    let x_679 : vec3<f32> = x_679_1;
    let x_2241 : f32 = x_673.y;
    let x_189 : vec3<f32> = defaultColor_();
    let x_1031 : f32 = *(x_179);
    let x_2242 : f32 = x_1414.x;
    let x_1443 : vec4<f32> = vec4<f32>(10.0, x_1022, x_1005, x_138);
    let x_2243 : f32 = x_1408.x;
    *(x_179) = 0.0;
    let x_2244 : f32 = x_1419.y;
    *(x_179) = x_1031;
    let x_2245 : f32 = x_1405.y;
    var x_680_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
    x_680_1.x = x_151;
    let x_680 : vec3<f32> = x_680_1;
    let x_2246 : f32 = x_661.z;
    let x_1444 : vec4<f32> = vec4<f32>(4.0, vec3<f32>(0.0, 0.0, 0.0));
    let x_2247 : f32 = x_1436.x;
    let x_1032 : f32 = *(x_132);
    let x_2248 : f32 = x_664.x;
    *(x_132) = 0.0;
    *(x_132) = x_1032;
    let x_2249 : f32 = x_1432.z;
    return x_189;
  }
  let x_2250 : f32 = x_678.x;
  let x_1033 : bool = c4;
  let x_2251 : f32 = x_671.y;
  c4 = false;
  let x_2252 : f32 = x_1410[0u].x;
  c4 = x_1033;
  let x_192 : ptr<function, f32> = &((*(pos)).x);
  let x_1034 : vec3<f32> = *(setting);
  let x_2253 : f32 = x_1424.y;
  let x_1446 : vec3<f32> = vec3<f32>(x_994, x_166, 0.01);
  *(setting) = vec3<f32>(0.0, 0.0, 0.0);
  let x_2254 : f32 = x_1397.x;
  let x_1447 : vec3<f32> = vec3<f32>(x_785, 0.0, 4.0);
  let x_2255 : f32 = x_971.y;
  *(setting) = x_1034;
  var x_681_1 : vec3<f32> = x_664;
  x_681_1.x = x_166;
  let x_681 : vec3<f32> = x_681_1;
  let x_1035 : f32 = *(x_182);
  let x_2256 : f32 = x_1422.z;
  *(x_182) = 0.0;
  *(x_182) = x_1035;
  let x_2257 : f32 = x_1447.y;
  let x_1448 : mat2x2<f32> = mat2x2<f32>(x_972, x_1009);
  let x_193 : f32 = *(x_192);
  let x_2258 : f32 = x_1433.x;
  let x_788 : f32 = x_667.z;
  let x_1449 : vec3<f32> = vec3<f32>(x_984, x_1029, x_1023);
  let x_2259 : f32 = x_677.x;
  let x_1036 : bool = c1;
  c1 = false;
  let x_2260 : f32 = x_669.x;
  c1 = x_1036;
  var x_682_1 : vec3<f32> = x_664;
  x_682_1.y = x_788;
  let x_682 : vec3<f32> = x_682_1;
  let x_194 : ptr<function, f32> = &((*(setting)).x);
  let x_2261 : f32 = x_1440.x;
  let x_1037 : f32 = *(x_167);
  let x_2262 : f32 = x_1435.w;
  *(x_167) = 0.0;
  *(x_167) = x_1037;
  let x_2263 : f32 = x_1397.y;
  let x_195 : f32 = *(x_194);
  let x_2264 : f32 = x_660.y;
  let x_2265 : f32 = x_682.y;
  let x_1450 : vec3<f32> = vec3<f32>(x_984, x_978, 4.0);
  let x_2266 : f32 = x_1425.x;
  let x_1038 : f32 = *(x_132);
  let x_2267 : f32 = x_1449.y;
  *(x_132) = 0.0;
  *(x_132) = x_1038;
  let x_1451 : mat2x2<f32> = mat2x2<f32>(x_1009, vec2<f32>(0.0, 0.0));
  let x_2268 : f32 = x_677.z;
  let x_197 : f32 = (*(setting)).y;
  let x_2269 : f32 = x_1424.x;
  let x_198 : f32 = (x_195 - x_197);
  let x_2270 : f32 = x_675.x;
  let x_1039 : f32 = *(x_192);
  let x_2271 : f32 = x_664.x;
  *(x_192) = 0.0;
  let x_2272 : f32 = x_664.y;
  *(x_192) = x_1039;
  let x_2273 : f32 = x_1406.y;
  var x_683_1 : vec3<f32> = x_682;
  x_683_1.z = x_180;
  let x_683 : vec3<f32> = x_683_1;
  let x_2274 : f32 = x_673.z;
  let x_1452 : mat2x2<f32> = mat2x2<f32>(x_972, x_972);
  let x_1040 : f32 = param_6;
  let x_2275 : f32 = x_1410[0u].x;
  param_6 = 0.0;
  param_6 = x_1040;
  let x_1453 : vec2<f32> = vec2<f32>(0.0, x_1005);
  let x_2276 : vec2<f32> = x_1407[0u];
  let x_811 : f32 = x_683.z;
  let x_2277 : f32 = x_1034.y;
  let x_1041 : f32 = *(x_179);
  let x_2278 : f32 = x_1397.z;
  let x_1454 : vec2<f32> = vec2<f32>(6.0, x_1005);
  *(x_179) = 0.0;
  let x_2279 : f32 = x_1419.w;
  *(x_179) = x_1041;
  let x_2280 : f32 = x_674.x;
  var x_684_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  x_684_1.x = x_811;
  let x_684 : vec3<f32> = x_684_1;
  let x_1042 : f32 = s_g;
  let x_2281 : f32 = x_1441.w;
  s_g = 0.0;
  let x_1455 : mat2x2<f32> = mat2x2<f32>(x_1010, x_1009);
  s_g = x_1042;
  let x_2282 : f32 = x_683.x;
  let x_200 : ptr<function, f32> = &((*(square)).x);
  let x_2283 : f32 = vec2<f32>(x_1022, x_987).x;
  let x_201 : f32 = *(x_200);
  let x_2284 : f32 = x_1450.y;
  let x_1043 : f32 = *(x_137);
  *(x_137) = 0.0;
  let x_2285 : f32 = x_1407[1u].x;
  *(x_137) = x_1043;
  var x_685_1 : vec3<f32> = x_661;
  x_685_1.x = x_136;
  let x_685 : vec3<f32> = x_685_1;
  let x_1044 : f32 = *(x_192);
  let x_1456 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_983);
  *(x_192) = 0.0;
  let x_2286 : f32 = x_1034.y;
  let x_1457 : mat2x2<f32> = mat2x2<f32>(x_1025, x_1009);
  let x_2287 : vec2<f32> = x_1439[0u];
  *(x_192) = x_1044;
  let x_2288 : f32 = x_1396.x;
  c5 = ((x_193 - x_198) < x_201);
  let x_2289 : f32 = x_1414.x;
  let x_1045 : f32 = *(x_152);
  let x_2290 : f32 = x_666.y;
  *(x_152) = 0.0;
  *(x_152) = x_1045;
  let x_2291 : f32 = x_1396.z;
  var x_686_1 : vec3<f32> = x_661;
  x_686_1.x = 0.100000001;
  let x_686 : vec3<f32> = x_686_1;
  let x_2292 : f32 = x_1424.x;
  var x_687_1 : vec3<f32> = x_685;
  x_687_1.y = x_135;
  let x_687 : vec3<f32> = x_687_1;
  let x_1458 : vec3<f32> = vec3<f32>(x_786, x_1025);
  let x_1046 : f32 = *(x_192);
  let x_2293 : f32 = x_1430.x;
  *(x_192) = 0.0;
  let x_2294 : f32 = x_1419.x;
  *(x_192) = x_1046;
  let x_203 : bool = c5;
  let x_2295 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
  let x_1047 : f32 = param_4;
  let x_2296 : f32 = x_1401.y;
  param_4 = 0.0;
  let x_2297 : f32 = x_1034.x;
  param_4 = x_1047;
  let x_2298 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  let x_1048 : vec2<f32> = param_3;
  let x_2299 : f32 = x_668.z;
  param_3 = vec2<f32>(0.0, 0.0);
  let x_2300 : vec2<f32> = x_1439[1u];
  param_3 = x_1048;
  let x_2301 : f32 = x_668.x;
  if (!(x_203)) {
    let x_1459 : vec2<f32> = vec2<f32>(x_1022, x_1045);
    let x_1049 : f32 = *(x_179);
    *(x_179) = 0.0;
    *(x_179) = x_1049;
    let x_2302 : f32 = x_1405.x;
    var x_688_1 : vec3<f32> = x_677;
    x_688_1.z = x_165;
    let x_688 : vec3<f32> = x_688_1;
    let x_1050 : f32 = param_6;
    param_6 = 0.0;
    param_6 = x_1050;
    let x_2303 : f32 = x_1406.y;
    let x_2304 : f32 = x_1397.z;
    let x_1051 : f32 = *(x_164);
    let x_1460 : vec2<f32> = vec2<f32>(x_979, x_148);
    let x_2305 : f32 = x_1446.x;
    *(x_164) = 0.0;
    let x_2306 : f32 = x_662.y;
    *(x_164) = x_1051;
    let x_208 : f32 = (*(setting)).z;
    let x_1461 : mat2x2<f32> = mat2x2<f32>(x_1010, x_1025);
    let x_1052 : bool = c7;
    c7 = false;
    c7 = x_1052;
    let x_1462 : vec2<f32> = vec2<f32>(x_198, x_986);
    let x_2307 : f32 = x_661.x;
    var x_689_1 : vec3<f32> = x_675;
    x_689_1.y = x_183;
    let x_689 : vec3<f32> = x_689_1;
    let x_2308 : f32 = x_1433.y;
    let x_1053 : f32 = param_4;
    let x_2309 : f32 = x_669.x;
    param_4 = 0.0;
    param_4 = x_1053;
    let x_2310 : f32 = x_983.y;
    let x_799 : f32 = x_673.x;
    let x_2311 : f32 = x_1453.x;
    let x_1054 : f32 = *(x_162);
    let x_2312 : f32 = x_1419.x;
    *(x_162) = 0.0;
    *(x_162) = x_1054;
    let x_1463 : vec3<f32> = vec3<f32>(4.0, x_983);
    var x_690_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
    x_690_1.y = x_163;
    let x_690 : vec3<f32> = x_690_1;
    let x_1055 : vec2<f32> = param_1;
    let x_2313 : f32 = x_667.y;
    param_1 = vec2<f32>(0.0, 0.0);
    param_1 = x_1055;
    let x_2314 : f32 = x_1442.z;
    param = (x_208 / x_799);
    let x_1056 : f32 = *(x_162);
    let x_2315 : f32 = x_1048.x;
    *(x_162) = 0.0;
    let x_2316 : f32 = x_1447.z;
    let x_1464 : vec4<f32> = vec4<f32>(40.0, x_1050, vec2<f32>(0.5, 0.5));
    *(x_162) = x_1056;
    let x_213 : vec2<f32> = *(pos);
    let x_1057 : vec2<f32> = param_3;
    param_3 = vec2<f32>(0.0, 0.0);
    let x_1465 : vec3<f32> = vec3<f32>(x_1010, x_1044);
    let x_2317 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
    param_3 = x_1057;
    var x_691_1 : vec3<f32> = x_683;
    x_691_1.x = x_148;
    let x_691 : vec3<f32> = x_691_1;
    let x_2318 : f32 = x_690.x;
    let x_1058 : bool = c2;
    let x_1466 : vec2<f32> = vec2<f32>(x_133, 0.0);
    c2 = false;
    let x_1467 : vec4<f32> = vec4<f32>(x_1006, x_799, x_986, x_197);
    let x_2319 : f32 = x_691.z;
    c2 = x_1058;
    param_1 = x_213;
    let x_2320 : vec2<f32> = x_1407[1u];
    let x_1059 : bool = c6;
    c6 = false;
    let x_2321 : f32 = x_661.y;
    c6 = x_1059;
    let x_214 : vec3<f32> = computeColor_f1_vf2_(&(param), &(param_1));
    let x_2322 : f32 = x_1442.w;
    let x_1060 : f32 = param;
    let x_2323 : f32 = x_683.z;
    param = 0.0;
    param = x_1060;
    let x_2324 : f32 = x_661.y;
    var x_692_1 : vec3<f32> = x_664;
    x_692_1.x = x_135;
    let x_692 : vec3<f32> = x_692_1;
    let x_1061 : bool = c6;
    let x_2325 : f32 = x_674.y;
    c6 = false;
    let x_1468 : vec2<f32> = vec2<f32>(x_1054, x_810);
    c6 = x_1061;
    return x_214;
  }
  let x_809 : f32 = x_663.z;
  let x_2326 : f32 = x_1397.x;
  let x_1062 : f32 = *(x_182);
  *(x_182) = 0.0;
  *(x_182) = x_1062;
  var x_693_1 : vec3<f32> = x_683;
  x_693_1.x = x_809;
  let x_693 : vec3<f32> = x_693_1;
  let x_2327 : f32 = x_685.z;
  let x_1063 : f32 = *(x_132);
  *(x_132) = 0.0;
  *(x_132) = x_1063;
  let x_2328 : f32 = x_1432.x;
  let x_217 : ptr<function, f32> = &((*(pos)).x);
  let x_1470 : vec4<f32> = vec4<f32>(x_153, 100.0, x_1006, x_1035);
  let x_1064 : bool = c5;
  c5 = false;
  let x_2329 : f32 = x_1402.y;
  c5 = x_1064;
  var x_694_1 : vec2<f32> = vec2<f32>(0.5, 0.5);
  x_694_1.y = 0.300000012;
  let x_694 : vec2<f32> = x_694_1;
  let x_1065 : f32 = *(x_182);
  let x_2330 : f32 = x_1452[1u].x;
  *(x_182) = 0.0;
  *(x_182) = x_1065;
  let x_1472 : mat2x2<f32> = mat2x2<f32>(x_1048, x_983);
  let x_218 : f32 = *(x_217);
  let x_1473 : vec2<f32> = vec2<f32>(x_978, x_1062);
  let x_2331 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).y;
  let x_219 : ptr<function, f32> = &((*(setting)).x);
  let x_1066 : f32 = *(x_137);
  *(x_137) = 0.0;
  *(x_137) = x_1066;
  let x_220 : f32 = *(x_219);
  let x_2332 : f32 = x_1424.x;
  let x_221 : ptr<function, f32> = &((*(setting)).y);
  let x_1067 : f32 = *(x_192);
  *(x_192) = 0.0;
  *(x_192) = x_1067;
  let x_2333 : f32 = x_971.y;
  let x_222 : f32 = *(x_221);
  let x_2334 : f32 = x_687.y;
  let x_1068 : f32 = *(x_152);
  let x_2335 : f32 = vec3<f32>(x_1009, x_809).x;
  *(x_152) = 0.0;
  let x_2336 : f32 = x_1446.y;
  *(x_152) = x_1068;
  let x_2337 : f32 = x_1451[1u].x;
  var x_695_1 : vec3<f32> = x_672;
  x_695_1.x = 0.01;
  let x_695 : vec3<f32> = x_695_1;
  let x_1069 : f32 = *(x_134);
  *(x_134) = 0.0;
  let x_2338 : f32 = x_1405.y;
  let x_1474 : mat2x2<f32> = mat2x2<f32>(x_671, x_983);
  *(x_134) = x_1069;
  let x_223 : f32 = (x_220 - x_222);
  let x_1070 : f32 = *(x_162);
  *(x_162) = 0.0;
  let x_2339 : f32 = x_669.y;
  *(x_162) = x_1070;
  var x_696_1 : vec3<f32> = x_678;
  x_696_1.y = 0.5;
  let x_696 : vec3<f32> = x_696_1;
  let x_1071 : f32 = *(x_194);
  let x_2340 : f32 = x_1453.y;
  *(x_194) = 0.0;
  let x_2341 : f32 = x_1434.y;
  let x_1475 : vec4<f32> = vec4<f32>(x_987, x_687);
  let x_2342 : f32 = x_1409.y;
  *(x_194) = x_1071;
  let x_2343 : f32 = x_663.x;
  let x_224 : f32 = (x_218 + x_223);
  let x_225 : ptr<function, f32> = &((*(square))[0u]);
  let x_2344 : f32 = x_661.z;
  let x_1072 : f32 = *(x_182);
  let x_2345 : f32 = x_1446.z;
  *(x_182) = 0.0;
  let x_2346 : f32 = x_983.x;
  *(x_182) = x_1072;
  var x_697_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
  x_697_1.x = 4.0;
  let x_697 : vec3<f32> = x_697_1;
  let x_226 : f32 = *(x_225);
  let x_1073 : f32 = *(x_179);
  let x_2347 : f32 = x_683.x;
  *(x_179) = 0.0;
  *(x_179) = x_1073;
  let x_2348 : f32 = x_1396.w;
  var x_698_1 : vec3<f32> = x_666;
  x_698_1.y = 3.0;
  let x_698 : vec3<f32> = x_698_1;
  let x_1074 : vec3<f32> = *(setting);
  *(setting) = vec3<f32>(0.0, 0.0, 0.0);
  *(setting) = x_1074;
  if (true) {
  } else {
    let x_1075 : f32 = h_r;
    let x_2349 : vec2<f32> = x_1437[0u];
    h_r = 0.0;
    let x_2350 : f32 = vec3<f32>(x_986, x_197, 0.666666687).z;
    h_r = x_1075;
    var x_699_1 : vec3<f32> = x_668;
    x_699_1.x = 0.01;
    let x_699 : vec3<f32> = x_699_1;
    let x_1076 : f32 = *(x_152);
    let x_1476 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_983);
    *(x_152) = 0.0;
    let x_2351 : f32 = x_1422.x;
    *(x_152) = x_1076;
    return x_677;
  }
  let x_2352 : f32 = x_1406.x;
  let x_1077 : bool = c6;
  let x_2353 : vec2<f32> = x_1410[0u];
  c6 = false;
  c6 = x_1077;
  let x_2354 : f32 = x_1423.x;
  let x_1477 : vec3<f32> = vec3<f32>(x_1062, x_166, x_1037);
  let x_2355 : f32 = x_675.z;
  var x_700_1 : vec3<f32> = x_685;
  x_700_1.x = x_133;
  let x_700 : vec3<f32> = x_700_1;
  let x_1078 : f32 = *(x_152);
  *(x_152) = 0.0;
  *(x_152) = x_1078;
  let x_2356 : f32 = x_1415.y;
  c6 = (x_224 > x_226);
  let x_2357 : f32 = x_1472[1u].y;
  let x_1079 : vec2<f32> = *(square);
  *(square) = vec2<f32>(0.0, 0.0);
  let x_2358 : f32 = x_660.y;
  let x_1478 : vec3<f32> = vec3<f32>(0.5, x_1072, x_1038);
  *(square) = x_1079;
  var x_701_1 : vec3<f32> = x_667;
  x_701_1.z = 0.666666687;
  let x_701 : vec3<f32> = x_701_1;
  let x_228 : bool = c6;
  var x_702_1 : vec3<f32> = x_685;
  x_702_1.x = 0.0;
  let x_702 : vec3<f32> = x_702_1;
  let x_1080 : bool = c7;
  let x_2359 : f32 = x_1420.w;
  c7 = false;
  c7 = x_1080;
  let x_2360 : f32 = x_1456[1u].y;
  let x_1479 : vec2<f32> = vec2<f32>(x_1047, x_970);
  var x_703_1 : vec3<f32> = x_667;
  x_703_1.z = x_163;
  let x_703 : vec3<f32> = x_703_1;
  let x_1081 : bool = c5;
  c5 = false;
  let x_2361 : vec2<f32> = x_1457[1u];
  c5 = x_1081;
  if (!(x_228)) {
    let x_2362 : f32 = x_693.y;
    var x_704_1 : vec2<f32> = x_694;
    x_704_1.y = 0.333333343;
    let x_704 : vec2<f32> = x_704_1;
    let x_2363 : f32 = x_1025.x;
    let x_1082 : f32 = *(x_134);
    let x_2364 : f32 = x_1453.y;
    *(x_134) = 0.0;
    *(x_134) = x_1082;
    let x_2365 : vec2<f32> = x_1439[0u];
    let x_233 : f32 = (*(setting)).z;
    var x_705_1 : vec2<f32> = x_671;
    x_705_1.x = x_201;
    let x_705 : vec2<f32> = x_705_1;
    let x_1083 : f32 = *(x_164);
    *(x_164) = 0.0;
    *(x_164) = x_1083;
    let x_2366 : f32 = x_1433.x;
    let x_2367 : f32 = x_1403.x;
    let x_1084 : f32 = h_r;
    let x_2368 : f32 = x_1435.x;
    h_r = 0.0;
    let x_2369 : f32 = x_1424.z;
    h_r = x_1084;
    let x_2370 : f32 = x_1403.y;
    let x_1085 : f32 = *(x_149);
    let x_2371 : f32 = x_1450.z;
    *(x_149) = 0.0;
    *(x_149) = x_1085;
    var x_706_1 : vec3<f32> = x_703;
    x_706_1.y = (x_233 / x_673.x);
    let x_706 : vec3<f32> = x_706_1;
    let x_2372 : f32 = x_660.z;
    let x_1086 : vec2<f32> = param_7;
    let x_2373 : f32 = x_1403.y;
    param_7 = vec2<f32>(0.0, 0.0);
    param_7 = x_1086;
    let x_2374 : f32 = x_1455[1u].y;
    let x_1480 : vec4<f32> = vec4<f32>(x_165, x_136, x_1083, x_1068);
    let x_2375 : f32 = x_1452[1u].y;
    param_2 = x_706.y;
    let x_1087 : f32 = *(x_137);
    *(x_137) = 0.0;
    let x_2376 : f32 = x_681.x;
    *(x_137) = x_1087;
    let x_2377 : f32 = x_1449.y;
    let x_1482 : vec3<f32> = vec3<f32>(x_1084, x_1037, 0.0);
    let x_2378 : f32 = x_662.x;
    let x_2379 : f32 = x_1432.y;
    let x_1088 : f32 = param_4;
    let x_1483 : mat2x2<f32> = mat2x2<f32>(x_1009, x_1079);
    let x_2380 : f32 = x_1413.y;
    param_4 = 0.0;
    let x_2381 : f32 = x_1074.x;
    param_4 = x_1088;
    let x_2382 : f32 = x_983.x;
    let x_1484 : vec2<f32> = vec2<f32>(x_1039, 0.01);
    let x_237 : vec2<f32> = *(pos);
    let x_2383 : f32 = x_1414.x;
    let x_1089 : f32 = *(x_152);
    let x_2384 : f32 = x_1435.x;
    *(x_152) = 0.0;
    *(x_152) = x_1089;
    let x_1485 : vec2<f32> = vec2<f32>(x_809, x_809);
    param_3 = x_237;
    let x_2385 : f32 = x_687.y;
    let x_1486 : vec4<f32> = vec4<f32>(vec3<f32>(0.0, 0.0, 0.0), x_138);
    let x_2386 : f32 = x_673.y;
    let x_1090 : f32 = *(x_134);
    *(x_134) = 0.0;
    let x_2387 : f32 = x_672.y;
    *(x_134) = x_1090;
    var x_707_1 : vec3<f32> = x_706;
    x_707_1.x = x_703.z;
    let x_707 : vec3<f32> = x_707_1;
    let x_1091 : f32 = *(x_217);
    let x_1487 : vec2<f32> = vec2<f32>(x_218, x_1013);
    *(x_217) = 0.0;
    *(x_217) = x_1091;
    let x_2388 : f32 = x_1448[1u].x;
    let x_238 : vec3<f32> = computeColor_f1_vf2_(&(param_2), &(param_3));
    let x_2389 : f32 = vec2<f32>(0.5, 0.5).y;
    let x_1092 : f32 = *(x_149);
    *(x_149) = 0.0;
    let x_2390 : f32 = x_694.x;
    *(x_149) = x_1092;
    var x_708_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
    x_708_1.z = x_218;
    let x_708 : vec3<f32> = x_708_1;
    let x_1093 : f32 = *(x_137);
    *(x_137) = 0.0;
    let x_2391 : f32 = vec4<f32>(x_1047, x_1005, x_1072, x_218).x;
    *(x_137) = x_1093;
    let x_2392 : f32 = x_1406.x;
    return x_238;
  }
  let x_2393 : f32 = x_1413.y;
  let x_1094 : f32 = *(x_162);
  *(x_162) = 0.0;
  let x_2394 : f32 = x_1439[1u].y;
  *(x_162) = x_1094;
  let x_241 : ptr<function, f32> = &((*(pos)).y);
  let x_1095 : f32 = *(x_152);
  *(x_152) = 0.0;
  *(x_152) = x_1095;
  let x_2395 : f32 = x_1411[1u].x;
  let x_1488 : mat2x2<f32> = mat2x2<f32>(x_1079, x_1048);
  let x_2396 : f32 = x_1431.x;
  let x_1096 : f32 = *(x_194);
  let x_2397 : f32 = x_1405.y;
  *(x_194) = 0.0;
  let x_2398 : vec2<f32> = x_1410[1u];
  *(x_194) = x_1096;
  let x_2399 : f32 = x_695.y;
  let x_1489 : mat2x2<f32> = mat2x2<f32>(x_1025, vec2<f32>(0.5, 0.5));
  var x_709_1 : vec3<f32> = x_666;
  x_709_1.x = x_685.x;
  let x_709 : vec3<f32> = x_709_1;
  let x_1097 : vec2<f32> = param_1;
  let x_2400 : f32 = x_677.y;
  param_1 = vec2<f32>(0.0, 0.0);
  param_1 = x_1097;
  let x_2401 : f32 = x_1409.x;
  let x_242 : f32 = *(x_241);
  let x_2402 : f32 = x_983.y;
  let x_1098 : f32 = *(x_200);
  let x_2403 : f32 = x_700.x;
  *(x_200) = 0.0;
  *(x_200) = x_1098;
  let x_2404 : f32 = x_665.y;
  var x_710_1 : vec3<f32> = x_678;
  x_710_1.x = x_195;
  let x_710 : vec3<f32> = x_710_1;
  let x_2405 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
  let x_1490 : vec3<f32> = vec3<f32>(0.01, vec2<f32>(0.5, 0.5));
  let x_2406 : f32 = x_667.y;
  let x_1099 : f32 = h_r;
  let x_1491 : vec2<f32> = vec2<f32>(x_1043, x_223);
  h_r = 0.0;
  h_r = x_1099;
  let x_1100 : f32 = *(x_217);
  *(x_217) = 0.0;
  let x_1492 : vec3<f32> = vec3<f32>(x_181, x_1068, 0.100000001);
  let x_2407 : f32 = x_1399.z;
  *(x_217) = x_1100;
  let x_2408 : f32 = x_1473.y;
  var x_711_1 : vec3<f32> = x_666;
  x_711_1.z = x_788;
  let x_711 : vec3<f32> = x_711_1;
  let x_1101 : bool = c8;
  let x_2409 : f32 = x_1458.x;
  c8 = false;
  let x_2410 : f32 = x_1475.z;
  c8 = x_1101;
  let x_2411 : f32 = x_710.y;
  let x_243 : ptr<function, f32> = &((*(setting))[0u]);
  let x_1102 : bool = c7;
  c7 = false;
  let x_2412 : f32 = x_1420.x;
  let x_1493 : mat2x2<f32> = mat2x2<f32>(x_694, x_694);
  let x_2413 : f32 = x_1396.w;
  c7 = x_1102;
  let x_2414 : f32 = x_711.y;
  var x_712_1 : vec3<f32> = x_709;
  x_712_1.y = x_136;
  let x_712 : vec3<f32> = x_712_1;
  let x_2415 : f32 = x_709.x;
  let x_244 : f32 = *(x_243);
  let x_1103 : f32 = h_r;
  let x_2416 : vec2<f32> = x_1474[1u];
  h_r = 0.0;
  h_r = x_1103;
  let x_245 : ptr<function, f32> = &((*(setting)).y);
  let x_1104 : bool = c3;
  let x_2417 : f32 = x_1493[1u].x;
  let x_2418 : f32 = x_1475.y;
  c3 = false;
  c3 = x_1104;
  let x_2419 : f32 = x_666.z;
  let x_1495 : vec3<f32> = vec3<f32>(x_1065, 0.300000012, x_988);
  let x_2420 : f32 = x_1493[1u].x;
  var x_713_1 : vec3<f32> = x_709;
  x_713_1.z = x_193;
  let x_713 : vec3<f32> = x_713_1;
  let x_246 : f32 = *(x_245);
  let x_2421 : vec2<f32> = x_1448[0u];
  let x_1105 : f32 = param;
  param = 0.0;
  param = x_1105;
  var x_714_1 : vec2<f32> = x_694;
  x_714_1.x = x_150;
  let x_714 : vec2<f32> = x_714_1;
  let x_1496 : mat2x2<f32> = mat2x2<f32>(x_1048, x_1079);
  let x_2422 : f32 = x_1400.x;
  let x_1106 : vec2<f32> = *(pos);
  let x_2423 : f32 = x_673.y;
  *(pos) = vec2<f32>(0.0, 0.0);
  let x_2424 : f32 = x_1438.w;
  *(pos) = x_1106;
  let x_1497 : vec3<f32> = vec3<f32>(x_135, x_242, x_153);
  let x_247 : f32 = (x_244 - x_246);
  let x_2425 : f32 = x_694.y;
  let x_248 : f32 = (x_242 - x_247);
  var x_715_1 : vec3<f32> = x_709;
  x_715_1.x = x_183;
  let x_715 : vec3<f32> = x_715_1;
  let x_2426 : f32 = x_1473.y;
  let x_1107 : bool = c3;
  let x_2427 : vec2<f32> = x_1452[1u];
  c3 = false;
  let x_2428 : f32 = x_664.x;
  c3 = x_1107;
  let x_249 : ptr<function, f32> = &((*(square)).y);
  let x_1108 : f32 = *(x_152);
  let x_2429 : vec2<f32> = mat2x2<f32>(x_1079, x_972)[0u];
  *(x_152) = 0.0;
  *(x_152) = x_1108;
  let x_2430 : f32 = x_1396.y;
  var x_716_1 : vec2<f32> = x_671;
  x_716_1.y = x_247;
  let x_716 : vec2<f32> = x_716_1;
  let x_2431 : f32 = x_1439[1u].y;
  let x_250 : f32 = *(x_249);
  let x_2432 : f32 = x_672.z;
  let x_1109 : f32 = *(x_147);
  let x_2433 : f32 = x_1438.z;
  *(x_147) = 0.0;
  let x_1499 : vec3<f32> = vec3<f32>(x_1022, x_1025);
  *(x_147) = x_1109;
  let x_1500 : vec4<f32> = vec4<f32>(x_802, x_714, x_988);
  let x_2434 : f32 = x_1436.y;
  var x_717_1 : vec3<f32> = x_709;
  x_717_1.x = x_786;
  let x_717 : vec3<f32> = x_717_1;
  let x_2435 : f32 = x_1474[0u].x;
  let x_2436 : f32 = x_716.x;
  let x_1110 : f32 = *(x_243);
  *(x_243) = 0.0;
  let x_2437 : f32 = x_666.x;
  *(x_243) = x_1110;
  c7 = (x_248 < x_250);
  let x_2438 : f32 = x_1424.x;
  let x_1501 : vec2<f32> = vec2<f32>(x_786, x_226);
  let x_1111 : f32 = *(x_192);
  *(x_192) = 0.0;
  let x_2439 : f32 = x_694.y;
  *(x_192) = x_1111;
  let x_252 : bool = c7;
  let x_1112 : f32 = h_r;
  let x_2440 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).x;
  h_r = 0.0;
  let x_2441 : f32 = x_694.x;
  let x_1503 : vec2<f32> = vec2<f32>(0.01, x_1028);
  h_r = x_1112;
  let x_1504 : vec3<f32> = vec3<f32>(x_168, x_788, x_1112);
  let x_1505 : vec2<f32> = vec2<f32>(x_223, x_978);
  let x_1113 : vec3<f32> = *(setting);
  let x_2442 : f32 = x_1113.y;
  *(setting) = vec3<f32>(0.0, 0.0, 0.0);
  *(setting) = x_1113;
  if (!(x_252)) {
    let x_1114 : bool = c4;
    let x_2443 : f32 = x_972.y;
    c4 = false;
    let x_2444 : f32 = x_1489[1u].x;
    c4 = x_1114;
    let x_2445 : vec2<f32> = x_1472[0u];
    var x_718_1 : vec3<f32> = x_687;
    x_718_1.y = x_248;
    let x_718 : vec3<f32> = x_718_1;
    let x_1115 : f32 = *(x_134);
    *(x_134) = 0.0;
    let x_2446 : f32 = vec2<f32>(x_979, x_197).y;
    *(x_134) = x_1115;
    let x_2447 : f32 = x_1458.y;
    let x_257 : f32 = (*(setting)).z;
    let x_1116 : vec3<f32> = *(setting);
    *(setting) = vec3<f32>(0.0, 0.0, 0.0);
    *(setting) = x_1116;
    var x_719_1 : vec3<f32> = x_664;
    x_719_1.x = x_197;
    let x_719 : vec3<f32> = x_719_1;
    let x_2448 : f32 = vec4<f32>(x_788, x_713).w;
    let x_2449 : f32 = x_1408.x;
    let x_1117 : f32 = *(x_137);
    let x_2450 : f32 = x_1472[0u].x;
    *(x_137) = 0.0;
    let x_1507 : vec3<f32> = vec3<f32>(x_198, x_671);
    *(x_137) = x_1117;
    let x_1118 : f32 = *(x_137);
    let x_2451 : f32 = x_1430.y;
    *(x_137) = 0.0;
    *(x_137) = x_1118;
    param_4 = (x_257 / x_673.x);
    let x_2452 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), x_1079)[0u];
    let x_261 : vec2<f32> = *(pos);
    let x_1119 : f32 = *(x_241);
    let x_1508 : vec4<f32> = vec4<f32>(x_1079, vec2<f32>(0.0, 0.0));
    *(x_241) = 0.0;
    let x_1509 : vec2<f32> = vec2<f32>(40.0, x_1112);
    let x_2453 : f32 = x_694.y;
    *(x_241) = x_1119;
    param_5 = x_261;
    let x_1510 : vec2<f32> = vec2<f32>(x_136, x_220);
    let x_2454 : f32 = x_1431.z;
    let x_1120 : f32 = *(x_221);
    *(x_221) = 0.0;
    let x_2455 : f32 = x_1452[0u].x;
    *(x_221) = x_1120;
    let x_2456 : f32 = x_1470.x;
    var x_720_1 : vec3<f32> = x_681;
    x_720_1.z = x_198;
    let x_720 : vec3<f32> = x_720_1;
    let x_262 : vec3<f32> = computeColor_f1_vf2_(&(param_4), &(param_5));
    let x_1121 : f32 = param_4;
    let x_2457 : f32 = x_661.y;
    param_4 = 0.0;
    param_4 = x_1121;
    let x_1511 : vec4<f32> = vec4<f32>(x_198, x_1042, x_1068, x_133);
    return x_262;
  }
  let x_1122 : f32 = *(x_245);
  *(x_245) = 0.0;
  let x_2458 : f32 = x_1503.y;
  *(x_245) = x_1122;
  let x_2459 : f32 = x_1436.z;
  let x_265 : ptr<function, f32> = &((*(pos)).y);
  let x_2460 : f32 = x_1034.x;
  let x_266 : f32 = *(x_265);
  let x_2461 : f32 = x_700.x;
  let x_1123 : vec2<f32> = param_3;
  param_3 = vec2<f32>(0.0, 0.0);
  let x_2462 : f32 = x_1441.y;
  param_3 = x_1123;
  var x_721_1 : vec3<f32> = x_672;
  x_721_1.x = 0.100000001;
  let x_721 : vec3<f32> = x_721_1;
  let x_2463 : f32 = x_1439[0u].x;
  let x_1512 : mat2x2<f32> = mat2x2<f32>(x_694, x_1010);
  let x_1124 : f32 = *(x_137);
  let x_2464 : f32 = x_1451[0u].x;
  *(x_137) = 0.0;
  let x_2465 : f32 = x_1010.x;
  let x_1513 : vec3<f32> = vec3<f32>(x_1108, 40.0, x_1067);
  let x_2466 : f32 = x_1473.y;
  *(x_137) = x_1124;
  let x_267 : ptr<function, f32> = &((*(setting)).x);
  let x_1125 : bool = c7;
  c7 = false;
  c7 = x_1125;
  let x_1514 : vec4<f32> = vec4<f32>(x_671, x_135, x_218);
  let x_2467 : f32 = vec2<f32>(0.0, 0.0).x;
  let x_268 : f32 = *(x_267);
  let x_2468 : vec2<f32> = x_1456[1u];
  let x_1126 : f32 = *(x_194);
  let x_2469 : f32 = x_991.y;
  *(x_194) = 0.0;
  let x_1515 : vec2<f32> = vec2<f32>(x_809, x_1099);
  *(x_194) = x_1126;
  let x_2470 : vec2<f32> = x_1488[0u];
  let x_2471 : f32 = x_1492.x;
  let x_1127 : f32 = *(x_225);
  let x_2472 : f32 = x_1475.y;
  *(x_225) = 0.0;
  *(x_225) = x_1127;
  var x_722_1 : vec3<f32> = x_695;
  x_722_1.z = x_224;
  let x_722 : vec3<f32> = x_722_1;
  let x_2473 : f32 = x_1430.y;
  let x_1128 : f32 = *(x_241);
  *(x_241) = 0.0;
  *(x_241) = x_1128;
  let x_2474 : f32 = x_685.z;
  if (true) {
  } else {
    let x_1157 : f32 = *(x_162);
    *(x_162) = 0.0;
    *(x_162) = x_1157;
    let x_2553 : vec2<f32> = x_1488[1u];
    let x_1542 : vec4<f32> = vec4<f32>(x_715, x_1094);
    let x_2554 : f32 = x_1010.y;
    var x_732_1 : vec3<f32> = x_713;
    x_732_1.x = 0.5;
    let x_732 : vec3<f32> = x_732_1;
    let x_1158 : f32 = *(x_217);
    let x_2555 : f32 = x_1410[1u].y;
    *(x_217) = 0.0;
    *(x_217) = x_1158;
    let x_2556 : f32 = x_1489[0u].y;
  }
  var x_1135 : vec2<f32>;
  let x_2475 : f32 = x_717.z;
  let x_1129 : bool = c1;
  let x_2476 : f32 = x_1419.x;
  c1 = false;
  let x_2477 : f32 = x_1423.w;
  c1 = x_1129;
  let x_2478 : f32 = x_666.x;
  let x_270 : f32 = (*(setting)).y;
  let x_271 : f32 = (x_268 - x_270);
  let x_2479 : f32 = x_671.y;
  let x_784 : f32 = x_722.x;
  let x_2480 : f32 = x_1034.z;
  let x_1130 : f32 = param_2;
  param_2 = 0.0;
  param_2 = x_1130;
  let x_2481 : f32 = x_1473.y;
  var x_723_1 : vec3<f32> = x_660;
  x_723_1.y = x_784;
  let x_723 : vec3<f32> = x_723_1;
  let x_1131 : vec2<f32> = param_1;
  let x_2482 : f32 = x_1403.x;
  param_1 = vec2<f32>(0.0, 0.0);
  let x_2483 : f32 = x_684.z;
  param_1 = x_1131;
  let x_1517 : vec4<f32> = vec4<f32>(x_1094, x_1066, x_714);
  let x_1132 : f32 = *(x_134);
  let x_2484 : f32 = x_1497.y;
  *(x_134) = 0.0;
  let x_2485 : f32 = x_1442.x;
  let x_1518 : vec3<f32> = vec3<f32>(x_979, x_1040, x_1012);
  let x_2486 : f32 = x_1503.x;
  *(x_134) = x_1132;
  let x_274 : f32 = (*(square)).y;
  let x_1133 : f32 = *(x_265);
  let x_2487 : vec2<f32> = x_1457[1u];
  let x_1519 : vec4<f32> = vec4<f32>(x_983, 100.0, x_1063);
  let x_2488 : f32 = x_1436.y;
  *(x_265) = 0.0;
  *(x_265) = x_1133;
  var x_724_1 : vec3<f32> = x_717;
  x_724_1.x = 100.0;
  let x_724 : vec3<f32> = x_724_1;
  let x_2489 : vec2<f32> = x_1493[1u];
  let x_1134 : f32 = *(x_219);
  let x_2490 : f32 = x_1048.y;
  *(x_219) = 0.0;
  let x_2491 : f32 = x_1513.x;
  *(x_219) = x_1134;
  let x_1520 : vec3<f32> = vec3<f32>(0.5, x_1039, x_982);
  let x_2492 : f32 = x_1407[1u].y;
  x_1135 = param_5;
  param_5 = vec2<f32>(0.0, 0.0);
  let x_1521 : vec2<f32> = vec2<f32>(x_1023, x_788);
  param_5 = x_1135;
  let x_2493 : f32 = x_1420.w;
  let x_1522 : vec3<f32> = vec3<f32>(x_1022, x_1038, x_1124);
  let x_2494 : f32 = x_667.z;
  c8 = ((x_266 + x_271) > x_274);
  let x_1136 : f32 = param_2;
  param_2 = 0.0;
  let x_2495 : f32 = x_721.x;
  let x_1523 : vec3<f32> = vec3<f32>(x_135, 0.5, x_994);
  let x_2496 : f32 = x_1409.y;
  param_2 = x_1136;
  let x_2497 : f32 = x_1398.x;
  let x_276 : bool = c8;
  let x_1137 : bool = c7;
  c7 = false;
  let x_2498 : f32 = x_722.x;
  c7 = x_1137;
  let x_2499 : f32 = x_1479.y;
  var x_725_1 : vec3<f32> = x_678;
  x_725_1.z = x_163;
  let x_725 : vec3<f32> = x_725_1;
  let x_2500 : f32 = x_687.z;
  let x_1524 : mat2x2<f32> = mat2x2<f32>(x_1009, x_1025);
  let x_2501 : vec2<f32> = x_1448[1u];
  let x_1138 : f32 = *(x_194);
  let x_2502 : f32 = x_1500.y;
  *(x_194) = 0.0;
  let x_2503 : f32 = x_677.y;
  *(x_194) = x_1138;
  let x_2504 : f32 = x_666.x;
  let x_1525 : vec3<f32> = vec3<f32>(x_1025, x_244);
  let x_1139 : f32 = *(x_267);
  *(x_267) = 0.0;
  *(x_267) = x_1139;
  let x_2505 : f32 = x_1409.x;
  var x_726_1 : vec3<f32> = x_683;
  x_726_1.y = x_687.y;
  let x_726 : vec3<f32> = x_726_1;
  let x_1526 : vec4<f32> = vec4<f32>(x_1096, x_242, x_271, x_1126);
  let x_2506 : f32 = x_686.x;
  let x_1140 : vec2<f32> = param_7;
  param_7 = vec2<f32>(0.0, 0.0);
  param_7 = x_1140;
  let x_2507 : f32 = x_697.x;
  if (!(x_276)) {
    let x_2508 : f32 = x_1495.x;
    let x_1141 : f32 = *(x_177);
    *(x_177) = 0.0;
    let x_2509 : f32 = x_1437[0u].y;
    *(x_177) = x_1141;
    if (true) {
    } else {
      let x_1527 : mat2x2<f32> = mat2x2<f32>(x_1135, x_1010);
      let x_1142 : f32 = *(x_147);
      *(x_147) = 0.0;
      *(x_147) = x_1142;
      let x_2510 : f32 = x_1513.y;
      var x_727_1 : vec3<f32> = x_684;
      x_727_1.x = x_197;
      let x_727 : vec3<f32> = x_727_1;
      let x_2511 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
      let x_1143 : f32 = *(x_217);
      let x_1528 : vec2<f32> = vec2<f32>(x_197, x_1028);
      let x_2512 : f32 = x_1409.x;
      *(x_217) = 0.0;
      let x_2513 : f32 = x_702.z;
      let x_1529 : mat2x2<f32> = mat2x2<f32>(x_714, x_1048);
      let x_2514 : vec2<f32> = x_1437[0u];
      *(x_217) = x_1143;
      let x_2515 : f32 = x_715.x;
    }
    let x_1530 : vec2<f32> = vec2<f32>(x_811, x_180);
    let x_2516 : f32 = x_681.x;
    let x_1144 : f32 = *(x_265);
    *(x_265) = 0.0;
    let x_2517 : f32 = x_1448[0u].y;
    *(x_265) = x_1144;
    let x_280 : ptr<function, f32> = &((*(setting)).z);
    let x_2518 : f32 = x_1450.y;
    let x_281 : f32 = *(x_280);
    let x_1145 : f32 = *(x_249);
    *(x_249) = 0.0;
    let x_2519 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
    *(x_249) = x_1145;
    let x_2520 : f32 = x_678.y;
    var x_728_1 : vec3<f32> = x_697;
    x_728_1.y = x_168;
    let x_728 : vec3<f32> = x_728_1;
    let x_2521 : f32 = x_724.y;
    let x_1146 : f32 = param;
    let x_2522 : f32 = x_1497.y;
    param = 0.0;
    let x_2523 : f32 = x_684.y;
    param = x_1146;
    let x_1531 : vec4<f32> = vec4<f32>(x_714, 0.01, 0.100000001);
    let x_2524 : vec2<f32> = x_1489[1u];
    let x_2525 : f32 = x_1402.y;
    let x_1147 : bool = c8;
    let x_2526 : f32 = x_1408.x;
    let x_1532 : vec4<f32> = vec4<f32>(x_1097, x_193, x_165);
    let x_2527 : f32 = x_660.x;
    c8 = false;
    let x_2528 : f32 = x_1436.x;
    c8 = x_1147;
    let x_2529 : f32 = x_1450.z;
    let x_1533 : mat2x2<f32> = mat2x2<f32>(x_1010, x_1135);
    let x_2530 : vec2<f32> = x_1457[1u];
    param_6 = (x_281 / 40.0);
    let x_1148 : bool = c2;
    c2 = false;
    let x_1534 : mat2x2<f32> = mat2x2<f32>(x_714, x_1079);
    let x_2531 : f32 = x_1470.z;
    c2 = x_1148;
    let x_1535 : vec2<f32> = vec2<f32>(x_1110, x_1040);
    let x_2532 : f32 = x_1440.y;
    let x_1149 : f32 = *(x_221);
    let x_1536 : vec2<f32> = vec2<f32>(x_1124, x_1027);
    let x_2533 : vec2<f32> = x_1489[1u];
    *(x_221) = 0.0;
    *(x_221) = x_1149;
    var x_729_1 : vec3<f32> = x_702;
    x_729_1.y = x_700.x;
    let x_729 : vec3<f32> = x_729_1;
    let x_2534 : f32 = x_1495.z;
    let x_1150 : vec2<f32> = *(square);
    let x_2535 : f32 = x_703.x;
    *(square) = vec2<f32>(0.0, 0.0);
    let x_2536 : f32 = x_1479.x;
    *(square) = x_1150;
    let x_285 : vec2<f32> = *(pos);
    param_7 = x_285;
    let x_2537 : f32 = vec4<f32>(0.0, x_1028, x_153, x_138).y;
    let x_1151 : f32 = *(x_280);
    let x_2538 : f32 = x_1497.x;
    *(x_280) = 0.0;
    *(x_280) = x_1151;
    let x_286 : vec3<f32> = computeColor_f1_vf2_(&(param_6), &(param_7));
    let x_1537 : vec4<f32> = vec4<f32>(x_153, x_991);
    let x_2539 : f32 = x_713.x;
    let x_1152 : f32 = *(x_249);
    *(x_249) = 0.0;
    let x_2540 : f32 = x_678.x;
    *(x_249) = x_1152;
    let x_2541 : f32 = x_724.z;
    var x_730_1 : vec3<f32> = x_722;
    x_730_1.y = x_180;
    let x_730 : vec3<f32> = x_730_1;
    let x_2542 : f32 = x_991.y;
    return x_286;
  }
  let x_1538 : vec2<f32> = vec2<f32>(x_994, x_1022);
  let x_2543 : f32 = x_1131.y;
  let x_1153 : bool = c5;
  c5 = false;
  let x_2544 : vec2<f32> = x_1512[1u];
  c5 = x_1153;
  let x_2545 : f32 = x_1475.y;
  let x_1154 : vec2<f32> = param_3;
  let x_2546 : f32 = x_1478.x;
  param_3 = vec2<f32>(0.0, 0.0);
  let x_1539 : vec2<f32> = vec2<f32>(x_996, x_1063);
  let x_2547 : f32 = x_1518.z;
  param_3 = x_1154;
  let x_2548 : f32 = x_702.z;
  var x_731_1 : vec3<f32> = x_710;
  x_731_1.y = x_701.z;
  let x_731 : vec3<f32> = x_731_1;
  let x_1540 : mat2x2<f32> = mat2x2<f32>(x_714, x_1154);
  let x_2549 : f32 = x_678.x;
  let x_1155 : vec2<f32> = param_7;
  param_7 = vec2<f32>(0.0, 0.0);
  let x_2550 : f32 = x_1413.y;
  let x_1541 : vec4<f32> = vec4<f32>(x_784, x_166, x_148, x_1124);
  param_7 = x_1155;
  let x_2551 : f32 = x_1408.x;
  let x_288 : vec3<f32> = defaultColor_();
  let x_2552 : f32 = x_1425.y;
  let x_1156 : f32 = *(x_221);
  *(x_221) = 0.0;
  *(x_221) = x_1156;
  return x_288;
}

fn computePoint_mf22_(rotationMatrix : ptr<function, mat2x2<f32>>) -> vec3<f32> {
  var x_1669 : u32 = 0u;
  var x_1668 : f32 = 0.0;
  var x_1667 : vec2<f32> = vec2<f32>(0.0, 0.0);
  var x_1666 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  var x_1665 : bool = false;
  var x_1664 : bool = false;
  var x_1663 : f32 = 0.0;
  var x_1662 : u32 = 0u;
  var x_1661 : f32 = 0.0;
  var x_1660 : f32 = 0.0;
  var x_1659 : u32 = 0u;
  var x_1658 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  var x_1657 : bool = false;
  var x_1656 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  var aspect : vec2<f32>;
  var position_1 : vec2<f32>;
  var center : vec2<f32>;
  var result : vec3<f32>;
  var i : i32;
  var d : vec3<f32>;
  var param_8 : vec2<f32>;
  var param_9 : vec2<f32>;
  var param_10 : vec3<f32>;
  var x_1572 : mat2x2<f32>;
  let x_2557 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  let x_1160 : i32 = i;
  let x_2558 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u].x;
  let x_1543 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.5, 0.5));
  let x_2559 : f32 = x_1543[1u].x;
  i = 0;
  i = x_1160;
  let x_2560 : vec2<f32> = x_1543[1u];
  var x_733_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
  x_733_1.y = 100.0;
  let x_733 : vec3<f32> = x_733_1;
  let x_1161 : vec2<f32> = center;
  center = vec2<f32>(0.0, 0.0);
  center = x_1161;
  let x_1544 : vec4<f32> = vec4<f32>(0.100000001, x_1161, 0.666666687);
  let x_2561 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  let x_297 : vec2<f32> = x_294.resolution;
  let x_2562 : f32 = x_733.x;
  let x_1162 : vec2<f32> = param_9;
  let x_2563 : f32 = x_1544.y;
  param_9 = vec2<f32>(0.0, 0.0);
  let x_2564 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[1u];
  param_9 = x_1162;
  var x_734_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_734_1.x = 0.666666687;
  let x_734 : vec3<f32> = x_734_1;
  let x_2565 : f32 = x_734.x;
  let x_1163 : vec2<f32> = aspect;
  let x_2566 : f32 = x_1544.z;
  aspect = vec2<f32>(0.0, 0.0);
  let x_2567 : vec2<f32> = x_1543[1u];
  aspect = x_1163;
  let x_2568 : f32 = x_1544.y;
  let x_1545 : vec2<f32> = vec2<f32>(100.0, 0.666666687);
  let x_2569 : f32 = x_1543[0u].x;
  var x_735_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_735_1.z = 3.0;
  let x_735 : vec3<f32> = x_735_1;
  let x_1164 : vec2<f32> = aspect;
  let x_2570 : f32 = x_734.y;
  aspect = vec2<f32>(0.0, 0.0);
  aspect = x_1164;
  let x_299 : f32 = x_294.resolution.x;
  let x_2571 : f32 = x_733.x;
  let x_1165 : vec3<f32> = d;
  d = vec3<f32>(0.0, 0.0, 0.0);
  let x_2572 : f32 = x_1163.x;
  d = x_1165;
  let x_2573 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u].x;
  var x_736_1 : vec2<f32> = x_297;
  x_736_1.x = x_299;
  let x_736 : vec2<f32> = x_736_1;
  let x_1546 : vec4<f32> = vec4<f32>(4.0, x_1164, 1.0);
  let x_1166 : f32 = b_b;
  let x_2574 : f32 = x_297.x;
  b_b = 0.0;
  let x_2575 : f32 = x_736.x;
  b_b = x_1166;
  let x_2576 : f32 = vec4<f32>(0.0, 0.0, 0.0, 0.0).w;
  let x_301 : f32 = x_294.resolution.y;
  let x_817 : f32 = x_736.x;
  let x_1167 : vec2<f32> = position_1;
  position_1 = vec2<f32>(0.0, 0.0);
  let x_2577 : f32 = x_1164.x;
  let x_1547 : vec3<f32> = vec3<f32>(0.333333343, x_736);
  let x_2578 : f32 = x_736.y;
  position_1 = x_1167;
  let x_2579 : f32 = x_734.z;
  let x_302 : f32 = min(x_817, x_301);
  let x_2580 : f32 = x_297.y;
  let x_1548 : vec2<f32> = vec2<f32>(x_1166, 6.0);
  var x_737_1 : vec2<f32> = x_736;
  x_737_1.x = x_301;
  let x_737 : vec2<f32> = x_737_1;
  let x_1549 : mat2x2<f32> = mat2x2<f32>(x_297, x_1167);
  let x_2581 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_1168 : vec3<f32> = result;
  result = vec3<f32>(0.0, 0.0, 0.0);
  result = x_1168;
  let x_303 : vec2<f32> = vec2<f32>(x_302, x_302);
  let x_1169 : f32 = s_g;
  s_g = 0.0;
  let x_2582 : f32 = x_1165.z;
  s_g = x_1169;
  let x_2583 : f32 = x_1162.x;
  var x_738_1 : vec2<f32> = vec2<f32>(0.5, 0.5);
  x_738_1.y = 0.666666687;
  let x_738 : vec2<f32> = x_738_1;
  let x_1170 : vec3<f32> = d;
  d = vec3<f32>(0.0, 0.0, 0.0);
  d = x_1170;
  let x_1550 : vec3<f32> = vec3<f32>(40.0, 0.666666687, x_299);
  let x_2584 : f32 = x_1164.x;
  let x_304 : vec2<f32> = (x_297 / x_303);
  let x_1171 : vec2<f32> = position_1;
  let x_1551 : mat2x2<f32> = mat2x2<f32>(x_297, x_1164);
  position_1 = vec2<f32>(0.0, 0.0);
  let x_2585 : vec2<f32> = x_1549[0u];
  position_1 = x_1171;
  let x_2586 : vec2<f32> = x_1551[1u];
  var x_739_1 : vec2<f32> = vec2<f32>(0.5, 0.5);
  x_739_1.x = 0.300000012;
  let x_739 : vec2<f32> = x_739_1;
  let x_1172 : vec2<f32> = position_1;
  position_1 = vec2<f32>(0.0, 0.0);
  let x_2587 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  position_1 = x_1172;
  let x_2588 : f32 = x_1546.y;
  let x_2589 : f32 = vec2<f32>(x_1166, 6.0).x;
  aspect = x_304;
  let x_2590 : f32 = vec2<f32>(0.0, 0.0).x;
  let x_1173 : f32 = s_g;
  let x_2591 : f32 = x_1171.x;
  s_g = 0.0;
  s_g = x_1173;
  let x_2592 : f32 = x_736.y;
  var x_740_1 : vec2<f32> = x_297;
  x_740_1.x = 0.100000001;
  let x_740 : vec2<f32> = x_740_1;
  let x_2593 : f32 = x_304.y;
  let x_1174 : vec3<f32> = d;
  d = vec3<f32>(0.0, 0.0, 0.0);
  let x_2594 : f32 = x_1549[1u].y;
  d = x_1174;
  let x_2595 : f32 = x_1545.x;
  let x_309 : vec4<f32> = gl_FragCoord;
  let x_1175 : vec3<f32> = param_10;
  param_10 = vec3<f32>(0.0, 0.0, 0.0);
  let x_2596 : f32 = x_1164.x;
  param_10 = x_1175;
  var x_741_1 : vec3<f32> = x_735;
  x_741_1.x = 4.0;
  let x_741 : vec3<f32> = x_741_1;
  let x_2597 : f32 = x_737.x;
  let x_1176 : f32 = h_r;
  let x_2598 : f32 = x_1172.y;
  h_r = 0.0;
  h_r = x_1176;
  let x_310 : vec2<f32> = vec2<f32>(x_309.x, x_309.y);
  let x_1177 : vec2<f32> = aspect;
  let x_2599 : f32 = x_741.x;
  aspect = vec2<f32>(0.0, 0.0);
  let x_1553 : vec3<f32> = vec3<f32>(0.0, x_738);
  aspect = x_1177;
  let x_2600 : f32 = x_739.x;
  let x_1554 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_303);
  var x_742_1 : vec2<f32> = x_739;
  x_742_1.x = 0.5;
  let x_742 : vec2<f32> = x_742_1;
  let x_2601 : f32 = x_309.x;
  let x_2602 : f32 = x_739.x;
  let x_312 : vec2<f32> = x_294.resolution;
  var x_743_1 : vec2<f32> = x_312;
  x_743_1.y = 0.0;
  let x_743 : vec2<f32> = x_743_1;
  let x_2603 : f32 = x_1551[1u].y;
  let x_1178 : vec2<f32> = position_1;
  position_1 = vec2<f32>(0.0, 0.0);
  position_1 = x_1178;
  let x_313 : vec2<f32> = (x_310 / x_312);
  let x_1179 : vec2<f32> = center;
  center = vec2<f32>(0.0, 0.0);
  let x_2604 : f32 = x_1549[0u].x;
  center = x_1179;
  let x_1556 : vec3<f32> = vec3<f32>(x_303, 0.01);
  let x_2605 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
  let x_314 : vec2<f32> = aspect;
  let x_2606 : f32 = x_735.x;
  var x_744_1 : vec2<f32> = x_313;
  x_744_1.x = x_302;
  let x_744 : vec2<f32> = x_744_1;
  let x_1180 : f32 = s_g;
  s_g = 0.0;
  let x_2607 : f32 = x_1544.x;
  s_g = x_1180;
  let x_2608 : f32 = x_1547.z;
  let x_315 : vec2<f32> = (x_313 * x_314);
  let x_1181 : vec2<f32> = position_1;
  position_1 = vec2<f32>(0.0, 0.0);
  position_1 = x_1181;
  position_1 = x_315;
  let x_1182 : f32 = b_b;
  let x_1557 : mat2x2<f32> = mat2x2<f32>(x_737, x_740);
  b_b = 0.0;
  b_b = x_1182;
  var x_745_1 : vec4<f32> = x_309;
  x_745_1.y = 0.333333343;
  let x_745 : vec4<f32> = x_745_1;
  let x_318 : vec2<f32> = aspect;
  let x_2609 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
  let x_780 : f32 = x_733.y;
  let x_1183 : mat2x2<f32> = *(rotationMatrix);
  let x_2610 : vec2<f32> = x_1554[1u];
  let x_1558 : vec4<f32> = vec4<f32>(100.0, 3.0, x_738);
  let x_2611 : vec2<f32> = x_1549[0u];
  *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_2612 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  let x_1559 : vec3<f32> = vec3<f32>(x_1177, x_780);
  *(rotationMatrix) = x_1183;
  let x_2613 : f32 = x_303.y;
  var x_746_1 : vec2<f32> = x_310;
  x_746_1.y = x_780;
  let x_746 : vec2<f32> = x_746_1;
  let x_1184 : vec2<f32> = param_8;
  let x_1560 : mat2x2<f32> = mat2x2<f32>(x_313, x_314);
  let x_2614 : f32 = x_1167.y;
  param_8 = vec2<f32>(0.0, 0.0);
  param_8 = x_1184;
  let x_319 : vec2<f32> = (vec2<f32>(0.5, 0.5) * x_318);
  let x_2615 : f32 = x_739.y;
  center = x_319;
  let x_2616 : f32 = x_744.x;
  let x_1185 : vec2<f32> = center;
  center = vec2<f32>(0.0, 0.0);
  let x_2617 : f32 = x_743.y;
  center = x_1185;
  let x_818 : f32 = x_736.x;
  let x_2618 : f32 = vec2<f32>(4.0, x_299).x;
  var x_747_1 : vec2<f32> = x_312;
  x_747_1.x = x_818;
  let x_747 : vec2<f32> = x_747_1;
  let x_2619 : f32 = x_1171.y;
  let x_1186 : mat2x2<f32> = *(rotationMatrix);
  *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_2620 : f32 = x_1164.y;
  *(rotationMatrix) = x_1186;
  let x_2621 : f32 = x_303.y;
  let x_1561 : vec2<f32> = vec2<f32>(0.333333343, 100.0);
  let x_2622 : f32 = x_1548.y;
  let x_320 : mat2x2<f32> = *(rotationMatrix);
  let x_2623 : f32 = x_1171.y;
  let x_798 : f32 = x_738.y;
  let x_2624 : f32 = x_1558.y;
  let x_1187 : vec2<f32> = param_9;
  param_9 = vec2<f32>(0.0, 0.0);
  param_9 = x_1187;
  var x_748_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
  x_748_1.x = x_798;
  let x_748 : vec3<f32> = x_748_1;
  let x_1188 : mat2x2<f32> = *(rotationMatrix);
  *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_2625 : f32 = vec2<f32>(0.5, 0.5).y;
  *(rotationMatrix) = x_1188;
  let x_321 : vec2<f32> = position_1;
  let x_2626 : f32 = x_742.x;
  let x_1189 : f32 = b_b;
  b_b = 0.0;
  b_b = x_1189;
  let x_322 : vec2<f32> = (x_321 * x_320);
  let x_2627 : f32 = x_1558.w;
  position_1 = x_322;
  var x_749_1 : vec3<f32> = x_734;
  x_749_1.y = x_301;
  let x_749 : vec3<f32> = x_749_1;
  let x_1190 : f32 = b_b;
  let x_2628 : f32 = x_1548.y;
  b_b = 0.0;
  b_b = x_1190;
  let x_2629 : f32 = x_313.x;
  let x_323 : mat2x2<f32> = *(rotationMatrix);
  let x_1191 : i32 = i;
  i = 0;
  let x_1562 : mat2x2<f32> = mat2x2<f32>(x_1179, x_737);
  let x_2630 : f32 = x_1550.y;
  i = x_1191;
  let x_2631 : f32 = x_747.y;
  var x_750_1 : vec2<f32> = x_742;
  x_750_1.y = x_299;
  let x_750 : vec2<f32> = x_750_1;
  let x_2632 : f32 = x_749.x;
  let x_1192 : i32 = i;
  let x_2633 : f32 = x_750.x;
  i = 0;
  i = x_1192;
  let x_2634 : f32 = x_734.z;
  let x_324 : vec2<f32> = center;
  var x_751_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_751_1.y = 1.0;
  let x_751 : vec3<f32> = x_751_1;
  let x_1193 : vec2<f32> = aspect;
  aspect = vec2<f32>(0.0, 0.0);
  aspect = x_1193;
  let x_2635 : f32 = x_315.y;
  let x_1563 : vec4<f32> = vec4<f32>(vec3<f32>(0.0, 0.0, 0.0), 40.0);
  let x_2636 : f32 = x_303.y;
  var x_752_1 : vec3<f32> = x_734;
  x_752_1.y = x_301;
  let x_752 : vec3<f32> = x_752_1;
  let x_2637 : f32 = x_1543[0u].y;
  let x_1194 : vec3<f32> = param_10;
  let x_2638 : f32 = x_745.z;
  param_10 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1564 : vec4<f32> = vec4<f32>(0.300000012, x_1165);
  param_10 = x_1194;
  let x_2639 : f32 = x_1560[0u].x;
  center = (x_324 * x_323);
  let x_1195 : vec2<f32> = position_1;
  let x_1565 : vec4<f32> = vec4<f32>(x_1190, x_1184, x_302);
  let x_2640 : f32 = x_1178.x;
  position_1 = vec2<f32>(0.0, 0.0);
  let x_2641 : f32 = x_734.z;
  position_1 = x_1195;
  let x_1566 : vec4<f32> = vec4<f32>(x_748, x_1190);
  var x_753_1 : vec3<f32> = x_735;
  x_753_1.x = 100.0;
  let x_753 : vec3<f32> = x_753_1;
  let x_2642 : f32 = x_738.y;
  let x_1196 : vec2<f32> = position_1;
  let x_2643 : f32 = x_1164.y;
  position_1 = vec2<f32>(0.0, 0.0);
  let x_2644 : f32 = x_310.y;
  position_1 = x_1196;
  var x_754_1 : vec2<f32> = x_324;
  x_754_1.x = 10.0;
  let x_754 : vec2<f32> = x_754_1;
  let x_2645 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).x;
  let x_1197 : vec2<f32> = position_1;
  let x_2646 : f32 = x_1560[1u].y;
  position_1 = vec2<f32>(0.0, 0.0);
  let x_1198 : f32 = b_b;
  b_b = 0.0;
  b_b = x_1198;
  position_1 = x_1197;
  result = vec3<f32>(0.0, 0.0, 0.0);
  i = 35;
  var x_755_1 : vec2<f32> = x_312;
  x_755_1.x = x_299;
  let x_755 : vec2<f32> = x_755_1;
  let x_1199 : vec2<f32> = position_1;
  position_1 = vec2<f32>(0.0, 0.0);
  let x_2647 : f32 = x_734.x;
  let x_1567 : mat2x2<f32> = mat2x2<f32>(x_315, x_297);
  let x_2648 : f32 = x_1168.z;
  position_1 = x_1199;
  loop {
    let x_1200 : vec2<f32> = center;
    let x_2649 : f32 = x_739.y;
    let x_1568 : vec2<f32> = vec2<f32>(100.0, 6.0);
    let x_2650 : vec2<f32> = x_1551[1u];
    center = vec2<f32>(0.0, 0.0);
    let x_2651 : f32 = x_735.y;
    center = x_1200;
    let x_1569 : vec3<f32> = vec3<f32>(0.0, x_313);
    let x_1201 : vec3<f32> = result;
    result = vec3<f32>(0.0, 0.0, 0.0);
    let x_2652 : vec2<f32> = mat2x2<f32>(x_1162, x_1161)[0u];
    result = x_1201;
    let x_1571 : vec4<f32> = vec4<f32>(x_1172, x_1196);
    let x_335 : i32 = i;
    let x_2653 : f32 = x_1568.y;
    x_1572 = mat2x2<f32>(x_1195, x_1167);
    let x_2654 : vec2<f32> = x_1543[1u];
    var x_756_1 : vec2<f32> = x_324;
    x_756_1.x = 1.0;
    let x_756 : vec2<f32> = x_756_1;
    let x_2655 : f32 = x_746.y;
    let x_1202 : vec2<f32> = position_1;
    position_1 = vec2<f32>(0.0, 0.0);
    position_1 = x_1202;
    if (true) {
    } else {
      let x_2656 : f32 = x_740.x;
      let x_1203 : vec2<f32> = aspect;
      aspect = vec2<f32>(0.0, 0.0);
      let x_2657 : f32 = x_742.x;
      aspect = x_1203;
      let x_2658 : f32 = x_734.y;
      return x_748;
    }
    let x_1204 : i32 = i;
    i = 0;
    i = x_1204;
    let x_1573 : vec2<f32> = vec2<f32>(x_1173, 100.0);
    let x_2659 : f32 = x_1567[1u].y;
    let x_1205 : vec3<f32> = result;
    result = vec3<f32>(0.0, 0.0, 0.0);
    result = x_1205;
    if ((x_335 >= 0)) {
    } else {
      break;
    }
    let x_2660 : f32 = x_747.y;
    let x_1574 : vec3<f32> = vec3<f32>(x_780, x_312);
    let x_2661 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
    let x_1206 : vec2<f32> = param_8;
    param_8 = vec2<f32>(0.0, 0.0);
    param_8 = x_1206;
    let x_2662 : f32 = x_1168.y;
    let x_338 : vec2<f32> = center;
    let x_2663 : f32 = x_1569.z;
    let x_1207 : vec3<f32> = d;
    let x_2664 : f32 = x_1548.y;
    d = vec3<f32>(0.0, 0.0, 0.0);
    let x_2665 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u].x;
    d = x_1207;
    let x_339 : i32 = i;
    let x_340 : f32 = f32(x_339);
    let x_2666 : f32 = vec2<f32>(0.0, 0.0).y;
    let x_1208 : i32 = i;
    i = 0;
    let x_1575 : vec2<f32> = vec2<f32>(10.0, 0.666666687);
    let x_2667 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
    i = x_1208;
    let x_2668 : f32 = x_748.x;
    var x_757_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
    x_757_1.x = 0.0;
    let x_757 : vec3<f32> = x_757_1;
    let x_2669 : f32 = x_314.x;
    let x_1209 : f32 = b_b;
    b_b = 0.0;
    let x_2670 : f32 = x_315.y;
    b_b = x_1209;
    let x_2671 : f32 = x_1567[0u].x;
    let x_1210 : vec3<f32> = d;
    let x_2672 : f32 = x_1205.x;
    d = vec3<f32>(0.0, 0.0, 0.0);
    let x_2673 : f32 = x_310.y;
    d = x_1210;
    var x_758_1 : vec3<f32> = x_749;
    x_758_1.z = x_340;
    let x_758 : vec3<f32> = x_758_1;
    let x_1577 : vec2<f32> = vec2<f32>(x_301, x_780);
    let x_1211 : vec2<f32> = param_8;
    let x_2674 : vec2<f32> = x_1562[0u];
    param_8 = vec2<f32>(0.0, 0.0);
    let x_1578 : vec4<f32> = vec4<f32>(x_1200, x_1206);
    let x_2675 : f32 = x_313.x;
    param_8 = x_1211;
    let x_2676 : vec2<f32> = x_1557[0u];
    let x_2677 : f32 = x_743.x;
    let x_1579 : vec2<f32> = vec2<f32>(x_301, 0.333333343);
    let x_1212 : vec3<f32> = result;
    let x_2678 : f32 = x_1571.x;
    result = vec3<f32>(0.0, 0.0, 0.0);
    result = x_1212;
    let x_2679 : vec2<f32> = x_320[1u];
    var x_759_1 : vec3<f32> = vec3<f32>(0.300000012, 0.300000012, 0.300000012);
    x_759_1.y = x_299;
    let x_759 : vec3<f32> = x_759_1;
    let x_1213 : mat2x2<f32> = *(rotationMatrix);
    let x_2680 : f32 = x_752.z;
    let x_1580 : mat2x2<f32> = mat2x2<f32>(x_310, x_1179);
    *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
    let x_1581 : mat2x2<f32> = mat2x2<f32>(x_1196, x_1164);
    *(rotationMatrix) = x_1213;
    let x_2681 : f32 = x_1185.x;
    let x_344 : f32 = x_87.time;
    let x_1582 : vec3<f32> = vec3<f32>(x_302, x_739);
    let x_1214 : f32 = s_g;
    let x_2682 : f32 = x_1172.x;
    s_g = 0.0;
    let x_1583 : vec2<f32> = vec2<f32>(6.0, x_299);
    let x_2683 : f32 = x_742.y;
    s_g = x_1214;
    let x_2684 : f32 = x_1567[0u].x;
    let x_1584 : vec2<f32> = vec2<f32>(x_1182, x_1173);
    let x_2685 : f32 = x_1569.z;
    var x_760_1 : vec4<f32> = x_309;
    x_760_1.z = 1.0;
    let x_760 : vec4<f32> = x_760_1;
    let x_2686 : f32 = x_1567[1u].x;
    let x_1215 : vec3<f32> = result;
    let x_2687 : f32 = x_1187.y;
    let x_1585 : vec3<f32> = vec3<f32>(x_818, x_1171);
    let x_2688 : vec2<f32> = x_1213[1u];
    result = vec3<f32>(0.0, 0.0, 0.0);
    result = x_1215;
    let x_2689 : f32 = x_1549[0u].x;
    let x_346 : f32 = sin((x_344 + (x_340 / 10.0)));
    let x_2690 : f32 = x_1184.y;
    let x_1216 : vec2<f32> = param_9;
    param_9 = vec2<f32>(0.0, 0.0);
    param_9 = x_1216;
    let x_2691 : f32 = x_313.x;
    let x_348 : f32 = (x_346 / 4.0);
    let x_350 : vec2<f32> = (vec2<f32>(x_348, 0.0) + x_338);
    let x_1586 : vec3<f32> = vec3<f32>(x_1173, x_1187);
    let x_1217 : vec2<f32> = param_9;
    param_9 = vec2<f32>(0.0, 0.0);
    let x_2692 : f32 = x_1167.y;
    param_9 = x_1217;
    let x_2693 : f32 = x_757.z;
    let x_1587 : mat2x2<f32> = mat2x2<f32>(x_314, x_1196);
    let x_352 : i32 = i;
    let x_1218 : mat2x2<f32> = *(rotationMatrix);
    let x_2694 : f32 = x_1205.z;
    let x_1588 : mat2x2<f32> = mat2x2<f32>(x_1200, x_338);
    *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
    let x_2695 : f32 = x_1571.y;
    *(rotationMatrix) = x_1218;
    let x_353 : f32 = f32(x_352);
    var x_761_1 : vec3<f32> = x_758;
    x_761_1.y = 1.0;
    let x_761 : vec3<f32> = x_761_1;
    let x_1589 : vec4<f32> = vec4<f32>(x_817, x_297, 3.0);
    let x_2696 : f32 = x_733.z;
    let x_2697 : f32 = x_1579.x;
    let x_1219 : vec2<f32> = param_8;
    param_8 = vec2<f32>(0.0, 0.0);
    param_8 = x_1219;
    let x_356 : f32 = sin((x_353 / x_733.y));
    let x_2698 : f32 = x_1187.y;
    let x_357 : f32 = (0.01 + x_356);
    let x_1220 : f32 = b_b;
    b_b = 0.0;
    b_b = x_1220;
    let x_1590 : vec4<f32> = vec4<f32>(x_346, x_1176, 0.100000001, 1.0);
    let x_358 : i32 = i;
    let x_1221 : vec2<f32> = aspect;
    aspect = vec2<f32>(0.0, 0.0);
    let x_2699 : f32 = x_735.y;
    let x_1591 : vec3<f32> = vec3<f32>(x_1180, x_338);
    aspect = x_1221;
    let x_2700 : f32 = x_1557[1u].y;
    let x_359 : f32 = f32(x_358);
    let x_2701 : vec2<f32> = x_1549[1u];
    let x_1222 : vec2<f32> = param_8;
    let x_2702 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
    param_8 = vec2<f32>(0.0, 0.0);
    let x_2703 : f32 = x_1584.x;
    param_8 = x_1222;
    let x_2704 : f32 = x_1580[1u].x;
    let x_1592 : vec3<f32> = vec3<f32>(x_1209, x_755);
    let x_2705 : f32 = x_760.w;
    let x_1223 : vec2<f32> = aspect;
    let x_2706 : f32 = x_751.x;
    aspect = vec2<f32>(0.0, 0.0);
    let x_2707 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
    aspect = x_1223;
    let x_2708 : f32 = x_1565.y;
    let x_362 : vec2<f32> = position_1;
    param_8 = x_362;
    let x_2709 : f32 = x_1219.y;
    let x_1224 : vec3<f32> = d;
    d = vec3<f32>(0.0, 0.0, 0.0);
    d = x_1224;
    var x_762_1 : vec2<f32> = x_313;
    x_762_1.y = 3.0;
    let x_762 : vec2<f32> = x_762_1;
    let x_1225 : vec2<f32> = param_9;
    let x_2710 : f32 = x_1547.z;
    param_9 = vec2<f32>(0.0, 0.0);
    let x_2711 : f32 = x_749.y;
    param_9 = x_1225;
    let x_2712 : f32 = x_1207.x;
    param_9 = x_350;
    let x_2713 : f32 = x_1591.z;
    let x_1226 : mat2x2<f32> = *(rotationMatrix);
    *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
    let x_1593 : vec4<f32> = vec4<f32>(x_1163, x_1216);
    let x_2714 : f32 = x_1549[0u].x;
    *(rotationMatrix) = x_1226;
    let x_2715 : f32 = x_738.y;
    let x_808 : f32 = x_742.x;
    let x_2716 : f32 = vec2<f32>(0.5, 0.5).x;
    let x_1227 : f32 = h_r;
    let x_2717 : f32 = x_1161.y;
    h_r = 0.0;
    h_r = x_1227;
    let x_2718 : f32 = x_735.y;
    let x_1594 : vec4<f32> = vec4<f32>(x_762, x_798, x_299);
    let x_2719 : f32 = x_1546.x;
    var x_763_1 : vec2<f32> = x_362;
    x_763_1.y = x_808;
    let x_763 : vec2<f32> = x_763_1;
    let x_1228 : vec3<f32> = param_10;
    param_10 = vec3<f32>(0.0, 0.0, 0.0);
    let x_2720 : f32 = x_1193.x;
    let x_2721 : vec2<f32> = x_1549[0u];
    param_10 = x_1228;
    param_10 = vec3<f32>(x_357, 0.01, x_359);
    let x_2722 : f32 = x_1221.x;
    let x_1596 : vec4<f32> = vec4<f32>(6.0, x_1205);
    let x_2723 : vec2<f32> = x_1226[1u];
    let x_1229 : f32 = s_g;
    let x_2724 : f32 = x_1205.x;
    s_g = 0.0;
    s_g = x_1229;
    let x_2725 : f32 = x_319.x;
    let x_365 : vec3<f32> = drawShape_vf2_vf2_vf3_(&(param_8), &(param_9), &(param_10));
    let x_1230 : mat2x2<f32> = *(rotationMatrix);
    *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
    let x_2726 : f32 = x_1193.x;
    *(rotationMatrix) = x_1230;
    let x_1597 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_737);
    let x_2727 : vec2<f32> = x_1587[1u];
    let x_789 : f32 = x_757.x;
    var x_764_1 : vec3<f32> = x_365;
    x_764_1.x = x_789;
    let x_764 : vec3<f32> = x_764_1;
    let x_2728 : f32 = x_764.z;
    let x_1231 : vec2<f32> = param_8;
    let x_2729 : f32 = x_1587[1u].y;
    let x_1598 : vec4<f32> = vec4<f32>(x_744, x_1231);
    let x_2730 : f32 = x_1546.w;
    param_8 = vec2<f32>(0.0, 0.0);
    let x_2731 : f32 = x_1554[1u].y;
    param_8 = x_1231;
    d = x_365;
    let x_1232 : vec2<f32> = param_8;
    let x_2732 : f32 = mat2x2<f32>(x_1187, x_746)[1u].y;
    param_8 = vec2<f32>(0.0, 0.0);
    let x_2733 : f32 = x_322.x;
    param_8 = x_1232;
    var x_765_1 : vec2<f32> = x_762;
    x_765_1.x = x_299;
    let x_765 : vec2<f32> = x_765_1;
    let x_2734 : f32 = x_1170.z;
    let x_366 : vec3<f32> = d;
    let x_2735 : f32 = vec2<f32>(0.0, 0.0).x;
    var x_766_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
    x_766_1.y = x_808;
    let x_766 : vec3<f32> = x_766_1;
    let x_2736 : f32 = x_1174.y;
    let x_1233 : vec3<f32> = d;
    d = vec3<f32>(0.0, 0.0, 0.0);
    d = x_1233;
    let x_2737 : f32 = x_1580[0u].y;
    let x_367 : f32 = length(x_366);
    let x_2738 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
    let x_1234 : mat2x2<f32> = *(rotationMatrix);
    *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
    let x_2739 : f32 = x_743.x;
    *(rotationMatrix) = x_1234;
    let x_1599 : mat2x2<f32> = mat2x2<f32>(x_1193, x_362);
    if ((x_367 <= 0.0)) {
      let x_1235 : mat2x2<f32> = *(rotationMatrix);
      let x_2740 : f32 = x_1586.z;
      *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
      let x_2741 : f32 = x_1233.z;
      *(rotationMatrix) = x_1235;
      let x_1236 : f32 = b_b;
      b_b = 0.0;
      let x_1600 : vec2<f32> = vec2<f32>(x_1169, x_818);
      let x_2742 : f32 = x_745.w;
      b_b = x_1236;
      let x_2743 : f32 = x_1550.y;
      let x_1601 : vec4<f32> = vec4<f32>(x_1227, x_740, x_1190);
      var x_767_1 : vec2<f32> = x_314;
      x_767_1.y = x_739.x;
      let x_767 : vec2<f32> = x_767_1;
      let x_1237 : f32 = s_g;
      let x_2744 : f32 = x_1163.x;
      s_g = 0.0;
      let x_2745 : f32 = x_1161.y;
      s_g = x_1237;
      let x_1602 : vec3<f32> = vec3<f32>(x_780, x_817, x_817);
      let x_2746 : f32 = x_310.x;
      continue;
    }
    let x_1238 : mat2x2<f32> = *(rotationMatrix);
    let x_2747 : f32 = vec2<f32>(0.0, 0.0).y;
    *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
    *(rotationMatrix) = x_1238;
    let x_2748 : vec2<f32> = mat2x2<f32>(x_1181, x_1179)[1u];
    var x_768_1 : vec2<f32> = x_310;
    x_768_1.y = x_353;
    let x_768 : vec2<f32> = x_768_1;
    let x_372 : vec3<f32> = d;
    let x_2749 : f32 = x_1591.z;
    let x_1239 : vec2<f32> = position_1;
    let x_2750 : f32 = x_759.z;
    position_1 = vec2<f32>(0.0, 0.0);
    position_1 = x_1239;
    var x_769_1 : vec2<f32> = x_315;
    x_769_1.x = x_302;
    let x_769 : vec2<f32> = x_769_1;
    let x_2751 : f32 = x_1565.x;
    let x_1240 : vec3<f32> = result;
    result = vec3<f32>(0.0, 0.0, 0.0);
    result = x_1240;
    let x_2752 : f32 = x_309.w;
    let x_1241 : i32 = i;
    i = 0;
    i = x_1241;
    let x_2753 : f32 = x_322.y;
    let x_1242 : f32 = b_b;
    b_b = 0.0;
    let x_2754 : f32 = x_764.y;
    b_b = x_1242;
    let x_2755 : f32 = x_1578.x;
    var x_770_1 : vec3<f32> = x_758;
    x_770_1.y = x_739.x;
    let x_770 : vec3<f32> = x_770_1;
    let x_1243 : vec3<f32> = result;
    let x_2756 : f32 = x_757.y;
    result = vec3<f32>(0.0, 0.0, 0.0);
    result = x_1243;
    let x_2757 : f32 = x_1566.x;
    let x_1244 : vec2<f32> = param_9;
    param_9 = vec2<f32>(0.0, 0.0);
    let x_1603 : vec3<f32> = vec3<f32>(x_346, 100.0, x_367);
    param_9 = x_1244;
    let x_1604 : vec4<f32> = vec4<f32>(x_817, x_1177, 0.666666687);
    let x_2758 : f32 = x_1561.y;
    let x_2759 : f32 = x_752.z;
    let x_1245 : vec2<f32> = param_8;
    let x_2760 : f32 = x_759.x;
    param_8 = vec2<f32>(0.0, 0.0);
    let x_1605 : vec3<f32> = vec3<f32>(x_1190, 0.5, x_1214);
    let x_2761 : f32 = x_751.y;
    param_8 = x_1245;
    var x_771_1 : vec3<f32> = x_751;
    x_771_1.y = x_356;
    let x_771 : vec3<f32> = x_771_1;
    let x_1246 : f32 = s_g;
    s_g = 0.0;
    s_g = x_1246;
    result = vec3<f32>(x_372.x, x_372[1u], x_372.z);
    let x_1247 : i32 = i;
    let x_1606 : vec4<f32> = vec4<f32>(x_366, 1.0);
    let x_2762 : f32 = x_1596.w;
    i = 0;
    let x_2763 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
    let x_1607 : vec2<f32> = vec2<f32>(x_789, x_1173);
    let x_2764 : f32 = x_1588[1u].x;
    i = x_1247;

    continuing {
      let x_1248 : f32 = s_g;
      s_g = 0.0;
      s_g = x_1248;
      var x_772_1 : vec2<f32> = x_743;
      x_772_1.y = x_367;
      let x_772 : vec2<f32> = x_772_1;
      let x_2765 : f32 = x_1544.x;
      let x_1608 : vec4<f32> = vec4<f32>(x_1177, x_346, x_817);
      let x_2766 : f32 = vec2<f32>(0.5, 0.5).y;
      let x_1249 : vec3<f32> = result;
      let x_2767 : f32 = x_1171.y;
      result = vec3<f32>(0.0, 0.0, 0.0);
      result = x_1249;
      let x_1609 : vec2<f32> = vec2<f32>(0.100000001, x_359);
      let x_2768 : f32 = x_1557[1u].x;
      let x_377 : i32 = i;
      let x_1610 : vec2<f32> = vec2<f32>(x_1166, x_1173);
      let x_2769 : f32 = x_1578.y;
      var x_773_1 : vec3<f32> = x_764;
      x_773_1.x = x_735.z;
      let x_773 : vec3<f32> = x_773_1;
      let x_2770 : f32 = x_1558.w;
      let x_2771 : f32 = x_1584.x;
      var x_774_1 : vec2<f32> = x_318;
      x_774_1.x = x_359;
      let x_774 : vec2<f32> = x_774_1;
      let x_2772 : f32 = x_747.y;
      let x_1250 : vec3<f32> = param_10;
      param_10 = vec3<f32>(0.0, 0.0, 0.0);
      let x_2773 : f32 = x_321.x;
      param_10 = x_1250;
      let x_2774 : f32 = x_1590.y;
      let x_1611 : mat2x2<f32> = mat2x2<f32>(x_1219, x_1171);
      i = (x_377 - bitcast<i32>(1u));
      let x_2775 : f32 = x_736.y;
      let x_1251 : mat2x2<f32> = *(rotationMatrix);
      let x_2776 : f32 = x_309.z;
      *(rotationMatrix) = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
      let x_2777 : f32 = x_747.y;
      *(rotationMatrix) = x_1251;
      let x_2778 : vec2<f32> = x_1560[1u];
      var x_775_1 : vec3<f32> = x_764;
      x_775_1.y = x_357;
      let x_775 : vec3<f32> = x_775_1;
      let x_1612 : vec2<f32> = vec2<f32>(x_817, x_348);
      let x_1252 : vec2<f32> = center;
      let x_2779 : f32 = x_764.z;
      center = vec2<f32>(0.0, 0.0);
      let x_2780 : f32 = x_1200.x;
      center = x_1252;
      let x_2781 : f32 = x_1549[0u].y;
    }
  }
  let x_380 : vec3<f32> = result;
  let x_1253 : vec2<f32> = center;
  center = vec2<f32>(0.0, 0.0);
  let x_2782 : f32 = x_1179.x;
  center = x_1253;
  let x_2783 : f32 = x_314.y;
  if (false) {
    let x_2787 : vec2<f32> = x_1572[1u];
    let x_1256 : f32 = h_r;
    h_r = 0.0;
    let x_2788 : f32 = x_1544.z;
    h_r = x_1256;
    let x_2789 : f32 = x_1572[0u].y;
    var x_777_1 : vec2<f32> = x_303;
    x_777_1.x = x_302;
    let x_777 : vec2<f32> = x_777_1;
    let x_2790 : f32 = x_1565.z;
    let x_1257 : vec2<f32> = param_8;
    let x_2791 : vec2<f32> = x_320[0u];
    let x_1614 : vec2<f32> = vec2<f32>(x_1166, x_1180);
    let x_2792 : f32 = x_1545.y;
    param_8 = vec2<f32>(0.0, 0.0);
    let x_2793 : f32 = x_741.x;
    param_8 = x_1257;
    let x_2794 : f32 = x_733.x;
    return vec3<f32>(0.0, 0.0, 0.0);
  }
  let x_1254 : vec2<f32> = param_9;
  let x_2784 : f32 = x_1554[0u].x;
  param_9 = vec2<f32>(0.0, 0.0);
  param_9 = x_1254;
  var x_776_1 : vec3<f32> = x_734;
  x_776_1.z = x_818;
  let x_776 : vec3<f32> = x_776_1;
  let x_2785 : f32 = x_1162.x;
  let x_1613 : vec4<f32> = vec4<f32>(x_1179, x_1185);
  let x_1255 : vec2<f32> = center;
  center = vec2<f32>(0.0, 0.0);
  let x_2786 : f32 = x_1177.y;
  center = x_1255;
  return x_380;
}

fn main_1() {
  var x_1617 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  var angle : f32;
  var rotationMatrix_1 : mat2x2<f32>;
  var point1 : vec3<f32>;
  var param_11 : mat2x2<f32>;
  var rotationMatrix2 : mat2x2<f32>;
  var point2 : vec3<f32>;
  var param_12 : mat2x2<f32>;
  var rotationMatrix3 : mat2x2<f32>;
  var point3 : vec3<f32>;
  var param_13 : mat2x2<f32>;
  var mixed : vec3<f32>;
  let x_1670 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  let x_819 : vec3<f32> = point3;
  point3 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1671 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  point3 = x_819;
  var x_605_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  x_605_1.z = 100.0;
  let x_605 : vec3<f32> = x_605_1;
  let x_1672 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
  let x_822 : mat2x2<f32> = rotationMatrix_1;
  rotationMatrix_1 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  rotationMatrix_1 = x_822;
  let x_1673 : f32 = vec2<f32>(0.5, 0.5).y;
  let x_1674 : f32 = x_819.z;
  let x_823 : f32 = s_g;
  s_g = 0.0;
  s_g = x_823;
  let x_1260 : vec3<f32> = vec3<f32>(0.0, 0.300000012, 0.100000001);
  var x_606_1 : vec2<f32> = vec2<f32>(0.5, 0.5);
  x_606_1.x = 1.0;
  let x_606 : vec2<f32> = x_606_1;
  let x_1261 : mat2x2<f32> = mat2x2<f32>(x_606, vec2<f32>(0.0, 0.0));
  let x_1675 : f32 = x_1261[0u].x;
  let x_385 : f32 = x_87.time;
  let x_386 : f32 = sin(x_385);
  let x_1676 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u].x;
  let x_824 : mat2x2<f32> = rotationMatrix_1;
  let x_1677 : f32 = x_1260.x;
  let x_1262 : vec3<f32> = vec3<f32>(0.100000001, 4.0, 0.01);
  rotationMatrix_1 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  rotationMatrix_1 = x_824;
  let x_1678 : f32 = vec2<f32>(0.0, 0.0).y;
  let x_388 : f32 = (0.100000001 * x_386);
  let x_1679 : f32 = x_606.x;
  let x_825 : mat2x2<f32> = rotationMatrix_1;
  rotationMatrix_1 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1680 : f32 = x_819.y;
  rotationMatrix_1 = x_825;
  let x_1681 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  angle = x_388;
  let x_1682 : vec2<f32> = x_825[1u];
  let x_826 : mat2x2<f32> = rotationMatrix3;
  let x_1683 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0))[0u];
  rotationMatrix3 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1684 : f32 = x_606.y;
  let x_1264 : vec3<f32> = vec3<f32>(x_385, 0.0, x_388);
  let x_1685 : f32 = x_1262.x;
  rotationMatrix3 = x_826;
  let x_390 : f32 = angle;
  let x_1686 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
  let x_827 : mat2x2<f32> = rotationMatrix3;
  let x_1265 : vec3<f32> = vec3<f32>(0.0, vec2<f32>(0.0, 0.0));
  let x_1687 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  rotationMatrix3 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  rotationMatrix3 = x_827;
  let x_1688 : vec2<f32> = x_1261[0u];
  let x_391 : f32 = sin(x_390);
  let x_828 : mat2x2<f32> = rotationMatrix3;
  rotationMatrix3 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1689 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  rotationMatrix3 = x_828;
  let x_1690 : f32 = vec2<f32>(0.5, 0.5).x;
  let x_392 : f32 = angle;
  let x_829 : vec3<f32> = point2;
  point2 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1691 : f32 = x_819.x;
  point2 = x_829;
  let x_1692 : f32 = vec4<f32>(0.0, 0.0, 0.0, 0.0).w;
  let x_393 : f32 = cos(x_392);
  let x_394 : f32 = -(x_393);
  let x_1693 : f32 = vec2<f32>(0.0, 0.0).y;
  let x_830 : vec3<f32> = mixed;
  let x_1694 : f32 = x_822[1u].x;
  mixed = vec3<f32>(0.0, 0.0, 0.0);
  let x_1695 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).y;
  mixed = x_830;
  let x_395 : f32 = angle;
  let x_1696 : f32 = x_1260.z;
  let x_1697 : f32 = vec3<f32>(1.0, 0.01, 40.0).x;
  let x_831 : vec3<f32> = point3;
  point3 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1268 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  point3 = x_831;
  let x_1269 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.0, 0.0));
  let x_1698 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  let x_396 : f32 = cos(x_395);
  let x_1699 : f32 = x_830.y;
  let x_832 : vec3<f32> = point3;
  let x_1270 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.5, 0.5));
  let x_1700 : f32 = x_1260.x;
  point3 = vec3<f32>(0.0, 0.0, 0.0);
  point3 = x_832;
  let x_397 : f32 = angle;
  let x_833 : mat2x2<f32> = param_11;
  param_11 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1701 : vec2<f32> = x_825[1u];
  let x_1271 : mat2x2<f32> = mat2x2<f32>(x_606, vec2<f32>(0.5, 0.5));
  param_11 = x_833;
  let x_398 : f32 = sin(x_397);
  let x_1702 : f32 = vec4<f32>(0.0, 0.0, 0.0, 0.0).x;
  var x_607_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_607_1.z = x_393;
  let x_607 : vec3<f32> = x_607_1;
  let x_834 : f32 = h_r;
  h_r = 0.0;
  let x_1703 : f32 = x_1271[1u].y;
  h_r = x_834;
  let x_399 : vec2<f32> = vec2<f32>(x_391, x_394);
  let x_1704 : f32 = x_1264.x;
  let x_1272 : vec2<f32> = vec2<f32>(x_823, 0.100000001);
  let x_1705 : f32 = x_1271[1u].y;
  let x_835 : vec3<f32> = point1;
  point1 = vec3<f32>(0.0, 0.0, 0.0);
  point1 = x_835;
  let x_1706 : vec2<f32> = x_833[1u];
  let x_400 : vec2<f32> = vec2<f32>(x_396, x_398);
  let x_1707 : f32 = x_819.z;
  let x_836 : vec3<f32> = mixed;
  let x_1708 : f32 = x_607.x;
  mixed = vec3<f32>(0.0, 0.0, 0.0);
  let x_1709 : f32 = x_606.y;
  let x_1273 : vec3<f32> = vec3<f32>(3.0, x_396, 1.0);
  let x_1710 : vec2<f32> = x_1270[0u];
  mixed = x_836;
  let x_1711 : f32 = x_830.z;
  let x_1274 : vec3<f32> = vec3<f32>(0.0, x_395, x_390);
  let x_1712 : f32 = vec2<f32>(0.5, 0.5).x;
  var x_608_1 : vec3<f32> = vec3<f32>(0.0, 0.333333343, 0.666666687);
  x_608_1.x = 0.01;
  let x_608 : vec3<f32> = x_608_1;
  let x_401 : mat2x2<f32> = mat2x2<f32>(x_399, x_400);
  let x_1713 : f32 = x_1273.z;
  rotationMatrix_1 = x_401;
  let x_1275 : vec2<f32> = vec2<f32>(x_391, x_386);
  let x_1714 : vec2<f32> = x_1269[1u];
  let x_404 : mat2x2<f32> = rotationMatrix_1;
  let x_1276 : vec2<f32> = vec2<f32>(x_391, 0.100000001);
  let x_837 : mat2x2<f32> = rotationMatrix2;
  rotationMatrix2 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1277 : vec3<f32> = vec3<f32>(x_392, x_385, 4.0);
  let x_1715 : f32 = vec3<f32>(0.0, 0.0, 0.0).y;
  rotationMatrix2 = x_837;
  let x_1278 : vec4<f32> = vec4<f32>(0.01, x_385, 100.0, x_392);
  let x_1716 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).z;
  var x_609_1 : vec2<f32> = x_606;
  x_609_1.y = 4.0;
  let x_609 : vec2<f32> = x_609_1;
  param_11 = x_404;
  let x_405 : vec3<f32> = computePoint_mf22_(&(param_11));
  let x_1717 : f32 = x_1264.x;
  let x_1279 : vec2<f32> = vec2<f32>(x_823, 4.0);
  let x_1718 : f32 = x_1273.z;
  let x_838 : vec3<f32> = point1;
  point1 = vec3<f32>(0.0, 0.0, 0.0);
  point1 = x_838;
  point1 = x_405;
  let x_1719 : f32 = x_399.y;
  let x_839 : f32 = angle;
  let x_1720 : f32 = vec2<f32>(10.0, 0.0).x;
  angle = 0.0;
  angle = x_839;
  var x_610_1 : mat2x2<f32> = x_404;
  x_610_1[0u].x = x_397;
  let x_610 : mat2x2<f32> = x_610_1;
  let x_1721 : f32 = vec3<f32>(0.0, 0.0, 0.0).z;
  let x_840 : f32 = angle;
  angle = 0.0;
  angle = x_840;
  let x_1722 : f32 = vec3<f32>(0.0, 0.333333343, 0.666666687).x;
  let x_407 : mat2x2<f32> = rotationMatrix_1;
  let x_841 : mat2x2<f32> = param_12;
  param_12 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1723 : f32 = x_1276.y;
  param_12 = x_841;
  let x_1724 : vec2<f32> = x_404[1u];
  let x_408 : mat2x2<f32> = rotationMatrix_1;
  let x_1280 : vec3<f32> = vec3<f32>(10.0, 0.0, 4.0);
  var x_611_1 : mat2x2<f32> = x_401;
  x_611_1[0u].x = 10.0;
  let x_611 : mat2x2<f32> = x_611_1;
  let x_1725 : f32 = x_1280.z;
  let x_842 : mat2x2<f32> = rotationMatrix3;
  rotationMatrix3 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1726 : f32 = x_404[1u].x;
  rotationMatrix3 = x_842;
  let x_1727 : f32 = vec3<f32>(x_393, x_823, x_394).z;
  var x_612_1 : vec3<f32> = x_405;
  x_612_1.y = 4.0;
  let x_612 : vec3<f32> = x_612_1;
  let x_1728 : vec2<f32> = x_828[1u];
  let x_1729 : f32 = x_1276.x;
  let x_843 : mat2x2<f32> = param_12;
  param_12 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1283 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_400);
  param_12 = x_843;
  rotationMatrix2 = (x_407 * x_408);
  let x_1284 : vec4<f32> = vec4<f32>(x_832, x_392);
  let x_1730 : f32 = x_610[0u].x;
  let x_844 : mat2x2<f32> = param_13;
  param_13 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  param_13 = x_844;
  let x_1731 : f32 = x_1262.y;
  var x_613_1 : mat2x2<f32> = x_401;
  x_613_1[1u].y = x_390;
  let x_613 : mat2x2<f32> = x_613_1;
  let x_1732 : f32 = x_1270[1u].y;
  let x_845 : f32 = s_g;
  s_g = 0.0;
  s_g = x_845;
  let x_1733 : f32 = x_1262.x;
  let x_412 : mat2x2<f32> = rotationMatrix2;
  let x_846 : mat2x2<f32> = rotationMatrix2;
  rotationMatrix2 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1734 : vec2<f32> = x_846[1u];
  rotationMatrix2 = x_846;
  let x_1735 : f32 = x_838.z;
  var x_614_1 : vec2<f32> = x_609;
  x_614_1.x = x_386;
  let x_614 : vec2<f32> = x_614_1;
  let x_847 : f32 = angle;
  let x_1736 : f32 = x_400.x;
  angle = 0.0;
  let x_1737 : f32 = x_1278.y;
  angle = x_847;
  param_12 = x_412;
  let x_1738 : f32 = x_1262.y;
  let x_848 : mat2x2<f32> = rotationMatrix3;
  rotationMatrix3 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  rotationMatrix3 = x_848;
  let x_1739 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  let x_1286 : mat2x2<f32> = mat2x2<f32>(x_609, vec2<f32>(0.0, 0.0));
  let x_1740 : f32 = vec4<f32>(x_835, x_823).w;
  let x_413 : vec3<f32> = computePoint_mf22_(&(param_12));
  let x_849 : vec3<f32> = point1;
  point1 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1741 : f32 = vec2<f32>(0.01, 4.0).x;
  point1 = x_849;
  let x_1742 : vec2<f32> = x_1271[1u];
  var x_615_1 : vec3<f32> = x_612;
  x_615_1.x = 0.01;
  let x_615 : vec3<f32> = x_615_1;
  let x_1743 : f32 = x_836.z;
  let x_1287 : vec2<f32> = vec2<f32>(0.5, x_394);
  let x_1744 : f32 = x_1280.y;
  let x_850 : vec3<f32> = point2;
  let x_1288 : mat2x2<f32> = mat2x2<f32>(x_400, vec2<f32>(0.0, 0.0));
  point2 = vec3<f32>(0.0, 0.0, 0.0);
  point2 = x_850;
  let x_1745 : vec2<f32> = x_610[1u];
  point2 = x_413;
  let x_1746 : f32 = x_1277.z;
  let x_851 : mat2x2<f32> = param_11;
  param_11 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1747 : vec2<f32> = x_1269[0u];
  param_11 = x_851;
  var x_616_1 : vec2<f32> = vec2<f32>(0.5, 0.5);
  x_616_1.y = x_396;
  let x_616 : vec2<f32> = x_616_1;
  let x_852 : f32 = s_g;
  s_g = 0.0;
  let x_1748 : f32 = x_1278.y;
  s_g = x_852;
  let x_415 : mat2x2<f32> = rotationMatrix_1;
  let x_853 : vec3<f32> = mixed;
  let x_1749 : f32 = x_605.z;
  let x_1750 : f32 = x_400.y;
  mixed = vec3<f32>(0.0, 0.0, 0.0);
  mixed = x_853;
  let x_416 : mat2x2<f32> = rotationMatrix_1;
  let x_1751 : f32 = x_1262.y;
  let x_417 : mat2x2<f32> = (x_415 * x_416);
  let x_854 : vec3<f32> = point2;
  let x_1752 : f32 = x_854.x;
  point2 = vec3<f32>(0.0, 0.0, 0.0);
  point2 = x_854;
  let x_1753 : f32 = x_1287.x;
  let x_418 : mat2x2<f32> = rotationMatrix_1;
  let x_855 : vec3<f32> = point3;
  point3 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1292 : vec3<f32> = vec3<f32>(0.300000012, x_391, x_823);
  point3 = x_855;
  let x_1754 : f32 = x_612.z;
  let x_856 : mat2x2<f32> = param_12;
  let x_1293 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), vec2<f32>(0.0, 0.0));
  param_12 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  param_12 = x_856;
  let x_1294 : vec4<f32> = vec4<f32>(x_832, 0.666666687);
  let x_1755 : f32 = x_1278.w;
  rotationMatrix3 = (x_417 * x_418);
  let x_1756 : vec2<f32> = x_611[0u];
  let x_857 : f32 = angle;
  let x_1757 : f32 = x_610[1u].y;
  angle = 0.0;
  let x_1758 : vec2<f32> = x_401[1u];
  angle = x_857;
  let x_1759 : f32 = x_832.x;
  let x_422 : mat2x2<f32> = rotationMatrix3;
  param_13 = x_422;
  let x_858 : mat2x2<f32> = rotationMatrix3;
  rotationMatrix3 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  rotationMatrix3 = x_858;
  let x_782 : f32 = x_607.z;
  let x_1760 : f32 = x_417[0u].y;
  let x_1295 : mat2x2<f32> = mat2x2<f32>(x_616, x_616);
  let x_859 : mat2x2<f32> = param_12;
  let x_1761 : f32 = vec3<f32>(40.0, 0.0, x_394).z;
  param_12 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1762 : f32 = x_833[1u].y;
  param_12 = x_859;
  var x_617_1 : vec3<f32> = x_608;
  x_617_1.z = x_782;
  let x_617 : vec3<f32> = x_617_1;
  let x_1763 : f32 = vec2<f32>(0.5, 0.5).x;
  let x_860 : f32 = angle;
  angle = 0.0;
  let x_1764 : f32 = vec3<f32>(0.300000012, 0.300000012, 0.300000012).z;
  angle = x_860;
  let x_1765 : vec2<f32> = x_1293[0u];
  let x_423 : vec3<f32> = computePoint_mf22_(&(param_13));
  let x_1766 : f32 = vec2<f32>(0.5, 0.5).x;
  let x_861 : mat2x2<f32> = param_11;
  param_11 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  param_11 = x_861;
  let x_1767 : vec2<f32> = x_1293[1u];
  point3 = x_423;
  let x_1768 : f32 = x_1277.x;
  let x_862 : vec3<f32> = point1;
  let x_1769 : f32 = vec3<f32>(0.0, 0.0, 0.0).x;
  point1 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1770 : f32 = x_605.y;
  point1 = x_862;
  let x_1771 : f32 = x_1270[1u].x;
  let x_425 : vec3<f32> = point1;
  let x_1772 : f32 = x_1277.z;
  let x_426 : vec3<f32> = point2;
  let x_863 : f32 = s_g;
  let x_1773 : f32 = x_423.y;
  s_g = 0.0;
  let x_1774 : f32 = x_829.y;
  let x_1296 : vec2<f32> = vec2<f32>(x_396, x_394);
  s_g = x_863;
  let x_1775 : f32 = vec2<f32>(x_388, 0.0).x;
  let x_1297 : vec4<f32> = vec4<f32>(x_393, x_617);
  let x_1776 : f32 = x_1286[0u].y;
  let x_864 : f32 = b_b;
  let x_1777 : f32 = x_850.y;
  let x_1298 : vec2<f32> = vec2<f32>(x_395, x_397);
  b_b = 0.0;
  let x_1778 : f32 = x_841[0u].x;
  b_b = x_864;
  mixed = mix(x_425, x_426, vec3<f32>(0.300000012, 0.300000012, 0.300000012));
  let x_865 : vec3<f32> = mixed;
  mixed = vec3<f32>(0.0, 0.0, 0.0);
  let x_1779 : f32 = x_832.z;
  let x_1780 : vec2<f32> = mat2x2<f32>(vec2<f32>(0.5, 0.5), x_606)[1u];
  mixed = x_865;
  let x_1300 : vec3<f32> = vec3<f32>(x_398, x_852, x_398);
  let x_1781 : f32 = x_1296.x;
  var x_618_1 : mat2x2<f32> = x_417;
  x_618_1[1u].x = x_391;
  let x_618 : mat2x2<f32> = x_618_1;
  let x_866 : f32 = angle;
  angle = 0.0;
  let x_1782 : f32 = x_832.y;
  let x_1301 : vec4<f32> = vec4<f32>(x_397, x_423);
  let x_1783 : f32 = x_1264.z;
  angle = x_866;
  let x_1784 : vec2<f32> = x_851[0u];
  let x_430 : vec3<f32> = mixed;
  let x_1785 : f32 = x_853.x;
  let x_867 : vec3<f32> = point1;
  let x_1786 : f32 = vec2<f32>(0.0, 0.0).x;
  point1 = vec3<f32>(0.0, 0.0, 0.0);
  point1 = x_867;
  let x_1787 : f32 = x_853.z;
  let x_431 : vec3<f32> = point3;
  let x_868 : mat2x2<f32> = param_11;
  param_11 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1303 : vec2<f32> = vec2<f32>(x_860, 3.0);
  let x_1788 : f32 = x_1296.x;
  param_11 = x_868;
  let x_1789 : vec2<f32> = x_1286[0u];
  let x_432 : vec3<f32> = mix(x_430, x_431, vec3<f32>(0.300000012, 0.300000012, 0.300000012));
  let x_869 : mat2x2<f32> = param_12;
  let x_1790 : f32 = x_432.z;
  param_12 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1791 : f32 = x_1273.z;
  param_12 = x_869;
  let x_1305 : vec4<f32> = vec4<f32>(0.333333343, 4.0, x_863, x_390);
  let x_1792 : f32 = x_615.y;
  mixed = x_432;
  let x_1793 : f32 = x_608.z;
  let x_870 : mat2x2<f32> = rotationMatrix2;
  let x_1794 : f32 = x_848[1u].x;
  rotationMatrix2 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1795 : f32 = x_608.x;
  rotationMatrix2 = x_870;
  let x_1796 : f32 = x_862.z;
  let x_1797 : f32 = vec2<f32>(x_393, x_863).y;
  let x_871 : f32 = s_g;
  let x_1798 : f32 = x_1261[0u].y;
  s_g = 0.0;
  s_g = x_871;
  var x_619_1 : vec2<f32> = x_614;
  x_619_1.x = x_610[0u].x;
  let x_619 : vec2<f32> = x_619_1;
  let x_872 : mat2x2<f32> = param_11;
  param_11 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  param_11 = x_872;
  let x_1306 : vec3<f32> = vec3<f32>(0.333333343, 4.0, x_396);
  let x_435 : vec3<f32> = mixed;
  let x_873 : mat2x2<f32> = rotationMatrix_1;
  rotationMatrix_1 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  let x_1799 : f32 = x_844[1u].y;
  rotationMatrix_1 = x_873;
  let x_1800 : f32 = x_1278.x;
  let x_436 : f32 = x_435[0u];
  var x_620_1 : vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);
  x_620_1.y = 0.0;
  let x_620 : vec3<f32> = x_620_1;
  let x_1801 : f32 = vec2<f32>(x_852, x_394).x;
  let x_874 : f32 = h_r;
  let x_1802 : f32 = x_1274.y;
  h_r = 0.0;
  h_r = x_874;
  let x_1803 : vec2<f32> = x_404[1u];
  let x_875 : mat2x2<f32> = rotationMatrix2;
  rotationMatrix2 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  rotationMatrix2 = x_875;
  let x_1804 : f32 = vec3<f32>(x_864, 0.333333343, x_398).z;
  let x_876 : vec3<f32> = point1;
  let x_1805 : f32 = x_1287.y;
  point1 = vec3<f32>(0.0, 0.0, 0.0);
  let x_1806 : f32 = vec4<f32>(vec3<f32>(0.300000012, 0.300000012, 0.300000012), 0.300000012).y;
  point1 = x_876;
  let x_1807 : f32 = x_831.y;
  let x_877 : vec3<f32> = mixed;
  let x_1808 : f32 = mat2x2<f32>(x_399, vec2<f32>(0.5, 0.5))[1u].x;
  let x_1308 : vec2<f32> = vec2<f32>(x_436, x_863);
  mixed = vec3<f32>(0.0, 0.0, 0.0);
  let x_1809 : f32 = vec4<f32>(x_617, x_834).z;
  mixed = x_877;
  var x_621_1 : vec3<f32> = x_605;
  x_621_1.x = x_605.z;
  let x_621 : vec3<f32> = x_621_1;
  let x_1810 : f32 = x_1271[0u].y;
  let x_878 : f32 = b_b;
  b_b = 0.0;
  b_b = x_878;
  let x_1811 : f32 = x_1274.z;
  let x_439 : vec4<f32> = vec4<f32>(x_436, x_435.y, x_435.z, 1.0);
  let x_1812 : f32 = x_1269[0u].y;
  let x_879 : mat2x2<f32> = param_13;
  param_13 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.0, 0.0));
  param_13 = x_879;
  let x_1813 : f32 = x_838.x;
  let x_1309 : vec3<f32> = vec3<f32>(40.0, x_866, 10.0);
  x_GLF_color = x_439;
  let x_880 : f32 = b_b;
  b_b = 0.0;
  let x_1310 : vec4<f32> = vec4<f32>(x_782, x_400, 0.100000001);
  b_b = x_880;
  let x_1814 : f32 = x_858[0u].x;
  var x_622_1 : vec4<f32> = x_439;
  x_622_1.y = 0.300000012;
  let x_622 : vec4<f32> = x_622_1;
  let x_1815 : f32 = x_615.y;
  let x_1311 : mat2x2<f32> = mat2x2<f32>(vec2<f32>(0.0, 0.0), x_399);
  let x_1816 : vec2<f32> = x_825[1u];
  let x_881 : f32 = angle;
  let x_1817 : vec2<f32> = x_872[1u];
  let x_1312 : vec3<f32> = vec3<f32>(40.0, x_874, x_880);
  let x_1818 : f32 = mat2x2<f32>(vec2<f32>(0.0, 0.0), vec2<f32>(0.5, 0.5))[1u].y;
  angle = 0.0;
  angle = x_881;
  return;
}

struct main_out {
  [[location(0)]]
  x_GLF_color_1 : vec4<f32>;
};

[[stage(fragment)]]
fn main([[builtin(position)]] gl_FragCoord_param : vec4<f32>) -> main_out {
  gl_FragCoord = gl_FragCoord_param;
  main_1();
  return main_out(x_GLF_color);
}
