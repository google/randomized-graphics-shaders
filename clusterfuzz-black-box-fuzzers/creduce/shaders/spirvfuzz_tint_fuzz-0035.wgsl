[[block]]
struct buf0 {
  resolution : vec2<f32>;
};

struct S {
  field0 : vec2<f32>;
};

var<private> gl_FragCoord : vec4<f32>;

[[group(0), binding(0)]] var<uniform> x_52 : buf0;

var<private> x_GLF_color : vec4<f32>;

var<private> x_261 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);

var<private> x_265 : S = S(vec2<f32>(0.0, 0.0));

var<private> x_275 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);

fn x_300(x_301 : ptr<function, i32>) -> i32 {
  var x_303 : i32 = 0;
  var x_326 : u32 = 0u;
  x_303 = 0;
  let x_455 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.5, 0.5, 1.0).y, vec4<f32>(0.5, 0.0, 0.5, 1.0).y);
  loop {
    let x_456 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).w, vec4<f32>(0.5, 0.0, 0.5, 1.0).w);
    var x_404_1 : vec4<f32> = vec4<f32>(0.0, 0.5, 0.5, 1.0);
    x_404_1[0u] = 1.0;
    let x_404 : vec4<f32> = x_404_1;
    let x_457 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 1.0, 1.0).z, vec4<f32>(1.0, 1.0, 0.0, 1.0).y);
    let x_308 : i32 = *(x_301);
    let x_458 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).y, vec4<f32>(0.0, 0.0, 0.5, 1.0).x);
    var x_405_1 : vec4<f32> = vec4<f32>(0.5, 0.0, 0.5, 1.0);
    x_405_1[2u] = 8.0;
    let x_405 : vec4<f32> = x_405_1;
    let x_459 : vec3<f32> = vec3<f32>(vec4<f32>(1.0, 0.0, 1.0, 1.0).y, x_457.y, x_457.y);
    var x_406_1 : vec4<f32> = vec4<f32>(0.0, 1.0, 0.0, 1.0);
    x_406_1[2u] = 0.0;
    let x_406 : vec4<f32> = x_406_1;
    if ((x_308 > 1)) {
    } else {
      break;
    }
    let x_311 : i32 = *(x_301);
    var x_407_1 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.5, 1.0);
    x_407_1[1] = 1.0;
    let x_407 : vec4<f32> = x_407_1;
    let x_460 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.5, 1.0).y, vec4<f32>(0.0, 0.0, 0.5, 1.0).x);
    var x_408_1 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 1.0);
    x_408_1[3] = 1.0;
    let x_408 : vec4<f32> = x_408_1;
    if (((1 & x_311) == 1)) {
      let x_317 : i32 = *(x_301);
      let x_461 : vec2<f32> = vec2<f32>(vec2<f32>(0.0, 0.0).x, vec4<f32>(0.5, 0.0, 0.5, 1.0).y);
      *(x_301) = (1 + (3 * x_317));
      let x_462 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.0, 0.0).w, vec4<f32>(0.0, 0.0, 0.0, 0.0).x);
      var x_409_1 : vec4<f32> = x_407;
      x_409_1[0] = 1.0;
      let x_409 : vec4<f32> = x_409_1;
    } else {
      let x_320 : i32 = *(x_301);
      var x_410_1 : vec4<f32> = vec4<f32>(0.0, 0.0, 1.0, 1.0);
      x_410_1.x = 1.0;
      let x_410 : vec4<f32> = x_410_1;
      let x_463 : vec2<f32> = vec2<f32>(vec4<f32>(0.5, 0.0, 0.0, 1.0).y, vec4<f32>(0.0, 0.0, 1.0, 1.0).w);
      *(x_301) = (x_320 / 2);
      let x_464 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.0, 1.0).x, vec4<f32>(0.0, 0.0, 0.0, 1.0).w);
      var x_411_1 : vec4<f32> = vec4<f32>(0.5, 0.5, 0.0, 1.0);
      x_411_1[2u] = 0.0;
      let x_411 : vec4<f32> = x_411_1;
      let x_465 : vec3<f32> = vec3<f32>(vec4<f32>(0.5, 0.5, 0.5, 1.0).z, x_464.x, vec4<f32>(0.5, 0.5, 0.5, 1.0).z);
    }
    let x_466 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.0, 0.0).w, vec4<f32>(0.0, 0.0, 0.0, 0.0).z);
    let x_322 : i32 = x_303;
    let x_467 : vec3<f32> = vec3<f32>(vec4<f32>(0.0, 1.0, 1.0, 1.0).x, vec4<f32>(0.0, 1.0, 1.0, 1.0).y, vec4<f32>(0.0, 1.0, 1.0, 1.0).x);
    x_303 = (1 + x_322);

    continuing {
      let x_468 : vec2<f32> = vec2<f32>(x_459.y, vec4<f32>(0.0, 1.0, 0.0, 1.0).z);
      var x_412_1 : S = S(vec2<f32>(0.0, 0.0));
      x_412_1.field0.y = 8.0;
      let x_412 : S = x_412_1;
      let x_469 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 1.0, 1.0).z, vec4<f32>(1.0, 1.0, 0.0, 1.0).w);
      let x_328 : u32 = x_326;
      var x_413_1 : vec4<f32> = vec4<f32>(0.5, 0.5, 0.0, 1.0);
      x_413_1[3] = 0.0;
      let x_413 : vec4<f32> = x_413_1;
      x_326 = (x_328 + 1u);
      if ((x_328 >= bitcast<u32>(9))) {
        break;
      }
    }
  }
  let x_470 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 1.0, 1.0).y, vec4<f32>(1.0, 0.0, 0.0, 1.0).x);
  let x_324 : i32 = x_303;
  return x_324;
}

fn x_332() {
  var x_386 : i32 = 0;
  var x_384 : i32 = 0;
  var x_382 : i32 = 0;
  var x_380 : i32 = 0;
  var x_334 : vec2<f32> = vec2<f32>(0.0, 0.0);
  var x_335 : i32 = 0;
  var x_336 : i32 = 0;
  var x_338 : array<vec4<f32>, 16u> = array<vec4<f32>, 16u>(vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0));
  let x_381 : i32 = x_300(&(x_380));
  let x_471 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 1.0, 1.0).z, vec4<f32>(0.0, 0.0, 0.0, 1.0).z);
  let x_339 : vec4<f32> = x_261;
  let x_340 : vec2<f32> = vec2<f32>(x_339.x, x_339.y);
  var x_414_1 : vec4<f32> = vec4<f32>(0.0, 0.5, 0.0, 1.0);
  x_414_1[1] = 1.0;
  let x_414 : vec4<f32> = x_414_1;
  let x_383 : i32 = x_300(&(x_382));
  let x_342 : vec2<f32> = x_265.field0;
  let x_472 : vec3<f32> = vec3<f32>(vec4<f32>(0.0, 1.0, 0.0, 1.0).w, vec4<f32>(0.0, 1.0, 0.0, 1.0).w, vec4<f32>(0.0, 1.0, 0.0, 1.0).w);
  var x_415_1 : vec4<f32> = vec4<f32>(0.5, 0.0, 0.0, 1.0);
  x_415_1[2] = 0.0;
  let x_415 : vec4<f32> = x_415_1;
  let x_473 : vec3<f32> = vec3<f32>(x_472.y, vec4<f32>(0.0, 0.5, 0.5, 1.0).w, vec4<f32>(0.0, 0.5, 0.5, 1.0).w);
  x_334 = (x_340 / x_342);
  let x_344 : vec2<f32> = x_334;
  let x_345 : vec2<f32> = (x_344 * 8.0);
  var x_416_1 : vec4<f32> = vec4<f32>(0.0, 0.5, 0.0, 1.0);
  x_416_1[2] = 0.0;
  let x_416 : vec4<f32> = x_416_1;
  let x_474 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.0, 0.0).y, vec4<f32>(0.0, 0.0, 0.0, 0.0).z);
  let x_346 : vec2<f32> = floor(x_345);
  let x_385 : i32 = x_300(&(x_384));
  let x_475 : vec3<f32> = vec3<f32>(x_471.y, vec4<f32>(0.0, 1.0, 0.0, 1.0).x, vec4<f32>(0.0, 1.0, 0.0, 1.0).w);
  var x_417_1 : vec4<f32> = vec4<f32>(1.0, 0.0, 1.0, 1.0);
  x_417_1[0u] = 0.5;
  let x_417 : vec4<f32> = x_417_1;
  let x_476 : vec3<f32> = vec3<f32>(vec4<f32>(0.0, 0.5, 0.0, 1.0).z, vec4<f32>(0.5, 0.0, 0.0, 1.0).w, vec4<f32>(0.0, 0.5, 0.0, 1.0).z);
  x_334 = x_346;
  let x_477 : vec2<f32> = vec2<f32>(x_340.y, vec4<f32>(0.5, 0.5, 0.0, 1.0).y);
  let x_387 : i32 = x_300(&(x_386));
  var x_418_1 : vec4<f32> = x_416;
  x_418_1[1] = 1.0;
  let x_418 : vec4<f32> = x_418_1;
  let x_348 : f32 = x_334[0u];
  var x_419_1 : array<vec4<f32>, 16u> = array<vec4<f32>, 16u>(vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(0.0, 0.0, 0.0, 0.0));
  x_419_1[1u] = vec4<f32>(0.0, 1.0, 0.0, 1.0);
  let x_419 : array<vec4<f32>, 16u> = x_419_1;
  var x_420_1 : vec4<f32> = vec4<f32>(1.0, 1.0, 0.0, 1.0);
  x_420_1[2] = 0.5;
  let x_420 : vec4<f32> = x_420_1;
  var x_421_1 : vec2<f32> = x_340;
  x_421_1[0] = 8.0;
  let x_421 : vec2<f32> = x_421_1;
  let x_478 : vec2<f32> = vec2<f32>(vec4<f32>(0.5, 0.5, 0.0, 1.0).x, x_346.y);
  let x_352 : f32 = x_334.y;
  let x_479 : vec2<f32> = vec2<f32>(x_418.w, x_414.z);
  x_335 = ((8 * i32(x_348)) + i32(x_352));
  let x_480 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).w, vec4<f32>(1.0, 1.0, 0.0, 1.0).x);
  let x_355 : i32 = x_335;
  var x_422_1 : vec4<f32> = vec4<f32>(0.0, 0.0, 1.0, 1.0);
  x_422_1.w = 8.0;
  let x_422 : vec4<f32> = x_422_1;
  x_336 = x_355;
  let x_356 : i32 = x_300(&(x_336));
  let x_357 : i32 = (x_356 % 16);
  x_338 = array<vec4<f32>, 16u>(vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(0.5, 0.0, 0.0, 1.0), vec4<f32>(0.0, 0.5, 0.0, 1.0), vec4<f32>(0.5, 0.5, 0.0, 1.0), vec4<f32>(0.0, 0.0, 0.5, 1.0), vec4<f32>(0.5, 0.0, 0.5, 1.0), vec4<f32>(0.0, 0.5, 0.5, 1.0), vec4<f32>(0.5, 0.5, 0.5, 1.0), vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(1.0, 0.0, 0.0, 1.0), vec4<f32>(0.0, 1.0, 0.0, 1.0), vec4<f32>(1.0, 1.0, 0.0, 1.0), vec4<f32>(0.0, 0.0, 1.0, 1.0), vec4<f32>(1.0, 0.0, 1.0, 1.0), vec4<f32>(0.0, 1.0, 1.0, 1.0), vec4<f32>(1.0, 1.0, 1.0, 1.0));
  let x_481 : vec3<f32> = vec3<f32>(x_471.x, vec4<f32>(0.5, 0.0, 0.5, 1.0).w, vec4<f32>(0.5, 0.0, 0.5, 1.0).z);
  var x_423_1 : vec4<f32> = vec4<f32>(0.5, 0.0, 0.5, 1.0);
  x_423_1[0] = 8.0;
  let x_423 : vec4<f32> = x_423_1;
  let x_482 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 0.0, 0.0, 1.0).w, vec4<f32>(0.0, 0.0, 0.0, 0.0).w);
  let x_483 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 1.0, 0.0, 1.0).w, vec4<f32>(0.0, 1.0, 0.0, 1.0).y);
  var x_424_1 : vec4<f32> = vec4<f32>(1.0, 1.0, 0.0, 1.0);
  x_424_1[3u] = 1.0;
  let x_424 : vec4<f32> = x_424_1;
  let x_484 : vec3<f32> = vec3<f32>(vec4<f32>(0.0, 0.0, 1.0, 1.0).w, vec4<f32>(0.0, 1.0, 0.0, 1.0).w, vec4<f32>(0.0, 1.0, 0.0, 1.0).y);
  let x_359 : vec4<f32> = x_338[select(15, x_357, (bitcast<u32>(x_357) <= bitcast<u32>(15)))];
  x_275 = x_359;
  return;
}

fn main_1() {
  var x_378 : i32 = 0;
  var indexable : array<vec4<f32>, 16u>;
  var x_376 : i32 = 0;
  var x_371 : i32 = 0;
  var x_374 : i32 = 0;
  var x_133 : i32;
  var x_242 : vec3<f32>;
  var x_393 : vec4<f32>;
  var x_133_phi : i32;
  var x_132_phi : i32;
  let x_427 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.0, 0.0).z, vec4<f32>(0.0, 0.0, 0.0, 0.0).x);
  let x_48 : vec4<f32> = gl_FragCoord;
  let x_49 : vec2<f32> = vec2<f32>(x_48.x, x_48.y);
  let x_428 : vec3<f32> = vec3<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).z, vec4<f32>(1.0, 1.0, 0.0, 1.0).x, vec4<f32>(0.0, 0.0, 0.5, 1.0).x);
  let x_55 : vec2<f32> = x_52.resolution;
  let x_429 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.5, 1.0).w, vec4<f32>(0.0, 0.0, 0.5, 1.0).x);
  let x_430 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 1.0, 1.0).z, vec4<f32>(1.0, 1.0, 1.0, 1.0).x);
  let x_59 : vec2<f32> = ((x_49 / x_55) * 8.0);
  let x_236 : vec2<f32> = vec2<f32>(x_48.z, x_48.x);
  let x_60 : vec2<f32> = floor(x_59);
  let x_431 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.0, 0.5, 1.0).x, vec4<f32>(0.0, 0.0, 0.5, 1.0).w);
  var x_388_1 : vec2<f32> = x_55;
  x_388_1.x = 8.0;
  let x_388 : vec2<f32> = x_388_1;
  let x_237 : vec2<f32> = vec2<f32>(x_48.y, vec4<f32>(0.0, 1.0, 0.0, 1.0).z);
  let x_66 : f32 = x_60[0u];
  let x_432 : vec3<f32> = vec3<f32>(x_49.y, vec4<f32>(1.0, 0.0, 0.0, 1.0).z, x_49.x);
  var x_389_1 : vec4<f32> = vec4<f32>(1.0, 0.0, 0.0, 1.0);
  x_389_1[1u] = 0.5;
  let x_389 : vec4<f32> = x_389_1;
  let x_372 : i32 = x_300(&(x_371));
  let x_433 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).w, vec4<f32>(1.0, 1.0, 0.0, 1.0).y);
  let x_238 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 0.0, 1.0, 1.0).w, vec4<f32>(0.0, 1.0, 1.0, 1.0).x);
  let x_434 : vec2<f32> = vec2<f32>(x_433.x, vec4<f32>(0.5, 0.0, 0.0, 1.0).z);
  var x_390_1 : vec4<f32> = vec4<f32>(0.0, 0.5, 0.5, 1.0);
  x_390_1[1u] = 8.0;
  let x_390 : vec4<f32> = x_390_1;
  let x_72 : f32 = x_60[1];
  let x_74 : i32 = (i32(x_72) + (8 * i32(x_66)));
  let x_240 : vec3<f32> = vec3<f32>(vec4<f32>(0.0, 0.0, 1.0, 1.0).x, vec4<f32>(0.0, 0.0, 1.0, 1.0).y, vec4<f32>(0.0, 0.0, 1.0, 1.0).x);
  var x_391_1 : vec2<f32> = x_55;
  x_391_1.x = x_66;
  let x_391 : vec2<f32> = x_391_1;
  let x_435 : vec3<f32> = vec3<f32>(vec4<f32>(0.5, 0.0, 0.0, 1.0).y, vec4<f32>(0.0, 0.0, 1.0, 1.0).w, vec4<f32>(0.0, 0.0, 1.0, 1.0).w);
  x_133_phi = 0;
  x_132_phi = x_74;
  loop {
    var x_122 : i32;
    var x_125 : i32;
    var x_135_phi : i32;
    x_133 = x_133_phi;
    let x_132 : i32 = x_132_phi;
    let x_436 : vec3<f32> = vec3<f32>(vec4<f32>(1.0, 0.0, 0.0, 1.0).w, vec4<f32>(0.0, 0.0, 1.0, 1.0).x, vec4<f32>(1.0, 0.0, 0.0, 1.0).w);
    let x_241 : vec2<f32> = vec2<f32>(vec4<f32>(0.5, 0.5, 0.5, 1.0).z, vec4<f32>(0.5, 0.5, 0.0, 1.0).x);
    let x_437 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).w, vec4<f32>(1.0, 1.0, 0.0, 1.0).x);
    let x_438 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.5, 0.0, 1.0).x, vec4<f32>(0.0, 0.5, 0.0, 1.0).x);
    var x_392_1 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);
    x_392_1[1u] = 8.0;
    let x_392 : vec4<f32> = x_392_1;
    x_242 = vec3<f32>(x_48.x, x_48.z, x_60.x);
    x_332();
    let x_439 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 1.0, 1.0, 1.0).w, x_60.y);
    x_393 = vec4<f32>(0.5, 0.0, 0.5, 1.0);
    x_393.y = 1.0;
    if ((x_132 > bitcast<i32>(1u))) {
    } else {
      break;
    }
    let x_440 : vec3<f32> = vec3<f32>(vec4<f32>(0.5, 0.0, 0.5, 1.0).x, vec4<f32>(0.5, 0.0, 0.5, 1.0).w, x_439.y);
    let x_243 : vec3<f32> = vec3<f32>(x_242.y, x_242.x, x_236.x);
    let x_441 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 0.5, 0.0, 1.0).z, vec4<f32>(0.0, 0.5, 0.0, 1.0).z);
    let x_375 : i32 = x_300(&(x_374));
    var x_394_1 : vec4<f32> = vec4<f32>(1.0, 1.0, 1.0, 1.0);
    x_394_1[3u] = 0.0;
    let x_394 : vec4<f32> = x_394_1;
    let x_244 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 1.0, 0.0, 1.0).z, vec4<f32>(0.0, 1.0, 0.0, 1.0).x);
    let x_442 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).x, x_59.y);
    if ((1u == bitcast<u32>((x_132 & 1)))) {
      let x_453 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 1.0, 1.0).z, vec4<f32>(0.0, 0.0, 0.5, 1.0).z);
      let x_245 : vec3<f32> = vec3<f32>(vec4<f32>(0.0, 0.5, 0.0, 1.0).w, x_49.y, x_49.x);
      x_122 = ((x_132 * 3) + 1);
      let x_246 : vec2<f32> = vec2<f32>(x_55.y, x_237.x);
      var x_403_1 : vec4<f32> = vec4<f32>(0.0, 1.0, 0.0, 1.0);
      x_403_1[0u] = 8.0;
      let x_403 : vec4<f32> = x_403_1;
      let x_454 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 0.0, 1.0, 1.0).z, vec4<f32>(1.0, 0.0, 1.0, 1.0).w);
      x_135_phi = x_122;
    } else {
      let x_377 : i32 = x_300(&(x_376));
      let x_443 : vec3<f32> = vec3<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).z, vec4<f32>(1.0, 1.0, 0.0, 1.0).z, x_391.x);
      var x_395_1 : vec4<f32> = x_392;
      x_395_1[0u] = 1.0;
      let x_395 : vec4<f32> = x_395_1;
      let x_444 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 1.0, 1.0).w, x_237.x);
      x_125 = (x_132 / 2);
      let x_445 : vec2<f32> = vec2<f32>(vec4<f32>(0.5, 0.0, 0.5, 1.0).z, vec4<f32>(0.5, 0.0, 0.5, 1.0).z);
      var x_396_1 : vec4<f32> = vec4<f32>(0.0, 1.0, 1.0, 1.0);
      x_396_1[3u] = 8.0;
      let x_396 : vec4<f32> = x_396_1;
      let x_446 : vec2<f32> = vec2<f32>(x_438.x, x_391.y);
      let x_247 : vec2<f32> = vec2<f32>(vec4<f32>(0.5, 0.0, 0.5, 1.0).z, vec4<f32>(0.5, 0.0, 0.5, 1.0).y);
      let x_447 : vec3<f32> = vec3<f32>(x_441.x, x_390.w, x_441.x);
      var x_397_1 : vec4<f32> = vec4<f32>(1.0, 0.0, 0.0, 1.0);
      x_397_1[1] = 0.0;
      let x_397 : vec4<f32> = x_397_1;
      x_135_phi = x_125;
    }
    let x_135 : i32 = x_135_phi;
    let x_448 : vec2<f32> = vec2<f32>(vec4<f32>(1.0, 1.0, 1.0, 1.0).z, vec4<f32>(0.5, 0.0, 0.5, 1.0).x);
    var x_398_1 : vec4<f32> = vec4<f32>(1.0, 0.0, 1.0, 1.0);
    x_398_1[1] = x_72;
    let x_398 : vec4<f32> = x_398_1;

    continuing {
      var x_399_1 : vec4<f32> = vec4<f32>(0.0, 0.0, 0.5, 1.0);
      x_399_1[1u] = 0.5;
      let x_399 : vec4<f32> = x_399_1;
      let x_248 : vec2<f32> = vec2<f32>(x_242.z, x_244.x);
      var x_400_1 : vec4<f32> = x_398;
      x_400_1[2u] = x_66;
      let x_400 : vec4<f32> = x_400_1;
      x_133_phi = bitcast<i32>((x_133 + bitcast<i32>(1)));
      x_132_phi = x_135;
    }
  }
  indexable = array<vec4<f32>, 16u>(vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(0.5, 0.0, 0.0, 1.0), vec4<f32>(0.0, 0.5, 0.0, 1.0), vec4<f32>(0.5, 0.5, 0.0, 1.0), vec4<f32>(0.0, 0.0, 0.5, 1.0), vec4<f32>(0.5, 0.0, 0.5, 1.0), vec4<f32>(0.0, 0.5, 0.5, 1.0), vec4<f32>(0.5, 0.5, 0.5, 1.0), vec4<f32>(0.0, 0.0, 0.0, 1.0), vec4<f32>(1.0, 0.0, 0.0, 1.0), vec4<f32>(0.0, 1.0, 0.0, 1.0), vec4<f32>(1.0, 1.0, 0.0, 1.0), vec4<f32>(0.0, 0.0, 1.0, 1.0), vec4<f32>(1.0, 0.0, 1.0, 1.0), vec4<f32>(0.0, 1.0, 1.0, 1.0), vec4<f32>(1.0, 1.0, 1.0, 1.0));
  let x_249 : vec3<f32> = vec3<f32>(vec4<f32>(1.0, 1.0, 0.0, 1.0).z, vec4<f32>(1.0, 0.0, 1.0, 1.0).y, vec4<f32>(1.0, 0.0, 1.0, 1.0).w);
  let x_449 : vec3<f32> = vec3<f32>(vec4<f32>(0.0, 0.0, 0.5, 1.0).x, vec4<f32>(0.0, 0.0, 0.5, 1.0).z, vec4<f32>(0.0, 1.0, 1.0, 1.0).z);
  var x_401_1 : vec4<f32> = vec4<f32>(0.5, 0.5, 0.5, 1.0);
  x_401_1[2u] = 1.0;
  let x_401 : vec4<f32> = x_401_1;
  let x_450 : vec2<f32> = vec2<f32>(x_60.y, x_60.y);
  let x_107 : vec4<f32> = indexable[bitcast<i32>((x_133 % bitcast<i32>(16u)))];
  let x_451 : vec2<f32> = vec2<f32>(x_390.z, x_390.w);
  let x_251 : vec3<f32> = vec3<f32>(vec4<f32>(0.5, 0.0, 0.5, 1.0).y, vec4<f32>(0.5, 0.0, 0.5, 1.0).y, vec4<f32>(0.5, 0.0, 0.5, 1.0).x);
  x_GLF_color = x_107;
  let x_452 : vec2<f32> = vec2<f32>(x_59.x, x_393.z);
  var x_402_1 : vec2<f32> = vec2<f32>(vec4<f32>(0.0, 1.0, 1.0, 1.0).z, vec4<f32>(0.0, 1.0, 1.0, 1.0).z);
  x_402_1[1u] = x_66;
  let x_402 : vec2<f32> = x_402_1;
  let x_379 : i32 = x_300(&(x_378));
  let x_252 : vec2<f32> = vec2<f32>(x_242.y, x_107.y);
  return;
}

struct main_out {
  [[location(0)]]
  x_GLF_color_1 : vec4<f32>;
};

[[stage(fragment)]]
fn main([[builtin(position)]] gl_FragCoord_param : vec4<f32>) -> main_out {
  gl_FragCoord = gl_FragCoord_param;
  main_1();
  return main_out(x_GLF_color);
}
