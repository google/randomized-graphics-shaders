var<private>gl_FragCoord:vec4<f32>;

var<private>color:vec4<f32>;

fn main_1(){
var row:f32;
var column:f32;
var scalar:f32;
var vector_1:vec3<f32>;
var vector_2:vec3<f32>;
var matrix_1:mat3x3<f32>;
var matrix_2:mat3x3<f32>;
let x_16:f32=gl_FragCoord.x;
row=f32(((i32(x_16)/16)+bitcast<i32>(1u)));
let x_27:f32=gl_FragCoord.y;
let x_29:i32=(i32(x_27)/16);
let x_330:vec4<i32>=vec4<i32>(0,0,0,x_29);
let x_332:vec4<i32>=vec4<i32>(0,0,0,1);
let x_333:vec4<i32>=(x_330+x_332);
let x_408:i32=x_330.w;
let x_479:vec2<i32>=(vec2<i32>(x_330.w,0)+vec2<i32>(x_332.w,0));
column=f32((x_29+x_332.w));
scalar=1.0;
let x_37:f32=scalar;
let x_335:vec3<f32>=vec3<f32>(0.0,x_37,0.0);
let x_336:vec3<f32>=vec3<f32>(0.0,1.0,0.0);
let x_411:f32=x_336.y;
let x_552:f32=x_335.y;
let x_636:vec2<f32>=(vec2<f32>(x_552,0.0)+vec2<f32>(1.0,0.0));
let x_427:f32=((x_335+x_336)).y;
scalar=(x_552+1.0);
let x_39:f32=row;
let x_410:f32=x_335.y;
let x_41:f32=scalar;
let x_338:vec2<f32>=vec2<f32>(0.0,x_41);
let x_422:f32=x_336.y;
let x_340:vec2<f32>=vec2<f32>(0.0,x_422);
let x_428:f32=x_338.y;
let x_553:f32=x_340.y;
let x_42:f32=(x_338.y+x_553);
scalar=((x_338+x_340)).y;
let x_43:f32=column;
let x_586:f32=x_338.y;
let x_639:vec2<f32>=(vec2<f32>(0.0,x_586)*vec2<f32>(0.0,x_43));
let x_45:f32=scalar;
let x_412:f32=x_340.y;
let x_480:vec3<f32>=vec3<f32>(0.0,0.0,x_45);
let x_481:vec3<f32>=vec3<f32>(0.0,0.0,x_411);
let x_482:vec3<f32>=(x_480+x_481);
let x_612:f32=x_480.z;
let x_642:vec4<f32>=(vec4<f32>(x_612,0.0,0.0,0.0)+vec4<f32>(x_411,0.0,0.0,0.0));
scalar=(x_612+x_411);
let x_47:f32=row;
let x_645:vec4<f32>=(vec4<f32>(0.0,x_612,0.0,0.0)*vec4<f32>(0.0,x_47,0.0,0.0));
let x_49:f32=column;
let x_342:vec3<f32>=vec3<f32>(0.0,0.0,(x_612*x_47));
let x_343:vec3<f32>=vec3<f32>(0.0,0.0,x_49);
let x_344:vec3<f32>=(x_342*x_343);
let x_430:f32=x_343.z;
let x_557:f32=x_342.z;
let x_648:vec4<f32>=(vec4<f32>(x_557,0.0,0.0,0.0)*vec4<f32>(x_49,0.0,0.0,0.0));
let x_50:f32=(x_557*x_49);
let x_431:f32=x_344.z;
vector_1=vec3<f32>((x_335.y*x_39),(x_586*x_43),x_344.z);
let x_53:f32=scalar;
let x_651:vec3<f32>=(vec3<f32>(x_53,0.0,0.0)+vec3<f32>(1.0,0.0,0.0));
scalar=(x_53+1.0);
let x_55:f32=row;
let x_345:vec3<f32>=vec3<f32>(0.0,x_53,0.0);
let x_346:vec3<f32>=vec3<f32>(0.0,x_55,0.0);
let x_432:f32=x_345.y;
let x_433:f32=x_346.y;
let x_57:f32=scalar;
let x_413:f32=x_336.y;
let x_578:f32=x_336.y;
let x_654:vec4<f32>=(vec4<f32>(x_57,0.0,0.0,0.0)+vec4<f32>(x_578,0.0,0.0,0.0));
scalar=(x_57+x_578);
let x_59:f32=column;
let x_348:vec2<f32>=vec2<f32>(0.0,x_57);
let x_349:vec2<f32>=vec2<f32>(0.0,x_59);
let x_435:f32=x_348.y;
let x_485:vec3<f32>=(vec3<f32>(0.0,0.0,x_348.y)*vec3<f32>(0.0,0.0,x_349.y));
let x_60:f32=(x_57*x_349.y);
let x_61:f32=scalar;
let x_657:vec2<f32>=(vec2<f32>(0.0,x_61)+vec2<f32>(0.0,x_422));
scalar=(x_61+x_422);
let x_63:f32=row;
let x_352:vec3<f32>=vec3<f32>(0.0,0.0,x_63);
let x_353:vec3<f32>=(vec3<f32>(0.0,0.0,x_61)*x_352);
let x_486:vec4<f32>=vec4<f32>(0.0,x_61,0.0,0.0);
let x_487:vec4<f32>=vec4<f32>(0.0,x_352.z,0.0,0.0);
let x_488:vec4<f32>=(x_486*x_487);
let x_559:f32=x_486.y;
let x_560:f32=x_487.y;
let x_660:vec4<f32>=(vec4<f32>(0.0,0.0,x_559,0.0)*vec4<f32>(0.0,0.0,x_560,0.0));
let x_65:f32=column;
let x_438:f32=x_353.z;
let x_354:vec3<f32>=vec3<f32>(0.0,x_353.z,0.0);
let x_355:vec3<f32>=vec3<f32>(0.0,x_65,0.0);
let x_437:f32=x_354.y;
let x_434:f32=((x_345*x_346)).y;
let x_440:f32=((x_354*x_355)).y;
vector_2=vec3<f32>((x_53*x_346.y),((x_348*x_349)).y,((x_559*x_560)*x_355.y));
let x_71:f32=scalar;
let x_357:vec3<f32>=vec3<f32>(x_71,0.0,0.0);
let x_575:f32=x_481.z;
let x_358:vec3<f32>=vec3<f32>(x_575,0.0,0.0);
let x_359:vec3<f32>=(x_357+x_358);
let x_441:f32=x_357.x;
let x_72:f32=(x_357.x+x_553);
let x_442:f32=x_359.x;
scalar=x_359.x;
let x_73:f32=row;
let x_562:f32=x_357.x;
let x_663:vec2<f32>=(vec2<f32>(0.0,x_562)*vec2<f32>(0.0,x_73));
let x_75:f32=scalar;
let x_489:vec4<f32>=vec4<f32>(0.0,0.0,x_75,0.0);
let x_613:f32=x_489.z;
let x_666:vec3<f32>=(vec3<f32>(x_613,0.0,0.0)+vec3<f32>(x_411,0.0,0.0));
let x_76:f32=(x_613+x_411);
scalar=((x_489+vec4<f32>(0.0,0.0,x_553,0.0))).z;
let x_77:f32=column;
let x_79:f32=scalar;
let x_360:vec2<f32>=vec2<f32>(0.0,x_79);
let x_423:f32=x_358.x;
let x_361:vec2<f32>=vec2<f32>(0.0,x_413);
let x_443:f32=x_360.y;
let x_669:vec3<f32>=(vec3<f32>(x_79,0.0,0.0)+vec3<f32>(x_422,0.0,0.0));
let x_80:f32=(x_79+x_422);
scalar=((x_360+x_361)).y;
let x_81:f32=row;
let x_363:vec3<f32>=vec3<f32>(x_360.y,0.0,0.0);
let x_364:vec3<f32>=vec3<f32>(x_81,0.0,0.0);
let x_365:vec3<f32>=(x_363*x_364);
let x_444:f32=x_363.x;
let x_83:f32=column;
let x_85:f32=scalar;
let x_414:f32=x_358.x;
let x_492:vec2<f32>=vec2<f32>(0.0,x_85);
let x_493:vec2<f32>=vec2<f32>(0.0,x_575);
let x_494:vec2<f32>=(x_492+x_493);
let x_615:f32=x_492.y;
let x_672:vec4<f32>=(vec4<f32>(x_615,0.0,0.0,0.0)+vec4<f32>(1.0,0.0,0.0,0.0));
scalar=(x_615+1.0);
let x_87:f32=row;
let x_496:vec3<f32>=vec3<f32>(x_87,0.0,0.0);
let x_616:f32=x_496.x;
let x_675:vec4<f32>=(vec4<f32>(0.0,0.0,0.0,x_615)*vec4<f32>(0.0,0.0,0.0,x_616));
let x_88:f32=(x_615*x_616);
let x_89:f32=scalar;
scalar=(x_89+x_412);
let x_91:f32=column;
let x_366:vec3<f32>=vec3<f32>(x_89,0.0,0.0);
let x_446:f32=x_366.x;
let x_93:f32=scalar;
let x_369:vec3<f32>=vec3<f32>(0.0,0.0,x_93);
let x_370:vec3<f32>=vec3<f32>(0.0,0.0,x_413);
let x_498:vec3<f32>=vec3<f32>(x_93,0.0,0.0);
let x_499:vec3<f32>=vec3<f32>(x_481.z,0.0,0.0);
let x_500:vec3<f32>=(x_498+x_499);
let x_554:f32=x_340.y;
let x_94:f32=(x_369.z+x_554);
scalar=((x_369+x_370)).z;
let x_95:f32=row;
let x_96:f32=(x_498.x*x_95);
let x_97:f32=column;
let x_504:vec3<f32>=vec3<f32>(0.0,0.0,((vec4<f32>(0.0,0.0,x_369.z,0.0)*vec4<f32>(0.0,0.0,x_95,0.0))).z);
let x_98:f32=(x_504.z*x_97);
let x_99:f32=scalar;
let x_507:vec4<f32>=vec4<f32>(0.0,0.0,x_99,0.0);
let x_581:f32=x_493.y;
let x_579:f32=x_358.x;
let x_678:vec4<f32>=(vec4<f32>(0.0,0.0,x_99,0.0)+vec4<f32>(0.0,0.0,x_579,0.0));
let x_100:f32=(x_99+x_579);
scalar=((x_507+vec4<f32>(0.0,0.0,x_581,0.0))).z;
let x_101:f32=row;
let x_373:vec4<f32>=vec4<f32>(0.0,x_101,0.0,0.0);
let x_450:f32=x_373.y;
let x_103:f32=scalar;
let x_510:vec3<f32>=vec3<f32>(0.0,0.0,x_103);
let x_512:vec3<f32>=(x_510+vec3<f32>(0.0,0.0,x_499.x));
let x_622:f32=x_510.z;
let x_681:vec2<f32>=(vec2<f32>(x_622,0.0)+vec2<f32>(x_554,0.0));
scalar=(x_622+x_554);
let x_105:f32=column;
let x_107:f32=scalar;
let x_375:vec2<f32>=vec2<f32>(x_107,0.0);
let x_376:vec2<f32>=vec2<f32>(x_361.y,0.0);
let x_377:vec2<f32>=(x_375+x_376);
let x_452:f32=x_375.x;
let x_577:f32=x_358.x;
let x_515:vec4<f32>=(vec4<f32>(0.0,x_375.x,0.0,0.0)+vec4<f32>(0.0,x_577,0.0,0.0));
let x_596:f32=x_375.x;
let x_108:f32=(x_596+x_412);
let x_453:f32=x_377.x;
scalar=x_377.x;
let x_109:f32=row;
let x_684:vec3<f32>=(vec3<f32>(0.0,x_596,0.0)*vec3<f32>(0.0,x_109,0.0));
let x_110:f32=(x_596*x_109);
let x_111:f32=column;
let x_378:vec2<f32>=vec2<f32>(0.0,x_110);
let x_379:vec2<f32>=vec2<f32>(0.0,x_111);
let x_455:f32=x_379.y;
let x_518:vec2<f32>=(vec2<f32>(0.0,x_110)*vec2<f32>(0.0,x_455));
let x_112:f32=(x_378.y*x_455);
let x_447:f32=((x_366*vec3<f32>(x_91,0.0,0.0))).x;
let x_451:f32=((vec4<f32>(0.0,x_507.z,0.0,0.0)*x_373)).y;
matrix_1=mat3x3<f32>(vec3<f32>((x_562*x_73),(x_75*x_77),((x_79*x_364.x)*x_83)),vec3<f32>(((vec3<f32>(x_615,0.0,0.0)*x_496)).x,(x_89*x_91),((x_504*vec3<f32>(0.0,0.0,x_97))).z),vec3<f32>((x_507.z*x_101),(x_510.z*x_105),((x_378*x_379)).y));
let x_119:f32=scalar;
let x_381:vec2<f32>=vec2<f32>(x_119,0.0);
let x_424:f32=x_376.x;
let x_382:vec2<f32>=vec2<f32>(x_424,0.0);
let x_120:f32=(x_381.x+x_413);
scalar=((x_381+x_382)).x;
let x_121:f32=row;
let x_457:f32=x_381.x;
let x_520:vec4<f32>=vec4<f32>(0.0,0.0,x_121,0.0);
let x_624:f32=x_520.z;
let x_687:vec4<f32>=(vec4<f32>(0.0,0.0,0.0,x_457)*vec4<f32>(0.0,0.0,0.0,x_624));
let x_122:f32=(x_457*x_624);
let x_123:f32=scalar;
let x_384:vec3<f32>=vec3<f32>(0.0,x_123,0.0);
let x_425:f32=x_382.x;
let x_385:vec3<f32>=vec3<f32>(0.0,x_413,0.0);
let x_415:f32=x_376.x;
let x_458:f32=x_384.y;
let x_124:f32=(x_384.y+x_424);
let x_459:f32=((x_384+x_385)).y;
scalar=((vec2<f32>(x_123,0.0)+vec2<f32>(x_579,0.0))).x;
let x_125:f32=column;
let x_690:vec4<f32>=(vec4<f32>(0.0,0.0,x_123,0.0)*vec4<f32>(0.0,0.0,x_125,0.0));
let x_127:f32=scalar;
let x_693:vec4<f32>=(vec4<f32>(x_127,0.0,0.0,0.0)+vec4<f32>(1.0,0.0,0.0,0.0));
scalar=(x_127+1.0);
let x_129:f32=row;
let x_525:vec2<f32>=vec2<f32>(x_127,0.0);
let x_130:f32=(x_525.x*x_129);
let x_131:f32=column;
let x_627:f32=((x_525*vec2<f32>(x_129,0.0))).x;
let x_696:vec3<f32>=(vec3<f32>(0.0,0.0,x_627)*vec3<f32>(0.0,0.0,x_131));
let x_133:f32=scalar;
let x_416:f32=x_382.x;
let x_528:vec3<f32>=vec3<f32>(0.0,x_133,0.0);
let x_134:f32=(x_528.y+1.0);
scalar=((x_528+vec3<f32>(0.0,x_340.y,0.0))).y;
let x_135:f32=row;
let x_532:vec3<f32>=vec3<f32>(0.0,x_135,0.0);
let x_631:f32=x_532.y;
let x_699:vec2<f32>=(vec2<f32>(0.0,x_133)*vec2<f32>(0.0,x_631));
let x_136:f32=(x_133*x_631);
let x_137:f32=scalar;
let x_387:vec4<f32>=vec4<f32>(0.0,x_137,0.0,0.0);
let x_417:f32=x_358.x;
let x_702:vec4<f32>=(vec4<f32>(0.0,x_137,0.0,0.0)+vec4<f32>(0.0,x_411,0.0,0.0));
let x_463:f32=((x_387+vec4<f32>(0.0,x_376.x,0.0,0.0))).y;
scalar=(x_137+x_411);
let x_139:f32=column;
let x_462:f32=x_387.y;
let x_391:vec2<f32>=vec2<f32>(x_139,0.0);
let x_461:f32=x_387.y;
let x_536:vec2<f32>=(vec2<f32>(x_387.y,0.0)*vec2<f32>(x_391.x,0.0));
let x_569:f32=x_391.x;
let x_705:vec4<f32>=(vec4<f32>(0.0,0.0,x_461,0.0)*vec4<f32>(0.0,0.0,x_569,0.0));
let x_140:f32=(x_461*x_569);
let x_141:f32=scalar;
let x_393:vec4<f32>=vec4<f32>(0.0,0.0,x_141,0.0);
let x_395:vec4<f32>=(x_393+vec4<f32>(0.0,0.0,x_577,0.0));
let x_418:f32=x_385.y;
let x_465:f32=x_393.z;
scalar=(x_141+x_370.z);
let x_143:f32=row;
let x_538:vec4<f32>=vec4<f32>(0.0,x_143,0.0,0.0);
let x_539:vec4<f32>=(vec4<f32>(0.0,x_393.z,0.0,0.0)*x_538);
let x_145:f32=column;
let x_147:f32=scalar;
let x_396:vec4<f32>=vec4<f32>(0.0,0.0,x_147,0.0);
let x_398:vec4<f32>=(x_396+vec4<f32>(0.0,0.0,x_370.z,0.0));
let x_466:f32=x_396.z;
let x_555:f32=x_382.x;
let x_708:vec4<f32>=(vec4<f32>(0.0,0.0,x_147,0.0)+vec4<f32>(0.0,0.0,x_555,0.0));
let x_148:f32=(x_147+x_555);
let x_467:f32=x_398.z;
scalar=x_398.z;
let x_149:f32=row;
let x_542:vec3<f32>=(vec3<f32>(x_396.z,0.0,0.0)*vec3<f32>(x_149,0.0,0.0));
let x_711:vec4<f32>=(vec4<f32>(0.0,0.0,x_147,0.0)*vec4<f32>(0.0,0.0,x_149,0.0));
let x_151:f32=scalar;
scalar=(x_151+1.0);
let x_153:f32=column;
let x_399:vec2<f32>=vec2<f32>(0.0,x_151);
let x_400:vec2<f32>=vec2<f32>(0.0,x_153);
let x_401:vec2<f32>=(x_399*x_400);
let x_545:vec2<f32>=(vec2<f32>(0.0,x_399.y)*vec2<f32>(0.0,x_400.y));
let x_154:f32=(x_399.y*x_153);
let x_155:f32=scalar;
let x_419:f32=x_382.x;
let x_546:vec3<f32>=vec3<f32>(0.0,0.0,x_155);
let x_548:vec3<f32>=(x_546+vec3<f32>(0.0,0.0,x_581));
let x_571:f32=x_546.z;
let x_714:vec4<f32>=(vec4<f32>(0.0,0.0,0.0,x_571)+vec4<f32>(0.0,0.0,0.0,x_416));
scalar=(x_571+x_416);
let x_157:f32=row;
let x_402:vec4<f32>=vec4<f32>(0.0,x_155,0.0,0.0);
let x_403:vec4<f32>=vec4<f32>(0.0,x_157,0.0,0.0);
let x_471:f32=x_402.y;
let x_472:f32=x_403.y;
let x_550:vec2<f32>=vec2<f32>(0.0,x_157);
let x_610:f32=x_550.y;
let x_717:vec2<f32>=(vec2<f32>(0.0,x_471)*vec2<f32>(0.0,x_610));
let x_159:f32=column;
let x_474:f32=((x_402*x_403)).y;
let x_405:vec2<f32>=vec2<f32>(0.0,((vec2<f32>(0.0,x_402.y)*x_550)).y);
let x_406:vec2<f32>=vec2<f32>(0.0,x_159);
let x_407:vec2<f32>=(x_405*x_406);
let x_473:f32=x_405.y;
let x_475:f32=x_406.y;
let x_470:f32=x_401.y;
matrix_2=mat3x3<f32>(vec3<f32>(((vec4<f32>(0.0,0.0,x_381.x,0.0)*x_520)).z,(x_123*x_125),(x_627*x_131)),vec3<f32>(((vec3<f32>(0.0,x_528.y,0.0)*x_532)).y,((vec2<f32>(x_387.y,0.0)*x_391)).x,((x_393.z*x_538.y)*x_145)),vec3<f32>((x_147*x_149),x_401.y,((x_471*x_610)*x_159)));
let x_167:f32=scalar;
let x_720:vec3<f32>=(vec3<f32>(0.0,0.0,x_167)+vec3<f32>(0.0,0.0,x_418));
scalar=(x_167+x_418);
let x_169:vec3<f32>=vector_1;
let x_170:vec3<f32>=(x_169*x_167);
let x_171:vec4<f32>=color;
color=vec4<f32>(x_170.x,x_170.y,x_170.z,x_171.w);
let x_173:f32=scalar;
scalar=(x_173+x_385.y);
let x_175:mat3x3<f32>=matrix_1;
let x_177:vec4<f32>=color;
let x_179:vec3<f32>=(vec3<f32>(x_177.x,x_177.y,x_177.z)*(x_175*x_173));
let x_180:vec4<f32>=color;
color=vec4<f32>(x_179.x,x_179.y,x_179.z,x_180.w);
let x_182:vec3<f32>=vector_1;
let x_183:mat3x3<f32>=matrix_1;
let x_185:vec4<f32>=color;
let x_187:vec3<f32>=(vec3<f32>(x_185.x,x_185.y,x_185.z)+(x_182*x_183));
let x_188:vec4<f32>=color;
color=vec4<f32>(x_187.x,x_187.y,x_187.z,x_188.w);
let x_190:mat3x3<f32>=matrix_1;
let x_191:vec3<f32>=vector_1;
let x_193:vec4<f32>=color;
let x_195:vec3<f32>=(vec3<f32>(x_193.x,x_193.y,x_193.z)+(x_190*x_191));
let x_196:vec4<f32>=color;
color=vec4<f32>(x_195.x,x_195.y,x_195.z,x_196.w);
let x_198:mat3x3<f32>=matrix_1;
let x_199:mat3x3<f32>=matrix_2;
let x_201:vec4<f32>=color;
let x_203:vec3<f32>=(vec3<f32>(x_201.x,x_201.y,x_201.z)*(x_198*x_199));
let x_204:vec4<f32>=color;
color=vec4<f32>(x_203.x,x_203.y,x_203.z,x_204.w);
let x_206:vec3<f32>=vector_1;
let x_207:vec3<f32>=vector_2;
let x_208:mat3x3<f32>=mat3x3<f32>(vec3<f32>((x_207.x*x_206.x),(x_207.x*x_206.y),(x_207.x*x_206.z)),vec3<f32>((x_207.y*x_206.x),(x_207.y*x_206.y),(x_207.y*x_206.z)),vec3<f32>((x_207.z*x_206.x),(x_207.z*x_206.y),(x_207.z*x_206.z)));
let x_209:vec4<f32>=color;
let x_211:vec3<f32>=(vec3<f32>(x_209.x,x_209.y,x_209.z)*x_208);
let x_212:vec4<f32>=color;
color=vec4<f32>(x_211.x,x_211.y,x_211.z,x_212.w);
let x_214:vec3<f32>=vector_1;
let x_215:vec3<f32>=vector_2;
let x_217:vec4<f32>=color;
let x_219:vec3<f32>=(vec3<f32>(x_217.x,x_217.y,x_217.z)*dot(x_214,x_215));
let x_220:vec4<f32>=color;
color=vec4<f32>(x_219.x,x_219.y,x_219.z,x_220.w);
let x_222:vec4<f32>=color;
let x_224:vec3<f32>=sin(vec3<f32>(x_222.x,x_222.y,x_222.z));
let x_421:f32=x_385.y;
color=vec4<f32>(x_224.x,x_224.y,x_224.z,x_418);
return;
}

struct main_out{
[[location(0)]]
color_1:vec4<f32>;
};

[[stage(fragment)]]
fn main([[builtin(position)]]gl_FragCoord_param:vec4<f32>)->main_out{
gl_FragCoord=gl_FragCoord_param;
main_1();
return main_out(color);
}
