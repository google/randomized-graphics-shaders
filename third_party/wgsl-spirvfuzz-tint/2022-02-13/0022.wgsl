[[block]]
struct buf0{
resolution:vec2<f32>;
};

var<private>gl_FragCoord:vec4<f32>;

[[group(0),binding(0)]]var<uniform>x_251:buf0;

var<private>x_GLF_color:vec4<f32>;

fn main_1(){
var x_288:array<i32,256u>;
var x_286:array<i32,256u>;
var x_285:array<i32,256u>;
var x_266:vec2<i32>;
var x_332:vec4<f32>;
var x_347:vec4<f32>;
var x_364_phi:vec2<i32>;
var x_347_phi:vec4<f32>;
var x_343_phi:bool;
var x_346_phi:vec4<f32>;
let x_247:vec4<f32>=gl_FragCoord;
let x_254:vec2<f32>=x_251.resolution;
let x_255:vec2<f32>=(vec2<f32>(x_247.x,x_247.y)/x_254);
x_266=vec2<i32>(i32((x_255.x*256.0)),i32((x_255.y*256.0)));
switch(0u){
default:{
x_364_phi=x_266;
loop{
var x_314:bool;
var x_316_phi:bool;
let x_364:vec2<i32>=x_364_phi;
let x_295:i32=x_364.y;
x_347_phi=vec4<f32>(0.0,0.0,0.0,0.0);
x_343_phi=false;
if((256u!=bitcast<u32>(x_295))){
}else{
break;
}
let x_299:i32=x_364.x;
x_285=array<i32,256u>(115,133,150,164,176,184,190,192,191,187,181,172,163,153,143,134,126,120,116,114,114,117,121,127,134,141,148,154,159,162,163,161,157,151,143,134,124,113,103,94,87,82,79,80,84,91,101,114,130,146,164,182,199,215,229,240,249,254,256,254,250,243,233,223,212,200,190,180,172,166,163,161,162,164,169,174,179,185,190,193,195,195,192,188,180,171,161,149,137,125,114,105,97,93,91,93,98,106,117,130,145,161,177,193,208,221,231,239,243,244,242,236,228,218,207,194,181,169,158,148,141,135,132,131,132,135,138,143,147,151,154,155,155,152,146,139,129,118,106,93,80,68,58,49,43,40,41,44,51,61,73,87,103,119,134,149,162,173,181,186,188,186,181,174,164,153,141,128,116,104,94,86,81,77,76,77,80,84,89,94,98,102,104,104,102,98,92,83,73,62,50,38,26,16,8,2,0,0,4,11,21,33,48,64,81,98,114,129,141,151,158,161,161,158,152,144,134,123,112,100,90,81,73,68,65,65,67,70,75,81,87,92,97,101,103,102,100,95,88,79,69,58,47,36,26,18,13,11,11,15,22,32,45,60,77,94);
let x_303:i32=x_285[x_295];
let x_305:bool=(x_299<(15+x_303));
x_316_phi=x_305;
if(x_305){
x_286=array<i32,256u>(115,133,150,164,176,184,190,192,191,187,181,172,163,153,143,134,126,120,116,114,114,117,121,127,134,141,148,154,159,162,163,161,157,151,143,134,124,113,103,94,87,82,79,80,84,91,101,114,130,146,164,182,199,215,229,240,249,254,256,254,250,243,233,223,212,200,190,180,172,166,163,161,162,164,169,174,179,185,190,193,195,195,192,188,180,171,161,149,137,125,114,105,97,93,91,93,98,106,117,130,145,161,177,193,208,221,231,239,243,244,242,236,228,218,207,194,181,169,158,148,141,135,132,131,132,135,138,143,147,151,154,155,155,152,146,139,129,118,106,93,80,68,58,49,43,40,41,44,51,61,73,87,103,119,134,149,162,173,181,186,188,186,181,174,164,153,141,128,116,104,94,86,81,77,76,77,80,84,89,94,98,102,104,104,102,98,92,83,73,62,50,38,26,16,8,2,0,0,4,11,21,33,48,64,81,98,114,129,141,151,158,161,161,158,152,144,134,123,112,100,90,81,73,68,65,65,67,70,75,81,87,92,97,101,103,102,100,95,88,79,69,58,47,36,26,18,13,11,11,15,22,32,45,60,77,94);
let x_312:i32=x_286[x_295];
x_314=(x_299>(x_312 - bitcast<i32>(15u)));
x_316_phi=x_314;
}
let x_316:bool=x_316_phi;
if(x_316){
x_288=array<i32,256u>(115,133,150,164,176,184,190,192,191,187,181,172,163,153,143,134,126,120,116,114,114,117,121,127,134,141,148,154,159,162,163,161,157,151,143,134,124,113,103,94,87,82,79,80,84,91,101,114,130,146,164,182,199,215,229,240,249,254,256,254,250,243,233,223,212,200,190,180,172,166,163,161,162,164,169,174,179,185,190,193,195,195,192,188,180,171,161,149,137,125,114,105,97,93,91,93,98,106,117,130,145,161,177,193,208,221,231,239,243,244,242,236,228,218,207,194,181,169,158,148,141,135,132,131,132,135,138,143,147,151,154,155,155,152,146,139,129,118,106,93,80,68,58,49,43,40,41,44,51,61,73,87,103,119,134,149,162,173,181,186,188,186,181,174,164,153,141,128,116,104,94,86,81,77,76,77,80,84,89,94,98,102,104,104,102,98,92,83,73,62,50,38,26,16,8,2,0,0,4,11,21,33,48,64,81,98,114,129,141,151,158,161,161,158,152,144,134,123,112,100,90,81,73,68,65,65,67,70,75,81,87,92,97,101,103,102,100,95,88,79,69,58,47,36,26,18,13,11,11,15,22,32,45,60,77,94);
let x_323:i32=x_288[x_295];
let x_328:f32=(0.06666667*(15.0 - abs(f32((x_299 - x_323)))));
x_332=vec4<f32>(x_328,x_328,x_328,1.0);
x_347_phi=x_332;
x_343_phi=true;
break;
}
var x_363_1:vec2<i32>=x_364;
x_363_1.y=(1+x_295);
let x_363:vec2<i32>=x_363_1;

continuing{
x_364_phi=x_363;
}
}
x_347=x_347_phi;
let x_343:bool=x_343_phi;
x_346_phi=x_347;
if(x_343){
break;
}
x_346_phi=vec4<f32>(0.0,0.0,0.0,1.0);
}
}
let x_346:vec4<f32>=x_346_phi;
x_GLF_color=x_346;
return;
}

struct main_out{
[[location(0)]]
x_GLF_color_1:vec4<f32>;
};

[[stage(fragment)]]
fn main([[builtin(position)]]gl_FragCoord_param:vec4<f32>)->main_out{
gl_FragCoord=gl_FragCoord_param;
main_1();
return main_out(x_GLF_color);
}
